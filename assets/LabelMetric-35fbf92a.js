import{s as y,cP as u,$ as U,lE as M,cN as Y,g as b,ia as B,lF as L,bg as h}from"./index-c2b82012.js";import"./Program-ff225c8c.js";import{t as R}from"./VertexElementDescriptor-2925c6af.js";let p=class d{constructor(t,e,n,r,s,a,o){this.instanceId=t,this.textureKey=e,this.indexStart=n,this.indexCount=r,this.vertexStart=s,this.vertexCount=a,this.overlaps=o}updateBaseOffsets(t){this.vertexStart+=t.vertexFrom,this.indexStart+=t.indexFrom}clone(){return new d(this.instanceId,this.textureKey,this.indexStart,this.indexCount,this.vertexStart,this.vertexCount,this.overlaps)}static write(t,e,n,r,s,a,o,c){t.push(e),t.push(n),t.push(r),t.push(s),t.push(a),t.push(o),t.push(c)}serialize(t){return t.push(this.instanceId),t.push(this.textureKey),t.push(this.indexStart),t.push(this.indexCount),t.push(this.vertexStart),t.push(this.vertexCount),t.push(this.overlaps),t}static deserialize(t){const e=t.readInt32(),n=t.readInt32(),r=t.readInt32(),s=t.readInt32(),a=t.readInt32(),o=t.readInt32(),c=t.readInt32();return new d(e,n,r,s,a,o,c)}};p.byteSizeHint=7*Uint32Array.BYTES_PER_ELEMENT;function m(i,t){if(t!==null){i.push(t.length);for(const e of t)e.serialize(i);return i}i.push(0)}function F(i,t,e){const n=i.readInt32(),r=new Array(n);for(let s=0;s<r.length;s++)r[s]=t.deserialize(i,e);return r}let H=class x{constructor(t,e){this.id=t,this.sortKey=e,this.records=[]}serialize(t){return t.push(this.id),t.writeF32(this.sortKey),m(t,this.records),t}static deserialize(t){const e=t.readInt32(),n=t.readF32(),r=new x(e,n);return r.records=F(t,p)??[],r}};H.byteSizeHint=2*Uint32Array.BYTES_PER_ELEMENT+p.byteSizeHint;const I=()=>U.getLogger("esri.views.2d.engine.webgl.Utils");function W(i){switch(i){case u.UNSIGNED_BYTE:return 1;case u.UNSIGNED_SHORT_4_4_4_4:return 2;case u.FLOAT:return 4;default:return void I().error(new y("webgl-utils",`Unable to handle type ${i}`))}}function K(i){switch(i){case u.UNSIGNED_BYTE:return Uint8Array;case u.UNSIGNED_SHORT_4_4_4_4:return Uint16Array;case u.FLOAT:return Float32Array;default:return void I().error(new y("webgl-utils",`Unable to handle type ${i}`))}}function P(i){const t=new Map;for(const e in i){const n=i[e];let r=0;t.set(e,n.map(s=>{const a=new R(s.name,s.count,s.type,r,0,s.normalized||!1);return r+=s.count*M(s.type),a})),t.get(e).forEach(s=>s.stride=r)}return t}const z=i=>{const t=new Map;for(const e in i)for(const n of i[e])t.set(n.name,n.location);return t},O=i=>{const t={};return i.forEach((e,n)=>t[n]=e!=null&&e.length?e[0].stride:0),t},E=new Map,q=(i,t)=>{if(!E.has(i)){const e=P(t),n={strides:O(e),bufferLayouts:e,attributes:z(t)};E.set(i,n)}return E.get(i)},j=i=>i.includes("data:image/svg+xml");function J(i){const t=[];for(let e=0;e<i.length;e++)t.push(i.charCodeAt(e));return t}function Q(i,t,e){const n=new Y(t.width,t.height);return n.dataType=t.dataType,t.depth&&(n.depth=t.depth),t.flipped&&(n.flipped=t.flipped),t.hasMipmap&&(n.hasMipmap=t.hasMipmap),n.internalFormat=t.internalFormat,t.isImmutable&&(n.isImmutable=t.isImmutable),t.isOpaque&&(n.isOpaque=t.isOpaque),t.maxAnisotropy&&(n.maxAnisotropy=t.maxAnisotropy),n.pixelFormat=t.pixelFormat,t.preMultiplyAlpha&&(n.preMultiplyAlpha=t.preMultiplyAlpha),t.samplingMode&&(n.samplingMode=t.samplingMode),t.target&&(n.target=t.target),n.uniform=t.uniform,t.unpackAlignment&&(n.unpackAlignment=t.unpackAlignment),t.wrapMode&&(n.wrapMode=t.wrapMode),new b(i,n,e)}function V(i){return"url"in i&&"urlHash"in i?{...i,url:""}:i}class f{constructor(t,e,n,r){this.transformedX=0,this.transformedY=0,this.center=B(t,e),this.centerT=L(),this.halfWidth=n/2,this.halfHeight=r/2,this.width=n,this.height=r}get x(){return this.center[0]}get y(){return this.center[1]}get blX(){return this.center[0]+this.halfWidth}get blY(){return this.center[1]+this.halfHeight}get trX(){return this.center[0]-this.halfWidth}get trY(){return this.center[1]-this.halfHeight}get xmin(){return this.x-this.halfWidth}get xmax(){return this.x+this.halfWidth}get ymin(){return this.y-this.halfHeight}get ymax(){return this.y+this.halfHeight}set x(t){this.center[0]=t}set y(t){this.center[1]=t}clone(){return new f(this.x,this.y,this.width,this.height)}serialize(t){return t.writeF32(this.center[0]),t.writeF32(this.center[1]),t.push(this.width),t.push(this.height),t}findCollisionDelta(t,e=4){const n=Math.abs(t.centerT[0]-this.centerT[0]),r=Math.abs(t.centerT[1]-this.centerT[1]),s=(t.halfWidth+this.halfWidth+e)/n,a=(t.halfHeight+this.halfHeight+e)/r,o=Math.min(s,a);return Math.log2(o)}extend(t){const e=Math.min(this.xmin,t.xmin),n=Math.min(this.ymin,t.ymin),r=Math.max(this.xmax,t.xmax)-e,s=Math.max(this.ymax,t.ymax)-n,a=e+r/2,o=n+s/2;this.width=r,this.height=s,this.halfWidth=r/2,this.halfHeight=s/2,this.x=a,this.y=o}static deserialize(t){const e=t.readF32(),n=t.readF32(),r=t.readInt32(),s=t.readInt32();return new f(e,n,r,s)}}const _=new Float32Array(1),v=new Uint32Array(_.buffer);function k(i){return _[0]=i,v[0]}function Z(i,t){return 65535&i|t<<16}function g(i){const t=k(i),e=t>>>31;let n=t>>>23&255,r=8388607&t;return n-=127,n>15?e<<15|31744:n<-25?0:(n<-14&&(r+=8388608,r/=2**(-14-n),n=-15),n+=15,r/=8192,r=D(r,1023),e<<15|n<<10|r)}function D(i,t){const e=Math.floor(i),n=i-e;return e<t&&(n>.5||n===.5&&e%2==1)?e+1:e}function T(i){let t=i>>>15,e=i>>10&31,n=1023&i;return t=t?-1:1,e-=15,n/=1024,e>-15?n+=1:e=-14,t*2**e*n}function $(i,t,e,n){const r=e.packPrecisionFactor??1;switch(e.type){case h.BYTE:if(e.count===1)i.setInt8(n+e.offset,t*r);else for(let s=0;s<e.count;s++){const a=s*Int8Array.BYTES_PER_ELEMENT;i.setInt8(n+e.offset+a,t[s]*r)}break;case h.UNSIGNED_BYTE:if(e.count===1)i.setUint8(n+e.offset,t*r);else for(let s=0;s<e.count;s++){const a=s*Uint8Array.BYTES_PER_ELEMENT;i.setUint8(n+e.offset+a,t[s]*r)}break;case h.SHORT:if(e.count===1)i.setInt16(n+e.offset,t*r,!0);else for(let s=0;s<e.count;s++){const a=s*Int16Array.BYTES_PER_ELEMENT;i.setInt16(n+e.offset+a,t[s]*r,!0)}break;case h.UNSIGNED_SHORT:if(e.count===1)i.setUint16(n+e.offset,t*r,!0);else for(let s=0;s<e.count;s++){const a=s*Uint16Array.BYTES_PER_ELEMENT;i.setUint16(n+e.offset+a,t[s]*r,!0)}break;case h.INT:if(e.count===1)i.setInt32(n+e.offset,t*r,!0);else for(let s=0;s<e.count;s++){const a=s*Int32Array.BYTES_PER_ELEMENT;i.setInt32(n+e.offset+a,t[s]*r,!0)}break;case h.UNSIGNED_INT:if(e.count===1)i.setUint32(n+e.offset,t*r,!0);else for(let s=0;s<e.count;s++){const a=s*Uint32Array.BYTES_PER_ELEMENT;i.setUint32(n+e.offset+a,t[s]*r,!0)}break;case h.FLOAT:if(e.count===1)i.setFloat32(n+e.offset,t*r,!0);else for(let s=0;s<e.count;s++){const a=s*Float32Array.BYTES_PER_ELEMENT;i.setFloat32(n+e.offset+a,t[s]*r,!0)}break;case h.HALF_FLOAT:if(e.count===1)i.setUint16(n+e.offset,g(t*r),!0);else for(let s=0;s<e.count;s++){const a=s*Uint16Array.BYTES_PER_ELEMENT;i.setUint16(n+e.offset+a,g(t[s]*r),!0)}}}function tt(i,t,e){switch(t.type){case h.BYTE:{if(t.count===1)return i.getInt8(e+t.offset);const n=[];for(let r=0;r<t.count;r++){const s=r*Int8Array.BYTES_PER_ELEMENT;n.push(i.getInt8(e+t.offset+s))}return n}case h.UNSIGNED_BYTE:{if(t.count===1)return i.getUint8(e+t.offset);const n=[];for(let r=0;r<t.count;r++){const s=r*Uint8Array.BYTES_PER_ELEMENT;n.push(i.getUint8(e+t.offset+s))}return n}case h.SHORT:{if(t.count===1)return i.getInt16(e+t.offset,!0);const n=[];for(let r=0;r<t.count;r++){const s=r*Int16Array.BYTES_PER_ELEMENT;n.push(i.getInt16(e+t.offset+s,!0))}return n}case h.UNSIGNED_SHORT:{if(t.count===1)return i.getUint16(e+t.offset,!0);const n=[];for(let r=0;r<t.count;r++){const s=r*Uint16Array.BYTES_PER_ELEMENT;n.push(i.getUint16(e+t.offset+s,!0))}return n}case h.INT:{if(t.count===1)return i.getInt32(e+t.offset,!0);const n=[];for(let r=0;r<t.count;r++){const s=r*Int32Array.BYTES_PER_ELEMENT;n.push(i.getInt32(e+t.offset+s,!0))}return n}case h.UNSIGNED_INT:{if(t.count===1)return i.getUint32(e+t.offset,!0);const n=[];for(let r=0;r<t.count;r++){const s=r*Uint32Array.BYTES_PER_ELEMENT;n.push(i.getUint32(e+t.offset+s,!0))}return n}case h.FLOAT:{if(t.count===1)return i.getFloat32(e+t.offset,!0);const n=[];for(let r=0;r<t.count;r++){const s=r*Float32Array.BYTES_PER_ELEMENT;n.push(i.getFloat32(e+t.offset+s,!0))}return n}case h.HALF_FLOAT:{if(t.count===1)return T(i.getUint16(e+t.offset,!0));const n=[];for(let r=0;r<t.count;r++){const s=r*Uint16Array.BYTES_PER_ELEMENT;n.push(T(i.getUint16(e+t.offset+s,!0)))}return n}}}class w{constructor(t,e,n,r,s,a,o,c,l=[]){this.entityTexel=t,this.anchorX=e,this.anchorY=n,this.directionX=r,this.directionY=s,this.maxScale=a,this.minScale=o,this.referenceBounds=c,this.bounds=l}serialize(t){t.push(this.entityTexel),t.writeF32(this.anchorX),t.writeF32(this.anchorY),t.writeF32(this.directionX),t.writeF32(this.directionY),t.writeF32(this.maxScale),t.writeF32(this.minScale),this.referenceBounds===null?(t.writeF32(0),t.writeF32(0),t.writeF32(0)):(t.writeF32(this.referenceBounds.size),t.writeF32(this.referenceBounds.offsetX),t.writeF32(this.referenceBounds.offsetY)),m(t,this.bounds)}static deserialize(t){const e=t.readInt32(),n=t.readF32(),r=t.readF32(),s=t.readF32(),a=t.readF32(),o=t.readF32(),c=t.readF32(),l=t.readF32(),S=t.readF32(),A=t.readF32(),N=F(t,f)??[];return new w(e,n,r,s,a,o,c,{size:l,offsetX:S,offsetY:A},N)}}export{Z as a,Q as b,tt as c,j as d,q as f,J as h,f as i,K as l,F as n,$ as o,W as p,w as r,H as s,p as t,V as y};

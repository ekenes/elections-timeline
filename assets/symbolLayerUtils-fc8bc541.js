import{dk as v,s,U as y,_ as p,dl as l,cW as b,dm as w,aF as f}from"./index-c2b82012.js";let a=h();function h(){return new v(50)}function T(){a=h()}async function $(e,r){var o,t;if((o=e.resource)!=null&&o.href)return _(e.resource.href).then(n=>[n.width,n.height]);if((t=e.resource)!=null&&t.primitive)return r!=null?[r,r]:[256,256];throw new s("symbol3d:invalid-symbol-layer","symbol layers of type Icon must have either an href or a primitive resource")}function _(e){return y(e,{responseType:"image"}).then(r=>r.data)}async function x(e,r=null){var t,n;if(!e.isPrimitive){const i=(t=e.resource)==null?void 0:t.href;if(!i)throw new s("symbol:invalid-resource","The symbol does not have a valid resource");const u=a.get(i);if(u!==void 0)return u;const{fetch:m}=await p(()=>import("./objectResourceUtils-3fc9b6d9.js"),["assets/objectResourceUtils-3fc9b6d9.js","assets/index-c2b82012.js","assets/index-c76e6b87.css","assets/devEnvironmentUtils-5c761adb.js","assets/mat3f64-e19cdcb8.js","assets/mat4f64-9a8384aa.js","assets/AttributeArray-76a36cea.js","assets/requestImageUtils-2e24535e.js","assets/basicInterfaces-cbf2757f.js","assets/TextureFormat-60b88abd.js","assets/Util-c10fdb8c.js","assets/InterleavedLayout-26d4a727.js","assets/BufferView-4428533d.js","assets/types-1305598a.js","assets/NormalAttribute.glsl-e710788c.js","assets/interfaces-d79e913c.js","assets/VertexAttribute-c957ed9e.js","assets/BindType-d21d71dd.js","assets/boundedPlane-e9e703c5.js","assets/sphere-3b34619e.js","assets/plane-4d383c93.js","assets/quatf64-216ddd5a.js","assets/lineSegment-fc392a78.js","assets/renderState-a3d733e6.js","assets/orientedBoundingBox-c40e929c.js","assets/quat-7efbb1da.js","assets/spatialReferenceEllipsoidUtils-b06cb7a2.js","assets/computeTranslationToOriginAndRotation-006d6be4.js","assets/doublePrecisionUtils-e3c3d0d8.js","assets/vec3-77fba0cd.js","assets/vec4-e6da1073.js","assets/indexUtils-0e748c64.js","assets/Indices-242eb313.js","assets/resourceUtils-f9bfbf14.js","assets/NestedMap-b667f687.js","assets/triangle-0ea1f80d.js"]),d=await m(i,{disableTextures:!0,spherical:!0,doublePrecisionRequiresObfuscation:!0}),c=l(d.referenceBoundingBox,f());return a.put(i,c),c}if(!((n=e.resource)!=null&&n.primitive))throw new s("symbol:invalid-resource","The symbol does not have a valid resource");const o=b(w(e.resource.primitive));if(r!=null)for(let i=0;i<o.length;i++)o[i]*=r;return l(o,f())}export{T as clearBoundingBoxCache,$ as computeIconLayerResourceSize,x as computeObjectLayerResourceSize};

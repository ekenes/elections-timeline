import{aa as p,s,aQ as i}from"./index-66a1325f.js";import{l as a}from"./MeshVertexAttributes-b0eb4724.js";import{M as n}from"./vertexSpaceConversion-e3a0e54a.js";import"./mat3f64-e19cdcb8.js";import"./mat4f64-9a8384aa.js";import"./spatialReferenceEllipsoidUtils-8336d24c.js";import"./computeTranslationToOriginAndRotation-093749c8.js";import"./meshVertexSpaceUtils-293da83e.js";import"./MeshLocalVertexSpace-72aa4336.js";import"./vec3-571f550d.js";import"./projection-6e790ef4.js";import"./DoubleArray-1ad021ce.js";import"./BufferView-ba315528.js";import"./vec4-8ba11fd4.js";async function S(t,r,m){await Promise.resolve(),p(m);const o=n(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new a({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{S as convertMeshVertexSpace};
//# sourceMappingURL=convertMeshVertexSpace-31bcf76b.js.map

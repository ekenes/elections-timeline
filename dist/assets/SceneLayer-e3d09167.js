import{r,q as a,w as I,jG as V,fb as Q,lZ as ie,S as E,hE as k,ah as C,bF as R,cG as re,e8 as M,j3 as se,z as v,cq as ae,f8 as oe,c4 as ne,U as Y,a8 as le,s as u,ba as de,_ as q,iU as pe,eP as ue,eE as ce,eF as ye,da as he,eG as fe,eQ as me,eR as ge,aU as we,dd as ve,cC as be,dM as Ie,jt as Le,hD as z,$ as m,bX as Fe,R as Se,g9 as _e,l_ as Te,ai as $e,hF as Oe,fp as J,l$ as Ee,m0 as je,Y as xe,m1 as Ae,hw as K,ct as D,c2 as Pe,fP as Re,m2 as De,m3 as qe,jb as Ue,eW as Ne,hH as Ce,hI as Ge,hJ as H,eI as Ve,m4 as Qe,hN as ke,hL as Me,cy as ze,hO as Je,m5 as Ke,hQ as He}from"./index-c2b82012.js";import{i as We,m as Ze,t as Be}from"./meshSpatialReferenceScaleUtils-5adcf2c4.js";import{R as Xe,V as W}from"./SceneService-c8b3a47f.js";import{s as Ye}from"./associatedFeatureServiceUtils-61c214df.js";import{t as et}from"./capabilities-1a2f6cc3.js";import{p as ee,a as tt,y as it,m as rt}from"./I3SLayerDefinitions-39428c50.js";import{a as st}from"./lazyLayerLoader-823ba02b.js";import{v as at}from"./persistable-7e25b783.js";import{$ as Z,P as ot,w as nt}from"./elevationInfoUtils-38a6b617.js";import{V as lt}from"./I3SUtil-e417e60f.js";import{n as dt,p as pt}from"./popupUtils-4ccc35d5.js";import"./MeshTransform-7d6e6d2a.js";import"./mat4f64-9a8384aa.js";import"./quat-7efbb1da.js";import"./mat3f64-e19cdcb8.js";import"./quatf64-216ddd5a.js";import"./originUtils-cfe4feaf.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./resourceUtils-9018f054.js";import"./resourceUtils-9741259b.js";import"./saveUtils-54061e79.js";import"./resourceExtension-5a49f3a8.js";import"./projectVectorToVector-50e881cf.js";import"./projectPointToVector-7df6f554.js";import"./sphere-3b34619e.js";import"./plane-4d383c93.js";import"./I3SBinaryReader-29f60db6.js";import"./VertexAttribute-c957ed9e.js";import"./floatRGBA-2ce8f0e0.js";import"./NormalAttribute.glsl-e710788c.js";import"./interfaces-d79e913c.js";import"./BindType-d21d71dd.js";import"./orientedBoundingBox-c40e929c.js";import"./spatialReferenceEllipsoidUtils-b06cb7a2.js";import"./computeTranslationToOriginAndRotation-006d6be4.js";function te({associatedLayer:e,serviceUpdateTimeStamp:i}){var p;const t=(p=e==null?void 0:e.editingInfo)==null?void 0:p.lastEditDate,s=e==null?void 0:e.serverGens,o=t!=null,l=i!=null,d=o&&l&&i.lastUpdate!==t.getTime();return o&&(d||!l&&(s==null?void 0:s.minServerGen)!==(s==null?void 0:s.serverGen))}const ut=e=>{let i=class extends e{constructor(){super(...arguments),this.serviceTimeInfo=null}get timeInfo(){var o;const t=(o=this.associatedLayer)==null?void 0:o.timeInfo;if(t==null)return null;const s=t.clone();return k(s,this.fieldsIndex),s}set timeInfo(t){k(t,this.fieldsIndex),this._override("timeInfo",t)}get timeExtent(){var t;return(t=this.associatedLayer)==null?void 0:t.timeExtent}set timeExtent(t){this._override("timeExtent",t)}get timeOffset(){var t;return(t=this.associatedLayer)==null?void 0:t.timeOffset}set timeOffset(t){this._override("timeOffset",t)}get datesInUnknownTimezone(){var t;return((t=this.associatedLayer)==null?void 0:t.datesInUnknownTimezone)??!1}set datesInUnknownTimezone(t){this._override("datesInUnknownTimezone",t)}async loadTimeInfoFromService(t){const{serviceTimeInfo:s}=this;if(s==null)return;const{startTimeField:o,endTimeField:l}=s;if(o==null&&l==null||te({associatedLayer:this.associatedLayer,serviceUpdateTimeStamp:this.serviceUpdateTimeStamp}))return;const d=async f=>{var _;let c=null;try{const L=await((_=this.fetchStatistics)==null?void 0:_.call(this,f,t));c=L==null?void 0:L.stats}catch{}if(c==null)return null;const{minTimeStr:w,min:j,maxTimeStr:x,max:A}=c,S=f===o?w??j:x??A;return S!=null?new Date(S):null},[p,y]=await Promise.all([d(o),d(l)]);if(o!=null&&p==null||l!=null&&y==null)return;const h=new Q({start:p,end:y});this.setAtOrigin("timeInfo",new V({endField:l,startField:o,fullTimeExtent:h}),"service")}};return r([a({type:V,json:{read:!1,write:!1}})],i.prototype,"timeInfo",null),r([a({type:Q,json:{read:!1,write:!1}})],i.prototype,"timeExtent",null),r([a({type:ie,json:{read:!1,write:!1}})],i.prototype,"timeOffset",null),r([a({type:Boolean,nonNullable:!0,json:{read:!1,write:!1}})],i.prototype,"datesInUnknownTimezone",null),r([a({type:F,readOnly:!0,json:{read:{source:"timeInfo"}}})],i.prototype,"serviceTimeInfo",void 0),i=r([I("esri.layers.mixins.TemporalSceneLayer")],i),i};let F=class extends E{constructor(){super(...arguments),this.endTimeField=null,this.startTimeField=null}};r([a({type:String})],F.prototype,"endTimeField",void 0),r([a({type:String})],F.prototype,"startTimeField",void 0),F=r([I("esri.layers.mixins.TemporalSceneLayer.SceneServiceTimeInfo")],F);let g=class extends E{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};r([a({type:String,json:{read:!0,write:{isRequired:!0}}})],g.prototype,"name",void 0),r([a({type:String,json:{read:!0,write:{isRequired:!0}}})],g.prototype,"field",void 0),r([a({type:[Number],json:{read:!0,write:!0}})],g.prototype,"currentRangeExtent",void 0),r([a({type:[Number],json:{read:!0,write:!0}})],g.prototype,"fullRangeExtent",void 0),r([a({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:{isRequired:!0}}})],g.prototype,"type",void 0),g=r([I("esri.layers.support.RangeInfo")],g);var $;let U=$=class extends E.JSONSupportMixin(C.ofType(R)){constructor(e){super(e)}clone(){return new $(this.items.map(e=>e.clone()))}write(e,i){return this.toJSON(i)}toJSON(e){var t,s;const i=(t=e==null?void 0:e.layer)==null?void 0:t.spatialReference;return i?this.toArray().map(o=>{var d;if(!i.equals(o.spatialReference)){if(!re(o.spatialReference,i))return(d=e==null?void 0:e.messages)==null||d.push(new M("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const p=new R;se(o,p,i),o=p}const l=o.toJSON(e);return delete l.spatialReference,l}).filter(o=>o!=null):((s=e==null?void 0:e.messages)==null||s.push(new M("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map(o=>o.toJSON(e)))}static fromJSON(e,i){const t=new $;return e.forEach(s=>t.add(R.fromJSON(s,i))),t}};U=$=r([I("esri.layers.support.PolygonCollection")],U);const O=U;var N;let b=N=class extends E{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new O,this._geometriesSource=null}initialize(){this.addHandles(ae(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,oe))}readGeometries(e,i,t){Array.isArray(e)?this.geometries=O.fromJSON(e,t):this._geometriesSource={url:ne(e,t),context:t}}async loadGeometries(e,i){if(this._geometriesSource==null)return;const{url:t,context:s}=this._geometriesSource,o=await Y(t,{responseType:"json",signal:i==null?void 0:i.signal}),l=e.toJSON(),d=o.data.map(p=>({...p,spatialReference:l}));this.geometries=O.fromJSON(d,s),this._geometriesSource=null}clone(){const e=new N({geometries:le(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};r([a({type:["disjoint","contains"],nonNullable:!0,json:{write:{isRequired:!0}}})],b.prototype,"spatialRelationship",void 0),r([a({type:O,nonNullable:!0,json:{write:!0,origins:{"web-scene":{write:{isRequired:!0}}}}}),at({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],b.prototype,"geometries",void 0),r([v(["web-scene","portal-item"],"geometries")],b.prototype,"readGeometries",null),b=N=r([I("esri.layers.support.SceneFilter")],b);const ct=b;async function yt({fieldName:e,statisticsInfo:i,errorContext:t,fieldsIndex:s,path:o,customParameters:l,apiKey:d,signal:p}){if(i==null)throw new u(`${t}:no-cached-statistics`,"Cached statistics are not available for this layer");const y=s.get(e);if(y==null)throw new u(`${t}:field-unexisting`,`Field '${e}' does not exist on the layer`);const h=i.find(w=>w.name===y.name);if(h==null)throw new u(`${t}:no-cached-statistics`,"Cached statistics for this attribute are not available");const f=de(o,h.href),{data:c}=await Y(f,{query:{f:"json",...l,token:d},responseType:"json",signal:p});return c}async function ht(e){const i=[];for(const t of e)t.name.toLowerCase().endsWith(".zip")?i.push(ft(t)):i.push(Promise.resolve(t));return(await Promise.all(i)).flat()}async function ft(e){const{BlobReader:i,ZipReader:t,BlobWriter:s}=await q(()=>import("./zipjs-wrapper-11a2e080.js"),[]),o=[];return(await new t(new i(e)).getEntries()).forEach(d=>{var h;if(d.directory||/^__MACOS/i.test(d.filename))return;const p=new s,y=(h=d.getData)==null?void 0:h.call(d,p).then(f=>new File([f],d.filename));y&&o.push(y)}),Promise.all(o)}const mt=new Set(["3DObject","Point"]),B=He();let n=class extends ut(pe(Xe(ue(ce(ye(he(fe(me(ge(we.ClonableMixin(ve))))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new C,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(e,i){return typeof e=="string"?{url:e,...i}:e}destroy(){this._set("renderer",null),this.associatedLayer=be(this.associatedLayer)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,i){var s,o,l;const t=(o=(s=this.getFeatureType(i==null?void 0:i.feature))==null?void 0:s.domains)==null?void 0:o[e];return t&&t.type!=="inherited"?t:((l=this.getField(e))==null?void 0:l.domain)??null}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){var e;return((e=this.associatedLayer)==null?void 0:e.types)??[]}get typeIdField(){var e;return((e=this.associatedLayer)==null?void 0:e.typeIdField)??null}get templates(){var e;return((e=this.associatedLayer)==null?void 0:e.templates)??null}get formTemplate(){var e;return((e=this.associatedLayer)==null?void 0:e.formTemplate)??null}get attributeTableTemplate(){var e;return((e=this.associatedLayer)==null?void 0:e.attributeTableTemplate)??null}get fieldsIndex(){return new Ie(this.fields)}readNodePages(e,i,t){return i.layerType==="Point"&&(e=i.pointNodePages),e==null||typeof e!="object"?null:ee.fromJSON(e,t)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){var e;return this._capabilitiesFromAssociatedFeatureLayer((e=this.associatedLayer)==null?void 0:e.effectiveCapabilities)}get effectiveEditingEnabled(){return this.associatedLayer!=null&&Le(this.associatedLayer)}get geometryType(){return gt[this.profile]||"mesh"}set renderer(e){z(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){var e;return this._capabilitiesFromAssociatedFeatureLayer((e=this.associatedLayer)==null?void 0:e.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){var G;e=e??et;const{query:i,queryRelated:t,editing:{supportsGlobalId:s,supportsRollbackOnFailure:o,supportsUploadWithItemId:l,supportsGeometryUpdate:d,supportsReturnServiceEditsInSourceSpatialReference:p},data:{supportsZ:y,supportsM:h,isVersioned:f,supportsAttachment:c},operations:{supportsEditing:w,supportsAdd:j,supportsUpdate:x,supportsDelete:A,supportsQuery:S,supportsQueryAttachments:_,supportsAsyncConvert3D:L}}=e,T=e.operations.supportsChangeTracking,P=!!((G=this.associatedLayer)!=null&&G.infoFor3D);return{query:i,queryRelated:t,editing:{supportsGlobalId:s,supportsReturnServiceEditsInSourceSpatialReference:p,supportsRollbackOnFailure:o,supportsGeometryUpdate:P&&d,supportsUploadWithItemId:l},data:{supportsAttachment:c,supportsZ:y,supportsM:h,isVersioned:f},operations:{supportsQuery:S,supportsQueryAttachments:_,supportsEditing:w&&T,supportsAdd:P&&j&&T,supportsDelete:P&&A&&T,supportsUpdate:x&&T,supportsAsyncConvert3D:L}}}get editingEnabled(){var e;return this._isOverridden("editingEnabled")?this._get("editingEnabled"):((e=this.associatedLayer)==null?void 0:e.editingEnabled)??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){var e;return((e=this.associatedLayer)==null?void 0:e.infoFor3D)??null}get relationships(){var e;return(e=this.associatedLayer)==null?void 0:e.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,i){return!e&&i.fields&&i.fields.some(t=>(t.type==="esriFieldTypeOID"&&(e=t.name),!!e)),e||void 0}readGlobalIdField(e,i){return!e&&i.fields&&i.fields.some(t=>(t.type==="esriFieldTypeGlobalID"&&(e=t.name),!!e)),e||void 0}get displayField(){var e;return((e=this.associatedLayer)==null?void 0:e.displayField)??null}readProfile(e,i){const t=i.store.profile;return t!=null&&X[t]?X[t]:(m.getLogger(this).error("Unknown or missing profile",{profile:t,layer:this}),"mesh-pyramids")}get useViewTime(){var e;return((e=this.associatedLayer)==null?void 0:e.useViewTime)??!0}set useViewTime(e){this._override("useViewTime",e)}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const i=e!=null?e.signal:null;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(Fe),await this._fetchService(i),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,i),this._setAssociatedFeatureLayer(i),this._loadFilterGeometries()]),this._validateElevationInfo(),this._applyAssociatedLayerOverrides(),this._populateFieldUsageInfo(),await this.loadTimeInfoFromService(e),await Se(this,{origin:"service"},i),z(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e)}async beforeSave(){this.filter!=null&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){m.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){const e=new _e;return this.geometryType==="mesh"?this.capabilities.query.supportsReturnMesh&&(e.returnGeometry=!0):(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,i){return this._getAssociatedLayerForQuery().then(t=>t.queryExtent(e||this.createQuery(),i))}queryFeatureCount(e,i){return this._getAssociatedLayerForQuery().then(t=>t.queryFeatureCount(e||this.createQuery(),i))}queryFeatures(e,i){return this._getAssociatedLayerForQuery().then(t=>t.queryFeatures(e||this.createQuery(),i)).then(t=>{if(t!=null&&t.features)for(const s of t.features)s.layer=this,s.sourceLayer=this;return t})}async queryRelatedFeatures(e,i){if(await this.load(),!this.associatedLayer)throw new u("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,i)}async queryRelatedFeaturesCount(e,i){if(await this.load(),!this.associatedLayer)throw new u("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,i)}async queryCachedAttributes(e,i){var s;const t=Te(this.fieldsIndex,await dt(this,pt(this)));return lt(((s=this.parsedUrl)==null?void 0:s.path)??"",this.attributeStorageInfo??[],e,i,t,this.apiKey,this.customParameters)}async queryCachedFeature(e,i){const t=await this.queryCachedAttributes(e,[i]);if(!t||t.length===0)throw new u("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const s=new $e;return s.attributes=t[0],s.layer=this,s.sourceLayer=this,s}queryObjectIds(e,i){return this._getAssociatedLayerForQuery().then(t=>t.queryObjectIds(e||this.createQuery(),i))}queryAttachments(e,i){return this._getAssociatedLayerForQuery().then(t=>t.queryAttachments(e,i))}getFieldUsageInfo(e){const i={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||i:(m.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),i)}createPopupTemplate(e){return Oe(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e!=null&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new u("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new u("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some(i=>i.name===e)}async queryCachedStatistics(e,i){return await this.load(i),await this.fetchStatistics(e,i)}async saveAs(e,i){return this._debouncedSaveOperations(W.SAVE_AS,{...i,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(W.SAVE,e)}async applyEdits(e,i){const{applyEdits:t}=await q(()=>import("./editingSupport-fcbf6c06.js"),["assets/editingSupport-fcbf6c06.js","assets/index-c2b82012.js","assets/index-c76e6b87.css"]);let s=i;await this.load();const o=this.associatedLayer;if(!o)throw new u(`${this.type}-layer:not-editable`,"Service is not editable");await o.load();const{globalIdField:l}=o,d=!!o.infoFor3D,p=(s==null?void 0:s.globalIdUsed)??!0;if(d&&l==null)throw new u(`${this.type}-layer:not-editable`,"Valid globalIdField expected on editable SceneLayer");if(d&&!p)throw new u(`${this.type}-layer:globalid-required`,"globalIdUsed must not be false for SceneLayer editing as globalIds are required.");return J(o.url)&&d&&e.deleteFeatures!=null&&l!=null&&(s={...s,globalIdToObjectId:await Ee(o,e.deleteFeatures,l)}),t(this,o.source,e,s)}async uploadAssets(e,i){if(await this.load(),this.associatedLayer==null)throw new u(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,i)}on(e,i){return super.on(e,i)}async convertMesh(e,i){i??(i={});const t=c=>{throw m.getLogger(this).error(".convertMesh()",c.message),c};await this.load(),this.infoFor3D||t(new u("invalid:layer","SceneLayer has no capability for mesh conversion"));const s=await this.extractAndFilterFiles(e),o=s.reduce((c,w)=>je(this.infoFor3D,w)?c+1:c,0);o===0&&t(new We),o>1&&t(new Ze);const l=this.spatialReference,d=i.location??new xe({x:0,y:0,z:0,spatialReference:l}),p=d.spatialReference.isGeographic?"local":"georeferenced",{default:y}=await q(()=>import("./Mesh-c438e612.js").then(c=>c.M),["assets/Mesh-c438e612.js","assets/index-c2b82012.js","assets/index-c76e6b87.css","assets/MeshTransform-7d6e6d2a.js","assets/mat4f64-9a8384aa.js","assets/quat-7efbb1da.js","assets/mat3f64-e19cdcb8.js","assets/quatf64-216ddd5a.js","assets/MeshVertexAttributes-8200cbd6.js","assets/MeshLocalVertexSpace-da2d5a3a.js","assets/meshVertexSpaceUtils-9f59c7fe.js","assets/earcut-5a6c70eb.js","assets/Indices-242eb313.js","assets/plane-4d383c93.js","assets/deduplicate-bb0c8138.js","assets/projectPointToVector-7df6f554.js","assets/vertexSpaceConversion-af1c76ec.js","assets/spatialReferenceEllipsoidUtils-b06cb7a2.js","assets/computeTranslationToOriginAndRotation-006d6be4.js","assets/vec3-77fba0cd.js","assets/BufferView-4428533d.js","assets/vec4-e6da1073.js","assets/External-15867918.js"]),h=y.createWithExternalSource(d,s,{vertexSpace:p,transform:Be(d.spatialReference),unitConversionDisabled:!0}),[f]=await this.uploadAssets([h],{...i,useAssetOrigin:!i.location});return f}async extractAndFilterFiles(e){await this.load();const i=this.infoFor3D;return i?(await ht(e)).filter(t=>Ae(i,t)):e}validateLayer(e){if(e.layerType&&!mt.has(e.layerType))throw new u("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new u("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new u("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function i(t,s){let o=!1,l=!1;if(t==null)o=!0,l=!0;else{const d=s&&s.isGeographic;switch(t){case"east-north-up":case"earth-centered":o=!0,l=d;break;case"vertex-reference-frame":o=!0,l=!d;break;default:o=!1}}if(!o)throw new u("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!l)throw new u("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}i(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new u("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){var e,i,t;if(this._fieldUsageInfo={},this.fields)for(const s of this.fields){const o=!!((e=this.attributeStorageInfo)!=null&&e.some(p=>p.name===s.name)),l=!!((t=(i=this.associatedLayer)==null?void 0:i.fields)!=null&&t.some(p=>p&&s.name===p.name)),d={supportsLabelingInfo:o,supportsRenderer:o,supportsPopupTemplate:o||l,supportsLayerQuery:l};this._fieldUsageInfo[s.name]=d}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){var i;if(!((i=this.associatedLayer)!=null&&i.fields))return;let e=null;for(const t of this.associatedLayer.fields){const s=this.getField(t.name);s?(!s.domain&&t.domain&&(s.domain=t.domain.clone()),s.editable=t.editable,s.nullable=t.nullable,s.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],i=K(this);for(let t=0;t<e.length;t++){const s=e[t],o=this.originIdOf(s),l=this.associatedLayer.originIdOf(s);o<l&&(l===D.SERVICE||l===D.PORTAL_ITEM)&&i.setAtOrigin(s,this.associatedLayer[s],l)}}_applyAssociatedLayerExtentOverride(){var i,t,s;const e=(i=this.associatedLayer)==null?void 0:i.getAtOrigin("fullExtent","service");((t=this.associatedLayer)==null?void 0:t.infoFor3D)==null||!e||!J((s=this.associatedLayer)==null?void 0:s.url)||!te(this)||K(this).setAtOrigin("fullExtent",e.clone(),D.SERVICE)}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:i,layerId:t,portalItem:s}=await Ye(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,customParameters:this.customParameters,apiKey:this.apiKey,signal:e}),o=await st.FeatureLayer();this.associatedLayer=new o({url:i,customParameters:this.customParameters,layerId:t,portalItem:s}),await this.associatedLayer.load()}catch(i){Pe(i)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await Re(()=>this.popupEnabled&&this.popupTemplate!=null);const e=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?m.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):m.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;this.profile==="mesh-pyramids"&&Z(m.getLogger(this),ot("Mesh scene layers","relative-to-scene",e)),Z(m.getLogger(this),nt("Scene layers",e))}async fetchStatistics(e,i){var t;return await yt({fieldName:e,statisticsInfo:this.statisticsInfo,errorContext:"scenelayer",fieldsIndex:this.fieldsIndex,path:((t=this.parsedUrl)==null?void 0:t.path)??"",customParameters:this.customParameters,apiKey:this.apiKey,signal:i==null?void 0:i.signal})}};r([a({types:{key:"type",base:De,typeMap:{selection:qe}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],n.prototype,"featureReduction",void 0),r([a({type:[g],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],n.prototype,"rangeInfos",void 0),r([a({json:{read:!1}})],n.prototype,"associatedLayer",void 0),r([a({type:["show","hide"]})],n.prototype,"listMode",void 0),r([a({type:["ArcGISSceneServiceLayer"]})],n.prototype,"operationalLayerType",void 0),r([a({json:{read:!1},readOnly:!0})],n.prototype,"type",void 0),r([a({...B.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],n.prototype,"fields",void 0),r([a()],n.prototype,"types",null),r([a()],n.prototype,"typeIdField",null),r([a()],n.prototype,"templates",null),r([a()],n.prototype,"formTemplate",null),r([a()],n.prototype,"attributeTableTemplate",null),r([a({readOnly:!0,clonable:!1})],n.prototype,"fieldsIndex",null),r([a({type:Ue,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],n.prototype,"floorInfo",void 0),r([a(B.outFields)],n.prototype,"outFields",void 0),r([a({type:ee,readOnly:!0,json:{read:!1}})],n.prototype,"nodePages",void 0),r([v("service","nodePages",["nodePages","pointNodePages"])],n.prototype,"readNodePages",null),r([a({type:[tt],readOnly:!0})],n.prototype,"materialDefinitions",void 0),r([a({type:[it],readOnly:!0})],n.prototype,"textureSetDefinitions",void 0),r([a({type:[rt],readOnly:!0})],n.prototype,"geometryDefinitions",void 0),r([a({readOnly:!0})],n.prototype,"serviceUpdateTimeStamp",void 0),r([a({readOnly:!0})],n.prototype,"attributeStorageInfo",void 0),r([a({readOnly:!0})],n.prototype,"statisticsInfo",void 0),r([a({type:C.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],n.prototype,"excludeObjectIds",void 0),r([a({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],n.prototype,"definitionExpression",void 0),r([a({type:ct,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],n.prototype,"filter",void 0),r([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],n.prototype,"path",void 0),r([a(Ne)],n.prototype,"elevationInfo",null),r([a({readOnly:!0,json:{read:!1}})],n.prototype,"effectiveCapabilities",null),r([a({readOnly:!0})],n.prototype,"effectiveEditingEnabled",null),r([a({type:String})],n.prototype,"geometryType",null),r([a(Ce)],n.prototype,"labelsVisible",void 0),r([a({type:[Ge],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:H},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:H},write:!0}})],n.prototype,"labelingInfo",void 0),r([a(Ve)],n.prototype,"legendEnabled",void 0),r([a({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,i){var s,o;if(typeof e=="number"&&e>=0&&e<=1)return e;const t=(o=(s=i.layerDefinition)==null?void 0:s.drawingInfo)==null?void 0:o.transparency;return t!==void 0?Qe(t):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],n.prototype,"opacity",void 0),r([a({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],n.prototype,"priority",void 0),r([a({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],n.prototype,"semantic",void 0),r([a({types:ke,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],n.prototype,"renderer",null),r([a({json:{read:!1}})],n.prototype,"cachedDrawingInfo",void 0),r([v("service","cachedDrawingInfo")],n.prototype,"readCachedDrawingInfo",null),r([a({readOnly:!0,json:{read:!1}})],n.prototype,"capabilities",null),r([a({type:Boolean,json:{read:!1}})],n.prototype,"editingEnabled",null),r([a({readOnly:!0,json:{write:!1,read:!1}})],n.prototype,"infoFor3D",null),r([a({readOnly:!0,json:{write:!1,read:!1}})],n.prototype,"relationships",null),r([a(Me)],n.prototype,"popupEnabled",void 0),r([a({type:ze,json:{name:"popupInfo",write:!0}})],n.prototype,"popupTemplate",void 0),r([a({readOnly:!0,json:{read:!1}})],n.prototype,"defaultPopupTemplate",null),r([a({type:String,json:{read:!1}})],n.prototype,"objectIdField",void 0),r([v("service","objectIdField",["objectIdField","fields"])],n.prototype,"readObjectIdField",null),r([a({type:String,json:{read:!1}})],n.prototype,"globalIdField",void 0),r([v("service","globalIdField",["globalIdField","fields"])],n.prototype,"readGlobalIdField",null),r([a({readOnly:!0,type:String,json:{read:!1}})],n.prototype,"displayField",null),r([a({type:String,json:{read:!1}})],n.prototype,"profile",void 0),r([v("service","profile",["store.profile"])],n.prototype,"readProfile",null),r([a({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],n.prototype,"normalReferenceFrame",void 0),r([a(Je)],n.prototype,"screenSizePerspectiveEnabled",void 0),r([a({json:{read:!1,origins:{service:{read:!0}}}})],n.prototype,"serviceItemId",void 0),r([a(Ke)],n.prototype,"useViewTime",null),n=r([I("esri.layers.SceneLayer")],n);const X={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},gt={"mesh-pyramids":"mesh",points:"point"},ei=n;export{ei as default};

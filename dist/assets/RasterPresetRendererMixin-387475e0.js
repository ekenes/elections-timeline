import{D as te,H as ae,G as ie,U as u,B as J,C as se,cx as ne,Y as k,aU as re,S as le,r as n,q as l,aW as oe,ff as ue,w as L}from"./index-c2b82012.js";import{n as de,a as pe}from"./RasterSymbolizer-4caa33d2.js";import{l as ce,d as me}from"./ImageHistogramParameters-c824bf14.js";async function B(t,a,d){var I,N,M,j,P,C,O,q,z,F;const D=te(t),{rasterFunction:g,sourceJSON:E}=a||{},U=g?JSON.stringify(g.rasterFunctionDefinition||g):null,W=ae({...D.query,renderingRule:U,f:"json"}),o=ie(W,d);t=D.path;const e=E||await u(t,o).then(i=>i.data),Y=e.hasRasterAttributeTable?u(`${t}/rasterAttributeTable`,o):null,A=e.hasColormap?u(`${t}/colormap`,o):null,X=e.hasHistograms?u(`${t}/histograms`,o):null,G=e.currentVersion>=10.3?u(`${t}/keyProperties`,o):null,K=e.hasMultidimensions?u(`${t}/multidimensionalInfo`,o):null,s=await Promise.allSettled([Y,A,X,G,K]);let x=null;if(e.minValues&&e.minValues.length===e.bandCount){x=[];for(let i=0;i<e.minValues.length;i++)x.push({min:e.minValues[i],max:e.maxValues[i],avg:e.meanValues[i],stddev:e.stdvValues[i]})}const V=J.fromJSON(e.extent),$=Math.ceil(V.width/e.pixelSizeX-.1),T=Math.ceil(V.height/e.pixelSizeY-.1),b=se.fromJSON(e.spatialReference||e.extent.spatialReference),m=s[0].status==="fulfilled"?(I=s[0].value)==null?void 0:I.data:null,Q=(N=m==null?void 0:m.features)!=null&&N.length?ne.fromJSON(m):null,f=s[1].status==="fulfilled"?(M=s[1].value)==null?void 0:M.data.colormap:null,Z=f!=null&&f.length?f:null,h=s[2].status==="fulfilled"?(j=s[2].value)==null?void 0:j.data.histograms:null,_=(C=(P=h==null?void 0:h[0])==null?void 0:P.counts)!=null&&C.length?h:null,p=s[3].status==="fulfilled"?((O=s[3].value)==null?void 0:O.data)??{}:{},y=s[4].status==="fulfilled"?(q=s[4].value)==null?void 0:q.data.multidimensionalInfo:null,w=(z=y==null?void 0:y.variables)!=null&&z.length?y:null;w&&w.variables.forEach(i=>{var H;(H=i.statistics)!=null&&H.length&&i.statistics.forEach(v=>{v.avg=v.mean,v.stddev=v.standardDeviation})});const{defaultVariable:R,serviceDataType:c}=e;R&&R!==p.DefaultVariable&&(p.DefaultVariable=R),c!=null&&c.includes("esriImageServiceDataTypeVector")&&!c.includes(p.DataType)&&(p.DataType=c.replace("esriImageServiceDataType",""));let S=e.noDataValue;(F=e.noDataValues)!=null&&F.length&&e.noDataValues.some(i=>i!==S)&&(S=e.noDataValues);const ee=e.transposeInfo?new de({blockWidth:256,blockHeight:256,pyramidBlockWidth:256,pyramidBlockHeight:256,pyramidScalingFactor:2,compression:"lerc",origin:new k({x:e.extent.xmin,y:e.extent.ymax,spatialReference:b}),firstPyramidLevel:1,maximumPyramidLevel:Math.max(0,Math.round(Math.log(Math.max($,T))/Math.LN2-8)),transposeInfo:e.transposeInfo}):void 0;return new pe({width:$,height:T,bandCount:e.bandCount,extent:J.fromJSON(e.extent),spatialReference:b,pixelSize:new k({x:e.pixelSizeX,y:e.pixelSizeY,spatialReference:b}),pixelType:e.pixelType.toLowerCase(),statistics:x,attributeTable:Q,colormap:Z,histograms:_,keyProperties:p,noDataValue:S,multidimensionalInfo:w,storageInfo:ee})}function ge(t,a,d){return B(t,{sourceJSON:a},d)}function xe(t,a,d){return B(t,{rasterFunction:a},d)}function be(t,a){t.attributeTable||(a.hasRasterAttributeTable=!1),t.histograms||(a.hasHistograms=!1),t.colormap||(a.hasColormap=!1),t.multidimensionalInfo||(a.hasMultidimensions=!1)}let r=class extends re.ClonableMixin(le){constructor(t){super(t),this.name=void 0,this.method="none",this.value=void 0,this.bandIds=void 0,this.renderer=void 0}};n([l({type:String,json:{write:{isRequired:!0}}})],r.prototype,"name",void 0),n([l({type:["raster-function-template","variable","none"],json:{write:{isRequired:!0}}}),oe({rasterFunctionTemplate:"raster-function-template",variable:"variable",none:"none"})],r.prototype,"method",void 0),n([l({type:String,json:{write:{isRequired:!0}}})],r.prototype,"value",void 0),n([l({type:[ue],json:{write:{isRequired:!0}}})],r.prototype,"bandIds",void 0),n([l({types:ce,json:{write:!0,origins:{"web-scene":{types:me,write:{overridePolicy:t=>({enabled:t&&t.type!=="vector-field"&&t.type!=="flow"})}}}}})],r.prototype,"renderer",void 0),r=n([L("esri.renderers.support.RasterPresetRenderer")],r);const fe=r,we=t=>{let a=class extends t{constructor(){super(...arguments),this.activePresetRendererName=null,this.presetRenderers=null}};return n([l({type:String,json:{name:"layerDefinition.activePresetRendererName",write:{allowNull:!0}}})],a.prototype,"activePresetRendererName",void 0),n([l({type:[fe],json:{name:"layerDefinition.presetRenderers",write:!0}})],a.prototype,"presetRenderers",void 0),a=n([L("esri.layers.mixins.RasterPresetRendererMixin")],a),a};export{be as c,ge as f,we as o,xe as p};

{"version":3,"file":"observers-44e1ce93.js","sources":["../../node_modules/@esri/calcite-components/dist/components/observers.js"],"sourcesContent":["/*!\n * All material copyright ESRI, All Rights Reserved, unless otherwise specified.\n * See https://github.com/Esri/calcite-design-system/blob/dev/LICENSE.md for details.\n * v2.10.1\n */\nimport { Build } from '@stencil/core/internal/client/index.js';\n\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nfunction createObserver(type, callback, options) {\n    if (!Build.isBrowser) {\n        return undefined;\n    }\n    const Observer = getObserver(type);\n    return new Observer(callback, options);\n}\nfunction getObserver(type) {\n    // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n    class ExtendedMutationObserver extends window.MutationObserver {\n        constructor(callback) {\n            super(callback);\n            this.observedEntry = [];\n            this.callback = callback;\n        }\n        observe(target, options) {\n            this.observedEntry.push({ target, options });\n            return super.observe(target, options);\n        }\n        unobserve(target) {\n            const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n            this.observedEntry = [];\n            this.callback(super.takeRecords(), this);\n            this.disconnect();\n            newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n        }\n    }\n    return (function () {\n        return (type === \"intersection\"\n            ? window.IntersectionObserver\n            : type === \"mutation\"\n                ? ExtendedMutationObserver\n                : window.ResizeObserver);\n    })();\n}\n\nexport { createObserver as c };\n\n//# sourceMappingURL=observers.js.map"],"names":["createObserver","type","callback","options","Observer","getObserver","ExtendedMutationObserver","target","newObservedEntries","observed"],"mappings":"4BAAA;AAAA;AAAA;AAAA;AAAA,GAcA,SAASA,EAAeC,EAAMC,EAAUC,EAAS,CAI7C,MAAMC,EAAWC,EAAYJ,CAAI,EACjC,OAAO,IAAIG,EAASF,EAAUC,CAAO,CACzC,CACA,SAASE,EAAYJ,EAAM,CAEvB,MAAMK,UAAiC,OAAO,gBAAiB,CAC3D,YAAYJ,EAAU,CAClB,MAAMA,CAAQ,EACd,KAAK,cAAgB,GACrB,KAAK,SAAWA,CACnB,CACD,QAAQK,EAAQJ,EAAS,CACrB,YAAK,cAAc,KAAK,CAAE,OAAAI,EAAQ,QAAAJ,CAAS,CAAA,EACpC,MAAM,QAAQI,EAAQJ,CAAO,CACvC,CACD,UAAUI,EAAQ,CACd,MAAMC,EAAqB,KAAK,cAAc,OAAQC,GAAaA,EAAS,SAAWF,CAAM,EAC7F,KAAK,cAAgB,GACrB,KAAK,SAAS,MAAM,YAAa,EAAE,IAAI,EACvC,KAAK,WAAU,EACfC,EAAmB,QAASC,GAAa,KAAK,QAAQA,EAAS,OAAQA,EAAS,OAAO,CAAC,CAC3F,CACJ,CACD,OAAQ,UAAY,CAChB,OAAQR,IAAS,eACX,OAAO,qBACPA,IAAS,WACLK,EACA,OAAO,cACzB,GACA","x_google_ignoreList":[0]}
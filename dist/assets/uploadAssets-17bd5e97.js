import{s as g,K as N,gu as es,e as ts,hH as D,d0 as v,hI as S,bE as h,U as m,cT as p,dX as os,aJ as rs,hJ as as,aL as U,hb as ns,aM as is,d1 as cs,h6 as ls,o as ps}from"./index-7df220b7.js";import{h as us,N as ds,i as k,o as B,A as ms}from"./FeatureLayerSource-8182d0a8.js";import"./mat4f64-1413b4a7.js";import"./MeshGeoreferencedRelativeVertexSpace-ecd5dc0a.js";import"./vec32-7df98f6c.js";import"./editingSupport-9ab763e5.js";import"./clientSideDefaults-0ebeb30d.js";import"./QueryEngineCapabilities-85c4f1d0.js";import"./QueryTask-0ade8a2a.js";import"./executeForIds-0253699b.js";import"./query-fdfcc742.js";import"./pbfQueryUtils-dcc91ddc.js";import"./pbf-3727d532.js";import"./OptimizedGeometry-d94e541f.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./executeQueryJSON-76aa4742.js";import"./executeQueryPBF-2c6a92a0.js";import"./featureConversionUtils-7b0c7dc1.js";const w="upload-assets",y=()=>new Error;class fs extends g{constructor(){super(`${w}:unsupported`,"Layer does not support asset uploads.",y())}}class hs extends g{constructor(){super(`${w}:no-glb-support`,"Layer does not support glb.",y())}}let gs=class extends g{constructor(){super(`${w}:no-supported-source`,"No supported external source found",y())}},ws=class extends g{constructor(){super(`${w}:not-base-64`,"Expected gltf data in base64 format after conversion.",y())}},ys=class extends g{constructor(){super(`${w}:unable-to-prepare-options`,"Unable to prepare uploadAsset request options.",y())}};class bs extends g{constructor(t,s){super(`${w}:bad-response`,`Bad response. Uploaded ${t} items and received ${s} results.`,y())}}let Ps=class extends g{constructor(t,s){super(`${w}-layer:upload-failed`,`Failed to upload mesh file ${t}. Error code: ${(s==null?void 0:s.code)??"-1"}. Error message: ${(s==null?void 0:s.messages)??"unknown"}`,y())}};class O extends g{constructor(t){super(`${w}-layer:unsupported-format`,`The service allowed us to upload an asset of FormatID ${t}, but it does not list it in its supported formats.`,y())}}let Ts=class extends g{constructor(){super(`${w}:convert3D-failed`,"convert3D failed.")}};const F={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};function b(e,t=o=>{},s){return new As(e,t,s)}class As{constructor(t,s=r=>{},o){if(this.onProgress=s,this.taskName=o,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,typeof t=="number"){this._weights={};for(let r=0;r<t;r++){const a=r,n=1/t;this._weights[a]=n,this._progressMap.set(a,0)}}else this._weights=t;this.emitProgress()}emitProgress(){let t=0;for(const[s,o]of this._progressMap.entries())t+=o*this._weights[s];if(t===1&&N("enable-feature:esri-3dofl-upload-timings")){const s=Math.round(performance.now()-(this._startTime??0))/1e3;console.log(`${this.taskName} done in ${s} sec`);for(const[o,r]of this._timingsMap){const a=Math.round(r.end-r.start)/1e3,n=Math.round(a/s*100);console.log(this.taskName??"Task",{stepKey:o,stepTime:a,relativeTime:n})}}this.onProgress(t)}setProgress(t,s){if(this._progressMap.set(t,s),N("enable-feature:esri-3dofl-upload-timings")){const o=performance.now();this._startTime??(this._startTime=o);const r=es(this._timingsMap,t,()=>({start:o,end:0}));s===1&&(r.end=o)}this.emitProgress()}simulate(t,s){return q(o=>this.setProgress(t,o),s)}makeOnProgress(t){return s=>this.setProgress(t,s)}}function q(e=s=>{},t=Es){const s=performance.now();e(0);const o=setInterval(()=>{const r=performance.now()-s,a=1-Math.exp(-r/t);e(a)},Ms);return ts(()=>{clearInterval(o),e(1)})}function $s(e,t=vs){return D(S(e*C/t))}function xs(e,t=Fs){return D(S(e*C/t))}const vs=10,Fs=10,C=8e-6,Ms=v(50),Es=v(1e3),L=1e6,_=20*L,js=2e9,Is=3;async function Ns({data:e,name:t,description:s},o,r){let a=null;try{const n=h(o,"uploads"),i=h(n,"info"),{data:c}=await m(i,{query:{f:"json"},responseType:"json"});p(r);const u=os(o),l=c.maxUploadFileSize*L,f=u?js:l,x=u?Math.min(_,l):_;if(e.size>f)throw new Error("Data too large");const G=h(n,"register"),{data:M}=await m(G,{query:{f:"json",itemName:_s(t),description:s},responseType:"json",method:"post"});if(p(r),!M.success)throw new Error("Registration failed");const{itemID:K}=M.item;a=h(n,K);const W=h(a,"uploadPart"),E=Math.ceil(e.size/x),P=new Array;for(let d=0;d<E;++d)P.push(e.slice(d*x,Math.min((d+1)*x,e.size)));const T=P.slice().reverse(),j=new Array,V=b(E,r==null?void 0:r.onProgress,"uploadItem"),X=async()=>{for(;T.length!==0;){const d=P.length-T.length,A=T.pop(),$=new FormData,Y=V.simulate(d,$s(A.size));try{const Z=A;$.append("f","json"),$.append("file",Z),$.append("partId",`${d}`);const{data:ss}=await m(W,{timeout:0,body:$,responseType:"json",method:"post"});if(p(r),!ss.success)throw new Error("Part upload failed")}finally{Y.remove()}}};for(let d=0;d<Is&&T.length!==0;++d)j.push(X());await Promise.all(j);const Q=h(a,"commit"),{data:I}=await m(Q,{query:{f:"json",parts:P.map((d,A)=>A).join(",")},responseType:"json",method:"post"});if(p(r),!I.success)throw new Error("Commit failed");return I.item}catch(n){if(a!=null){const i=h(a,"delete");await m(i,{query:{f:"json"},responseType:"json",method:"post"})}throw n}}function _s(e){return e.replaceAll("/","_").replaceAll("\\","_")}async function Ae(e,t,s){var a;const o=e.length;if(!o)return(a=s==null?void 0:s.onProgress)==null||a.call(s,1),[];const r=b(o,s==null?void 0:s.onProgress,"uploadAssets");return Promise.all(e.map((n,i)=>Ds(n,t,{...s,onProgress:r.makeOnProgress(i)})))}async function Ds(e,{layer:t,ongoingUploads:s},o){var n;const r=s.get(e);if(r)return r;if(!Xs(t))throw new fs;if(Ss(e,t))return(n=o==null?void 0:o.onProgress)==null||n.call(o,1),e;const a=Us(e,t,o);s.set(e,a);try{await a}finally{s.delete(e)}return e}function Ss(e,t){const{parsedUrl:s}=t;return s!=null&&e.metadata.externalSources.some(o=>us(o,s))}async function Us(e,t,s){const{metadata:o}=e,{displaySource:r}=o,a=R(r==null?void 0:r.source,t),n=!!a,i=o.externalSources.length>0,c=n?ks(a,t,s):i?Bs(e,t,s):Os(e,t,s),u=await c;return p(s),e.addExternalSources([u]),e}async function ks(e,t,s){return{source:await z(e,t,s),original:!0}}async function Bs(e,t,s){const o=J(t),{externalSources:r}=e.metadata,a=Cs(r,t);if(!a)throw new gs;const n=b(F.uploadConvertibleSource,s==null?void 0:s.onProgress,"uploadConvertibleSource"),i=await z(a,t,{onProgress:n.makeOnProgress("uploadEditSource")});e.addExternalSources([{source:i,original:!0}]);const c=a.reduce((l,{asset:f})=>f instanceof File?l+f.size:l,0),u=n.simulate("serviceAssetsToGlb",xs(c));try{return{source:await Ks(i,t,o)}}finally{u.remove()}}async function Os(e,t,s){const o=b(F.uploadLocalMesh,s==null?void 0:s.onProgress,"uploadLocalMesh"),r=qs(e,t,{...s,onProgress:o.makeOnProgress("meshToAssetBlob")});return{source:await H([r],t,{...s,onProgress:o.makeOnProgress("uploadAssetBlobs")}),extent:e.extent.clone(),original:!0}}async function qs(e,t,s){const o=J(t),r=await e.load(s),a=await r.toBinaryGLTF({ignoreLocalTransform:!0});p(s);const n=await a.buffer();return p(s),{blob:new Blob([n.data],{type:n.type}),assetName:`${rs()}.glb`,assetType:o}}function Cs(e,t){for(const s of e){const o=R(s.source,t);if(o)return o}return null}function R(e,t){if(!e)return null;const{infoFor3D:{supportedFormats:s,editFormats:o}}=t,r=ms(e),a=new Array;let n=!1;for(let i=0;i<r.length;++i){const c=Ls(r[i],s);if(!c)return null;o.includes(c.assetType)&&(n=!0),a.push(c)}return n?a:null}function Ls(e,t){const s=ds(e,t);return s?{asset:e,assetType:s}:null}async function z(e,t,s){return H(e.map(o=>Rs(o,s)),t,s)}async function H(e,t,s){const o=b(F.uploadAssetBlobs,s==null?void 0:s.onProgress,"uploadAssetBlobs"),r=await Hs(e,t,{...s,onProgress:o.makeOnProgress("prepareAssetItems")});p(s);const a=r.map(({item:i})=>i),{uploadResults:n}=await Js(a,t,{...s,onProgress:o.makeOnProgress("uploadAssetItems")});return p(s),e.map((i,c)=>Gs(r[c],n[c],t))}async function Rs(e,t){const{asset:s,assetType:o}=e;if(s instanceof File)return{blob:s,assetName:s.name,assetType:o};const r=await s.toBlob(t);return p(t),{blob:r,assetName:s.assetName,assetType:o}}async function zs(e,t,s){const{blob:o,assetType:r,assetName:a}=e;let n=null;try{const i=await Ns({data:o,name:a},t.url,s);p(s),n={assetType:r,assetUploadId:i.itemID}}catch(i){cs(i),Qs().warnOnce(`Service ${t.url} does not support the REST Uploads API.`)}if(!n){const i=await ls(o);if(p(s),!i.isBase64)throw new ws;n={assetType:r,assetData:i.data}}if(!n)throw new ys;return{item:n,assetName:a}}function Hs(e,t,s){const o=b(e.length,s==null?void 0:s.onProgress,"prepareAssetItems");return Promise.all(e.map(async(r,a)=>{const n=zs(await r,t,{...s,onProgress:o.makeOnProgress(a)});return p(s),n}))}async function Js(e,t,s){const o=q(s==null?void 0:s.onProgress);try{const r=await m(h(t.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(e)},method:"post",responseType:"json"});if(p(s),r.data.uploadResults.length!==e.length)throw new bs(e.length,r.data.uploadResults.length);return r.data}finally{o.remove()}}function Gs(e,t,s){const{success:o}=t;if(!o){const{error:u}=t;throw new Ps(e.assetName,u)}const{assetHash:r}=t,{assetName:a,item:{assetType:n}}=e,{infoFor3D:{supportedFormats:i}}=s,c=as(n,i);if(!c)throw new O(n);return new k(a,c,[new B(`${s.parsedUrl.path}/assets/${r}`,r)])}async function Ks(e,t,s){var u;const o=e.map(({assetName:l,parts:f})=>({assetName:l,assetHash:f[0].partHash})),r=(u=t.capabilities)==null?void 0:u.operations.supportsAsyncConvert3D,a={f:"json",assets:JSON.stringify(o),transportType:"esriTransportTypeUrl",targetFormat:s,async:r},n=h(t.parsedUrl.path,"convert3D");let i;try{i=(await(r?Vs:Ws)(n,{query:a,responseType:"json",timeout:0})).data}catch{throw new Ts}const{supportedFormats:c}=t.infoFor3D;return i.assets.map(l=>{const f=U(l.contentType,c);if(!f)throw new O(f);return new k(l.assetName,l.contentType,[new B(l.assetURL,l.assetHash)])})}function Ws(e,t){return m(e,t)}async function Vs(e,t){const s=(await m(e,t)).data.statusUrl;for(;;){const o=(await m(s,{query:{f:"json"},responseType:"json"})).data;switch(o.status){case"Completed":return m(o.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(o.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await ns(Ys)}}function Xs(e){return!!e.infoFor3D&&!!e.url}function J(e){const{infoFor3D:t}=e,s=U("model/gltf-binary",t.supportedFormats)??is("glb",t.supportedFormats);if(!s)throw new hs;return s}function Qs(){return ps.getLogger("esri.layers.graphics.sources.support.uploadAssets")}const Ys=v(1e3);export{Ae as uploadAssets};

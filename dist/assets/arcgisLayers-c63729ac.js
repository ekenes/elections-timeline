import{_ as L,p as T,s as g,bo as U,bp as F,as as C,aO as I}from"./index-10102046.js";import{l as N,a as J}from"./associatedFeatureServiceUtils-89c2d67c.js";import{t as f,r as _}from"./fetchService-b1de0ed5.js";const V={FeatureLayer:!0,SceneLayer:!0};async function G(r){var t;const s=(t=r.properties)==null?void 0:t.customParameters,e=await k(r.url,s),a={...r.properties,url:r.url};if(e.layers.length+e.tables.length===0)return e.layerId!=null&&(a.layerId=e.layerId),e.sourceJSON!=null&&(a.sourceJSON=e.sourceJSON),new e.Constructor(a);const l=new(await L(()=>import("./GroupLayer-a44dbff5.js"),["assets/GroupLayer-a44dbff5.js","assets/index-10102046.js","assets/index-0e712e80.css","assets/associatedFeatureServiceUtils-89c2d67c.js"])).default({title:e.parsedUrl.title});return await x(l,e,a),l}function h(r,s){return r?r.find(e=>e.id===s):null}async function x(r,s,e){function a(l,t,n,c){const u={...e,layerId:t,sublayerTitleMode:"service-name"};return l!=null&&(u.url=l),n!=null&&(u.sourceJSON=n),c(u)}for(const{id:l,serverUrl:t}of s.layers){const n=a(t,l,h(s.sublayerInfos,l),c=>new s.Constructor(c));r.add(n)}if(s.tables.length){const l=await O("FeatureLayer");s.tables.forEach(({id:t,serverUrl:n})=>{const c=a(n,t,h(s.tableInfos,t),u=>new l(u));r.tables.add(c)})}}async function k(r,s){var p,v,d,S,w,b;let e=T(r);if(e==null&&(e=await E(r,s)),e==null)throw new g("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:r});const{serverType:a,sublayer:l}=e;let t;const n={FeatureServer:"FeatureLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer"};switch(a){case"MapServer":l!=null?t="FeatureLayer":t=await R(r,s)?"TileLayer":"MapImageLayer";break;case"ImageServer":{const o=await f(r,{customParameters:s}),{tileInfo:i,cacheType:m}=o;t=i?((p=i==null?void 0:i.format)==null?void 0:p.toUpperCase())!=="LERC"||m&&m.toLowerCase()!=="elevation"?"ImageryTileLayer":"ElevationLayer":"ImageryLayer";break}case"SceneServer":{const o=await f(e.url.path,{customParameters:s});if(t="SceneLayer",o){const i=o==null?void 0:o.layers;if((o==null?void 0:o.layerType)==="Voxel")t="VoxelLayer";else if(i!=null&&i.length){const m=(v=i[0])==null?void 0:v.layerType;m!=null&&I[m]!=null&&(t=I[m])}}break}default:t=n[a]}const c=a==="FeatureServer",u=a==="SceneServer",y={parsedUrl:e,Constructor:null,layerId:c||u?l??void 0:void 0,layers:[],tables:[]};if(V[t]&&l==null){const o=await $(r,a,s);c&&(y.sublayerInfos=o.layerInfos,y.tableInfos=o.tableInfos),o.layers.length+o.tables.length!==1?(y.layers=o.layers,y.tables=o.tables):(c||u)&&(y.layerId=((d=o.layers[0])==null?void 0:d.id)??((S=o.tables[0])==null?void 0:S.id),y.sourceJSON=((w=o.layerInfos)==null?void 0:w[0])??((b=o.tableInfos)==null?void 0:b[0]))}return y.Constructor=await O(t),y}async function E(r,s){var c;const e=await f(r,{customParameters:s});let a=null,l=null;const t=e.type;if(t==="Feature Layer"||t==="Table"?(a="FeatureServer",l=e.id??null):t==="indexedVector"?a="VectorTileServer":e.hasOwnProperty("mapName")?a="MapServer":e.hasOwnProperty("bandCount")&&e.hasOwnProperty("pixelSizeX")?a="ImageServer":e.hasOwnProperty("maxRecordCount")&&e.hasOwnProperty("allowGeometryUpdates")?a="FeatureServer":e.hasOwnProperty("streamUrls")?a="StreamServer":P(e)?(a="SceneServer",l=e.id):e.hasOwnProperty("layers")&&P((c=e.layers)==null?void 0:c[0])&&(a="SceneServer"),!a)return null;const n=l!=null?U(r):null;return{title:n!=null&&e.name||F(r),serverType:a,sublayer:l,url:{path:n!=null?n.serviceUrl:C(r).path}}}function P(r){return r!=null&&r.hasOwnProperty("store")&&r.hasOwnProperty("id")&&typeof r.id=="number"}async function $(r,s,e){let a,l,t=!1;switch(s){case"FeatureServer":{const u=await _(r,{customParameters:e});t=!!u.layersJSON,a=u.layersJSON||u.serviceJSON;break}case"SceneServer":{const u=await M(r,e);a=u.serviceInfo,l=u.tableServerUrl;break}default:a=await f(r,{customParameters:e})}const n=a==null?void 0:a.layers,c=a==null?void 0:a.tables;return{layers:(n==null?void 0:n.map(u=>({id:u.id})).reverse())||[],tables:(c==null?void 0:c.map(u=>({serverUrl:l,id:u.id})).reverse())||[],layerInfos:t?n:[],tableInfos:t?c:[]}}async function M(r,s){var l;const e=await f(r,{customParameters:s});if(!((l=e.layers)==null?void 0:l[0]))return{serviceInfo:e};try{const{serverUrl:t}=await N(r),n=await f(t,{customParameters:s}).catch(()=>null);return n&&(e.tables=n.tables),{serviceInfo:e,tableServerUrl:t}}catch{return{serviceInfo:e}}}async function O(r){return(0,J[r])()}async function R(r,s){return(await f(r,{customParameters:s})).tileInfo}export{G as fromUrl};

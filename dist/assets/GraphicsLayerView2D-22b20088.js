import{g as s,j as o,V as a,R as m,a as p,b as g,c as l}from"./index-ee4f50bd.js";import{f as c,d as n}from"./LayerView-dce66400.js";import{i as d}from"./GraphicContainer-28a74401.js";import{o as u}from"./GraphicsView2D-88623dd9.js";import"./Container-e7a0bd03.js";import"./parser-c18899b3.js";import"./definitions-a2b23ed5.js";import"./enums-b14466b3.js";import"./Texture-c4e6d56d.js";import"./color-8bdae8be.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-75ad1953.js";import"./FeatureContainer-9e93f577.js";import"./AttributeStoreView-2e5d643e.js";import"./TiledDisplayObject-77b0039b.js";import"./LabelClass-3df682d7.js";import"./labelUtils-62b85608.js";import"./defaultsJSON-b087dd4d.js";import"./featureFlags-c091f4ff.js";import"./diffUtils-de02d0fa.js";import"./labelingInfo-ba648f1b.js";import"./WGLContainer-54c2e1cf.js";import"./VertexArrayObject-f71e54a8.js";import"./ProgramTemplate-c733f4e8.js";import"./GeometryUtils-06ee9ba8.js";import"./heatmapUtils-117ed7c9.js";import"./vec4f64-aa64c7e9.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-3b327a67.js";import"./featureConversionUtils-e5238a3e.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-db78aead.js";import"./ExpandedCIM-18942485.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-487dda87.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-1f3c3d8e.js";import"./floatRGBA-557046f2.js";import"./clusterUtils-fd02cec7.js";import"./SizeVariable-2679a0ff.js";import"./colorRamps-5f43d00d.js";import"./LegendOptions-417f0204.js";import"./lengthUtils-e9b31b12.js";import"./util-8413d46d.js";import"./TileContainer-a0a4af60.js";import"./vec3f32-ad1dc57f.js";import"./normalizeUtils-7a70564e.js";import"./normalizeUtilsCommon-527157a0.js";import"./utils-21f560fb.js";import"./normalizeUtilsSync-9b67be44.js";import"./projectionSupport-aaadc5c7.js";import"./json-48e3ea08.js";import"./Matcher-104864bb.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-c8835fee.js";import"./LRUCache-bb6160eb.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-c573bb28.js";import"./webStyleSymbolUtils-4f0586e6.js";import"./ComputedAttributeStorage-b0ab77a6.js";import"./FieldsIndex-247aa784.js";import"./arcadeTimeUtils-6bcdca73.js";import"./executionError-c92d3b85.js";const w={remove(){},pause(){},resume(){}};let e=class extends c(n){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new u({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new d(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=s(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof o?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):a.isCollection(i)&&i.length>0&&(t=i.map(h=>h&&h.uid).toArray());const r=t==null?void 0:t.filter(m);return r!=null&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):w}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};p([g()],e.prototype,"graphicsView",void 0),e=p([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const Pi=e;export{Pi as default};

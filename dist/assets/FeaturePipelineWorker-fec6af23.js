import{q7 as $e,cp as Oe,l5 as M,kp as yt,dw as Ae,mj as hs,cW as Re,dM as H,q8 as Z,C as R,aM as j,aN as C,q9 as mt,br as us,bs as cs,lb as ls,bF as _s,fk as ps,eS as Xe,lm as Ye,bQ as Ee,a7 as m,p0 as K,nS as bt,kA as Pe,cC as It,a1 as N,g9 as wt,d2 as gs,fp as fs,fb as ys,r as L,q as re,w as xt,d1 as vt,cv as xe,qa as ms,qb as bs,s as z,aR as Is,nk as ws,$ as xs,qc as vs,kC as Qe,qd as Ss,gI as ue,ij as ae,ii as ks,lU as Fs,lP as Ms,lk as St,bG as Cs,gJ as kt,qe as He,qf as Je,U as Ts,gj as qs,c0 as $s,cl as Os,dt as As,kh as Rs,qg as Es,ab as Ps}from"./index-02eff6e6.js";import{a as Ze,G as ce,p as De,c as Ft,i as je,d as Ds,s as js,x as zs,e as Us,f as Ws}from"./AttributeStore-2c7fbf9b.js";import{r as Gs,F as Ls}from"./MeshWriterRegistry-bd697797.js";import{g as Ns,e as Bs,c as Mt,N as Vs,n as Ct,p as Xs,b as Ys,w as Qs,a as Y,K as Tt,O as Hs,r as Js,f as qt}from"./featureConversionUtils-aa6583e8.js";import{x as Zs,j as oe}from"./queryUtils-60c4a6a9.js";import{e as Ks}from"./optimizedFeatureQueryEngineAdapter-50f8b80a.js";import{L as $t}from"./QueryEngine-23d98145.js";import{s as Ot}from"./quantizationUtils-75dcba1a.js";import{$ as Ke}from"./ogcFeatureUtils-fa47c776.js";import{T as er}from"./parquet-2aff458e.js";import{t as et}from"./CircularArray-50add9d1.js";import{createConnection as tr}from"./createConnection-6b99956e.js";import{d as sr}from"./UpdateTracking2D-9382ce27.js";import"./LabelMetric-d84c9df1.js";import"./Program-99848a7b.js";import"./BufferObject-3b583792.js";import"./VertexElementDescriptor-2925c6af.js";import"./timeSupport-4d47519e.js";import"./GraphShaderModule-f9d77490.js";import"./BindType-d21d71dd.js";import"./Util-dd4663f8.js";import"./PieChartMeshWriter-e8a91d04.js";import"./GeometryUtils-2ffbfd16.js";import"./TurboLine-e5d21c05.js";import"./utils-fc5bca97.js";import"./earcut-5a6c70eb.js";import"./rasterizingUtils-286ec3de.js";import"./floatRGBA-7569b6cb.js";import"./grouping-611c3bda.js";import"./json-48e3ea08.js";import"./WhereClause-cb61301c.js";import"./QueryEngineCapabilities-a2d35a4c.js";import"./utils-9bf35a0c.js";import"./utils-7ccd7be0.js";import"./ClassBreaksDefinition-0149e616.js";import"./FixedIntervalBinParameters-2ec73721.js";import"./geojson-53920ba7.js";import"./date-bbf7d1ee.js";import"./clientSideDefaults-0446b858.js";import"./capabilities-1a2f6cc3.js";import"./sourceUtils-89848c5f.js";import"./BidiEngine-664145a5.js";import"./Rect-ea14f53a.js";let rr=class{constructor(e){this._client=e,this.layerView=this._client.createInvokeProxy(""),this.container=this._client.createInvokeProxy("container"),this._eventLog=this._client.createInvokeProxy("eventLog")}onEvent(e){$e(this._eventLog.onEvent(e))}};const le=1,ze=2,_e=4,Ue=8,We=16,pe=32,Ge=64,ge=128;function ye(h){switch(h){case le:case Ue:case pe:return-1;case ze:case Ge:return 0;case _e:case We:case ge:return 1}}function me(h){switch(h){case le:case ze:case _e:return-1;case Ue:case We:return 0;case pe:case Ge:case ge:return 1}}const tt=le|Ue|pe,st=_e|We|ge,rt=le|ze|_e,it=pe|Ge|ge;let ir=class{constructor(e,t,s,r,i=0){this.tileKey=e,this._bufferingEnabled=t,this._sizeHint=i,this._meshes={self:new Ze(this.id,this._sizeHint),neighbors:new Array},this._currentRecordOverlaps=0,this._currentEntityOverlaps=0;const n=r?1:0;this._copyBufferedDataIntoSelf=s&&this._bufferingEnabled&&e.level===n}get id(){return this.tileKey.id}vertexCount(){return this._meshes.self.vertexCount()}indexCount(){return this._meshes.self.indexCount()}indexEnsureSize(e){this._meshes.self.indexEnsureSize(e)}entityStart(e,t=e){this._currentEntityOverlaps=0,this._meshes.self.entityStart(e,t)}entityRecordCount(){return this._meshes.self.entityRecordCount()}entityEnd(){if(this._meshes.self.entityEnd(),this._bufferingEnabled){if(this._copyBufferedDataIntoSelf)return;for(let e=0;e<8;e++){const t=1<<e;this._currentEntityOverlaps&t&&this._meshes.neighbors[e].entityEnd()}}}recordStart(e,t,s){this._currentRecordOverlaps=0,this._meshes.self.recordStart(e,t,s)}recordEnd(e=0){const t=this._meshes.self.recordEnd(this._currentRecordOverlaps);return t&&this._currentRecordOverlaps!==0?(this._copyIntoNeighbors(),this._currentEntityOverlaps|=this._currentRecordOverlaps,!0):t}recordBounds(e,t,s,r){this._bufferingEnabled&&this._addOverlap(e,t,s,r)}recordCount(){return this._meshes.self.recordCount()}metricStart(e){this._meshes.self.metricStart(e)}metricBoxWrite(e){this._meshes.self.metricBoxWrite(e)}metricEnd(){this._meshes.self.metricEnd()}vertexWrite(e){this._meshes.self.vertexWrite(e)}vertexWriteF32(e){this._meshes.self.vertexWriteF32(e)}vertexWriteRegion(e){this._meshes.self.vertexWriteRegion(e)}indexWrite(e){this._meshes.self.indexWrite(e)}serialize(e){const t={message:[],transferList:[]},s=this._meshes.self.serialize();return t.message.push({tileId:this.tileKey.id,...s.message}),t.transferList.push(...s.transferList),this._meshes.neighbors.forEach((r,i)=>{const n=r.serialize(),a=1<<i,o=ye(a),d=me(a),u=new Oe(this.tileKey).getNormalizedNeighbor(o,d,e);t.message.push({tileId:u.id,...n.message}),t.transferList.push(...n.transferList)}),t}_addOverlap(e,t,s,r){const i=Math.min(M/2,s),n=Math.min(M/2,r),a=255^((e<0+i?st:e>=M-i?tt:st|tt)|(t<0+n?it:t>=M-n?rt:it|rt));this._currentRecordOverlaps|=a}_copyIntoNeighbors(){for(let e=0;e<8;e++){const t=1<<e;if(this._currentRecordOverlaps&t){if(this._copyBufferedDataIntoSelf){const n=-ye(t)*M,a=-me(t)*M;if(a!==0)continue;this._meshes.self.copyLast(n,a);continue}if(!this._meshes.neighbors[e]){const n=Math.floor(this._sizeHint/16);this._meshes.neighbors[e]=new Ze(t,n)}const s=this._meshes.neighbors[e],r=-ye(t)*M,i=-me(t)*M;s.copyLastFrom(this._meshes.self,r,i)}}}},nr=class{},U=class At{constructor(){this._defaultResult=null,this._backgroundFillResult=null}static async from(e,t){const s=new At;return s.setDefault(await e.createMeshWriters(t.meshes)),s}size(){return 1}getDefault(){return this._defaultResult}setDefault(e){this._defaultResult=e}getBackgroundFill(){return this._backgroundFillResult}setBackgroundFill(e){this._backgroundFillResult=e}hasArcadeDependency(e){var t;return((t=this._defaultResult)==null?void 0:t.some(s=>s.hasArcadeDependency(e)))??!1}match(e,t){const s=this.doMatch(e,t)||this.getDefault();if(s&&s.length>0){const r=this.getBackgroundFill();if(r)return[...r,...s]}return s}getSortKey(e,t){return 0}doMatch(e,t){return null}async fetchResources(e,t){}},ar=class Rt extends U{static async fromDictionaryRenderer(e,t){return new Rt(e,t)}constructor(e,t){super(),this._context=e,this._schema=t,this._hashToGroup=new Map}get fieldMap(){return this._schema.fieldMap}async fetchResources(e,t){const s=t.getCursor(),r=[];for(;s.next();)r.push(this._updateMeshWriterGroup(e,s));await Promise.all(r)}match(e,t){const s=e.getAttributeHash();return this._hashToGroup.get(s)}async _updateMeshWriterGroup(e,t){const s=t.readLegacyFeatureForDisplay(),r=t.getAttributeHash();if(this._hashToGroup.has(r))return;this._hashToGroup.set(r,null);const i=await e.fetchDictionaryResourceImmediate({type:"dictionary-request",feature:s});if(!i)return;const n=await this._context.createMeshWriters(i.meshes);this._hashToGroup.set(r,n)}},or=class Et extends U{constructor(e,t){super(),this._intervals=[],this._isMaxInclusive=t,this._field=e}static async fromIntervalSchema(e,t){const s=await e.storage.createComputedField(t),r=new Et(s,t.isMaxInclusive);await Promise.all(t.intervals.map(async a=>{const o=await e.createMeshWriters(a.meshes);r.add(a,o)}));const i=await e.createMeshWriters(t.defaultSymbol);r.setDefault(i);const n=await e.createMeshWriters(t.backgroundFill);return r.setBackgroundFill(n),r}add(e,t){this._intervals.push({interval:e,result:t}),this._intervals.sort((s,r)=>s.interval.min-r.interval.min)}size(){return super.size()+this._intervals.length}hasArcadeDependency(e){var t;return((t=this._field)==null?void 0:t.hasArcadeDependency(e))||this._intervals.some(s=>s.result.some(r=>r.hasArcadeDependency(e)))}doMatch(e,t){var r;const s=(r=this._field)==null?void 0:r.read(e,t);if(s==null||isNaN(s)||s===1/0||s===-1/0)return null;for(let i=0;i<this._intervals.length;i++){const{interval:n,result:a}=this._intervals[i],o=s>=n.min,d=this._isMaxInclusive?s<=n.max:s<n.max;if(o&&d)return a}return null}},dr=class Pt extends U{static async fromLabelSchema(e,t){const s=t.classes.map(async i=>{const n=await e.createMeshWriters(i.meshes);return{minScale:i.minScale,maxScale:i.maxScale,meshes:n,expression:null,where:await e.storage.createWhereClause(i.where)}}),r=await Promise.all(s);return new Pt(r)}constructor(e){super(),this._labels=e}match(e,t){if(!this._labels.length)return null;const s=this._getLabels(t.$view.scale),r=[];for(const i of s)i.where&&!i.where(e)||r.push(...i.meshes);return r}_getLabels(e){return this._labels.filter(t=>this._validForTileScale(t,e))}_validForTileScale(e,t){const s=t-t/4,r=t+t/2;return(!e.minScale||e.minScale>=s)&&(!e.maxScale||e.maxScale<=r)}},hr=class Dt extends U{constructor(e,t){super(),this._defaultSymbolSortKey=0,this._nullResult=null,this._resultsMap=new Map,this._fields=[],this._fields=e,this._separator=t||""}static async fromMatcherSchema(e,t){const s=t.expression?[e.storage.createComputedField({expression:t.expression})]:[t.field?e.storage.createComputedField({field:t.field}):null,t.field2?e.storage.createComputedField({field:t.field2}):null,t.field3?e.storage.createComputedField({field:t.field3}):null],r=(await Promise.all(s)).filter(o=>!!o),i=new Dt(r,t.fieldDelimiter),n=await e.createMeshWriters(t.defaultSymbol);i.setDefault(n);const a=await e.createMeshWriters(t.backgroundFill);return i.setBackgroundFill(a),await Promise.all(t.map.map(async(o,d)=>{const u=await e.createMeshWriters(o.symbol);o.value==="<Null>"?i.setNullResult(u):i.add(o.value,u,d+1)})),i}setNullResult(e){this._nullResult=e}getSortKey(e,t){const s=this._getValueFromFields(e,t);if(s==null||s===""||s==="<Null>")return 0;const r=this._resultsMap.get(s.toString());return r?r.sortKey:this._defaultSymbolSortKey}add(e,t,s){this._resultsMap.set(e.toString(),{meshWriters:t,sortKey:s}),this._defaultSymbolSortKey=Math.max(this._defaultSymbolSortKey,s+1)}size(){return super.size()+this._resultsMap.size}hasArcadeDependency(e){var t;return this._fields.some(s=>s.hasArcadeDependency(e))||[...this._resultsMap.values()].some(s=>s.meshWriters.some(r=>r.hasArcadeDependency(e)))||((t=this._nullResult)==null?void 0:t.some(s=>s.hasArcadeDependency(e)))||!1}doMatch(e,t){var i;const s=this._getValueFromFields(e,t);if(this._nullResult!==null&&(s==null||s===""||s==="<Null>"))return this._nullResult;if(s==null)return null;const r=s.toString();return(i=this._resultsMap.get(r))==null?void 0:i.meshWriters}_getValueFromFields(e,t){const s=[];for(const r of this._fields){const i=r.read(e,t);i==null||i===""?s.push("<Null>"):s.push(i)}return s.join(this._separator)}};async function Q(h,e){switch(e.type){case"simple":case"heatmap":case"dot-density":case"pie-chart":return U.from(h,e);case"interval":return or.fromIntervalSchema(h,e);case"dictionary":return ar.fromDictionaryRenderer(h,e);case"label":return dr.fromLabelSchema(h,e);case"map":return hr.fromMatcherSchema(h,e);case"subtype":return ur.fromSubtypes(h,e);case"cluster":return cr.fromClusterSchema(h,e);default:throw new Error("Impl")}}let ur=class jt extends U{constructor(e,t){super(),this._subMatchers=e,this._subtypeField=t}static async fromSubtypes(e,t){const s=new Map,r=[];for(const i in t.renderers){const n=parseInt(i,10),a=Q(e,t.renderers[i]).then(o=>s.set(n,o));r.push(a)}return await Promise.all(r),new jt(s,t.subtypeField)}match(e,t){const s=e.readAttribute(this._subtypeField),r=this._subMatchers.get(s);return r?r.match(e,t):null}},cr=class zt extends U{static async fromClusterSchema(e,t){const[s,r]=await Promise.all([Q(e,t.feature),Q(e,t.cluster)]);return new zt(s,r)}constructor(e,t){super(),this._featureMatcher=e,this._clusterMatcher=t}match(e,t){return e.readAttribute("cluster_count")===1?this._featureMatcher.match(e,t):this._clusterMatcher.match(e,t)}},lr=class Ut extends nr{static async create(e,t){const s=await Q(e,t.symbology),r=t.labels?await Q(e,t.labels):null;return new Ut(s,r)}constructor(e,t){super(),this._symbology=e,this._labels=t}destroy(){}async enqueueMatcherRequests(e,t){var s;await Promise.all([this._symbology.fetchResources(e,t),(s=this._labels)==null?void 0:s.fetchResources(e,t)])}enqueueWriterRequests(e,t,s){const r=this._symbology.match(t,s);if(r){for(const i of r)i.enqueueRequest(e,t,s);if(this._labels){const i=this._labels.match(t,s);if(!i)return;for(const n of i)n.enqueueRequest(e,t,s)}}}write(e,t,s,r,i){const n=this._symbology.match(s,r);if(n){for(const a of n)a.write(e,t,s,r,i);if(e.entityRecordCount()>=1&&this._labels){const a=this._labels.match(s,r);if(!a)return;for(const o of a)o.setReferences(n),o.write(e,t,s,r,i)}}}getSortKey(e,t){return this._symbology.getSortKey(e,t)}hasArcadeDependency(e){return this._symbology.hasArcadeDependency(e)}},_r=class{constructor(e,t,s,r){this.storage=e,this.proxy=t,this.viewParams=s,this.registry=r}async createMeshWriters(e){const t=e.map(s=>this.registry.createMeshWriter(this.storage,this.proxy,this.viewParams,s));return Promise.all(t)}},pr=class{constructor(e){this._outstandingMessages=[],this._queue=new yt({concurrency:e.concurrency,process:t=>e.process(t)})}async push(e){if(e.end)return await Promise.all(this._outstandingMessages),await this._queue.push(e),void(this._outstandingMessages=[]);const t=this._queue.push(e);return this._outstandingMessages.push(t),t}},Wt=class ve{static async create(e,t){var r;if(t.statisticType==="count"){const i=new Gs(1);return new ve(t.name,t.alias,t.type,t.statisticType,i)}const s=await e.createComputedField({expression:(r=t.onStatisticExpression)==null?void 0:r.expression,field:t.onStatisticField});return new ve(t.name,t.alias,t.type,t.statisticType,s)}constructor(e,t,s,r,i){this.name=e,this.alias=t,this.type=s,this.statisticType=r,this.computed=i}},Le=class{constructor(e){this.subscription=e,this.handledChunks=new Set}destroy(){}},Gt=class{constructor(e,t){this._source=e,this._attributeStore=t,this._sendStates=new Map}destroy(){}get enablePixelBuffering(){return!0}get isAggregate(){return!1}onSubscribe(e){const t=this.createState(e);this._sendStates.set(e.key.id,t),this.updateChunks()}onUnsubscribe(e){var t;(t=this._sendStates.get(e.key.id))==null||t.destroy(),this._sendStates.delete(e.key.id)}invalidate(){const e=Array.from(this._sendStates.values());this._sendStates.clear();for(const t of e)t.destroy(),this.onSubscribe(t.subscription)}invalidateAttributeData(e){}hasArcadeDependency(e){return!1}getFeatureObjectIdsForAggregate(e){throw new Error("InternalError: AggregateId lookup not supported")}getDisplayIds(e){return this.displayMap(e,t=>t,t=>t)}getDisplayAndObjectIds(e){return this.displayMap(e,t=>t,(t,s,r)=>[t,r])}afterUpdateChunks(){}},Lt=class extends Gt{constructor(e,t,s,r){super(e,t),this.spatialReference=s,this.aggregateFields=r,this._arcadeDependencies=new Set,this.events=new Ae,this.featureAdapter=Ks;for(const i of r)hs(this._arcadeDependencies,i.computed)}get aggregateQueryEngine(){return this._aggregateQueryEngine||(this._aggregateQueryEngine=new $t({featureStore:this,fieldsIndex:this._metadata.fieldsIndex,geometryType:this._metadata.geometryType,objectIdField:this._metadata.objectIdField,spatialReference:this.spatialReference})),this._aggregateQueryEngine}get isAggregate(){return!0}removeChunks(e){}hasArcadeDependency(e){return this._arcadeDependencies.has(e)}forEach(e){return this.forEachAggregateWorldSpace(e)}forEachInBounds(e,t){}forEachBounds(e,t){const s=Re();for(const r of e){const i=Ns(s,r.geometry,!1,!1);i&&t(i)}}},Ne=class{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.clear=s,this.end=r,this.debugInfo=i,this.type="append"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"append",clear:this.clear,id:this.id,append:e,end:this.end,debugInfo:this.debugInfo,subscriptionVesrion:this.subscription.version,version:t,attributeEpoch:s}}},Se=class{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.remove=s,this.end=r,this.debugInfo=i,this.type="update"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"update",id:this.id,modify:e,debugInfo:this.debugInfo,remove:this.remove,version:t,subscriptionVesrion:this.subscription.version,end:this.end,attributeEpoch:s}}},q=class D extends ce{static fromFeatures(e,t){const{objectIdField:s,geometryType:r}=t,i=Bs([],e,r,!1,!1,s);for(let n=0;n<i.length;n++)i[n].displayId=e[n].displayId;return D.fromOptimizedFeatures(i,t)}static fromFeatureSet(e,t){const s=Mt(e,t.objectIdField);return D.fromOptimizedFeatureSet(s,t)}static fromOptimizedFeatureSet(e,t){const s=D.fromOptimizedFeatures(e.features,t);return s._exceededTransferLimit=e.exceededTransferLimit,s._transform=e.transform,s._fieldsIndex=new H(e.fields),s}static fromOptimizedFeatures(e,t,s){const r=new D(e,t);return r._fieldsIndex=t.fieldsIndex,r._transform=s,r}static empty(e){return new D([],e)}constructor(e,t){super(t),this._exceededTransferLimit=!1,this._featureIndex=-1,this._fieldsIndex=null,this._geometryType=t.geometryType,this._features=e}get fields(){return this._fieldsIndex}get geometryType(){return this._geometryType}get hasFeatures(){return!!this._features.length}get hasNext(){return this._featureIndex+1<this._features.length}get exceededTransferLimit(){return this._exceededTransferLimit}get hasZ(){return!1}get hasM(){return!1}get _current(){return this._features[this._featureIndex]}get usedMemory(){return this._current.usedMemory}getSize(){return this._features.length}getCursor(){return this.copy()}getInTransform(){return this._transform}getAttributeHash(){let e="";for(const t in this._current.attributes)e+=this._current.attributes[t];return e}getIndex(){return this._featureIndex}setIndex(e){this._featureIndex=e}getObjectId(){var e;return(e=this._current)==null?void 0:e.objectId}getDisplayId(){return this._current.displayId}setDisplayId(e){this._current.displayId=e}copy(){const e=new D(this._features,this.metadata);return this.copyInto(e),e}next(){for(;++this._featureIndex<this._features.length&&!this._getExists(););return this._featureIndex<this._features.length}readGeometryArea(){return Z(this._current)?Vs(this._current.geometry,2):0}_readX(){return Z(this._current)?this._current.geometry.coords[0]:0}_readY(){return Z(this._current)?this._current.geometry.coords[1]:0}_readGeometry(){return Z(this._current)?this._current.geometry??null:null}_readServerCentroid(){return this._current.centroid}_readAttribute(e,t){if(!this._fieldsIndex){const i=this._current.attributes[e];if(i!==void 0)return i;const n=e.toLowerCase();for(const a in this._current.attributes)if(a.toLowerCase()===n)return this._current.attributes[a];return}const s=this._fieldsIndex.get(e);if(!s)return;const r=this._current.attributes[s.name];return r==null?r:t&&this.fields.isDateField(e)?new Date(r):r}_readAttributes(){return this._current.attributes}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._transform=this._transform,e._fieldsIndex=this._fieldsIndex}},gr=class extends Le{constructor(e,t){super(e),this.bins=new Map,this.featureCache=new Map,this.done=!1,this._store=t}reset(){this.destroy(),this.done=!1}destroy(){const e=this.subscription.tile.key.level;for(const t of this.featureCache.keys())this._store.releaseDisplayIdForObjectId(`${t}.${e}`);this.bins.clear(),this.featureCache.clear(),this.handledChunks.clear()}get tile(){return this.subscription.tile}*featuresWorldSpace(){for(const e of this.featureCache.values()){const t=e.clone();t.geometry&&Xs(t.geometry,t.geometry,!1,!1,this.subscription.tile.transform),yield t}}},fr=class Nt extends Lt{static async create(e,t,s,r,i){const n=new De({spatialReference:t}),a=await Promise.all(e.fields.map(async d=>Wt.create(n,d))),o=e.featureFilter?await Ft.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:t,filterJSON:e.featureFilter}):null;return e.index.type==="geohash"&&await Zs(t,R.WGS84),new Nt(e,o,i,a,t,s,r)}constructor(e,t,s,r,i,n,a){super(n,a,i,r),this._schema=e,this._featureFilter=t,this._arcadeContextInfo=s,this._metadata=je.createFeature({geometryType:"esriGeometryPolygon",objectIdField:"aggregateId",fieldsIndex:new H(e.fields).toJSON(),globalIdField:null,spatialReference:n.metadata.spatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null,types:null})}createState(e){return new gr(e,this._attributeStore)}async*applyOverrideUpdate(e){for(const t of this._sendStates.values())t.reset(),yield new Ne(t.subscription,q.empty(this._source.metadata),!0,!1,{})}displayMap(e,t,s){const r=new Map(e.map(n=>[t(n),n])),i=[];for(const n of this._sendStates.values())for(const a of n.featuresWorldSpace()){const{objectId:o,displayId:d}=a,u=r.get(o);if(u!=null){const c=s(d,u,o);i.push(c),r.delete(o)}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const i of this._sendStates.values())for(const n of i.featuresWorldSpace())t.has(n.displayId)&&!s.has(n.objectId)&&(n.geometry&&r.push({...Ct(n,this._metadata.geometryType,!1,!1),displayId:n.displayId}),s.add(n.objectId));return{features:[],aggregates:r}}getFeatureObjectIdsForAggregate(e){for(const t of this._sendStates.values())for(const s of t.bins.values())if(s.id===e)return Array.from(s.containedObjectIds);return[]}async*updateChunks(){for(const e of this._sendStates.values())yield*this._update(e,this._source)}forEachAggregateWorldSpace(e){const t=new Set;for(const s of this._sendStates.values())for(const r of s.featuresWorldSpace())t.has(r.objectId)||(e(r),t.add(r.objectId))}_createIndexOptions(e){switch(this._schema.index.type){case"geohash":return{type:"geohash",fields:this.aggregateFields,featureFilter:this._featureFilter,geohashLevel:this._schema.index.fixBinLevel,spatialReference:this.spatialReference,arcadeContextInfo:this._arcadeContextInfo,scale:e.scale};case"grid":{const t=this._schema.index.fixedBinLevel,s=t!=null?e.tileInfoView.getLODInfoAt(t).scale:e.scale;return{type:"grid",fields:this.aggregateFields,cellSize:this._schema.index.size,featureFilter:this._featureFilter,spatialReference:this.spatialReference,arcadeContextInfo:this._arcadeContextInfo,scale:s}}}}async*_update(e,t){const{handledChunks:s,subscription:r,bins:i,featureCache:n}=e,a=r.tile;if(e.done)return;for(const f of t.chunks()){if(s.has(f.chunkId))continue;s.add(f.chunkId);const g=f.queryInfo;if("tileId"in g){const y=new Oe(g.tileId);if(y.level!==a.level||y.world!==a.key.world)continue}f.getAggregateIndex(this._createIndexOptions(e.tile)).putBounded(i,e.tile.extent,e.tile.resolution)}const o=[],d=r.tile.transform,u=r.tile.key.level;for(const f of i.values()){let g=n.get(f.id);if(g)g.attributes=f.getAttributes();else{const y=f.getGeometry(this.spatialReference,d);g=new j(y,f.getAttributes(),null,f.id),y||(g.centroid=f.getGeometricCentroid(this.spatialReference,d)),g.displayId=this._attributeStore.createDisplayIdForObjectId(`${g.objectId}.${u}`),n.set(f.id,g)}o.push(g)}this.events.emit("changed"),e.done=!t.updateTracking.updating;const c=q.fromOptimizedFeatures(o,this._metadata,d),l=c.getCursor(),p=e.subscription.tile.createArcadeEvaluationOptions(this._arcadeContextInfo);for(;l.next();)this._attributeStore.setAttributeData(l.getDisplayId(),l,p);yield new Se(e.subscription,c,[],e.done,{})}},Bt=class{constructor(e){this._statistics=e}get statistics(){return this._statistics}};const nt=Math.PI/180;let Vt=class ke{static create(e){return new ke(e.map(t=>yr(t)))}constructor(e){this._statistics=e}values(){return this._statistics.values()}insert(e,t){for(const s of this._statistics)s.insert(e,t)}merge(e){for(let t=0;t<this._statistics.length;t++){const s=this._statistics[t],r=e._statistics[t];if(s.field.name!==r.field.name)throw new Error("InternalError: Tried to merge incompatible statistics");s.merge(r)}}clone(){return new ke(this._statistics.map(e=>e.clone()))}};function yr(h){switch(h.statisticType){case"min":return new mr(h);case"max":return new br(h);case"avg":return new wr(h);case"avg_angle":return new xr(h);case"sum":case"count":return new Ir(h);case"mode":return new vr(h)}}let B=class{constructor(e){this.field=e}insert(e,t){if(!this.field.computed)return;const s=this.field.computed.read(e,t);Ds(s)||this._insertValue(s)}},mr=class Xt extends B{constructor(){super(...arguments),this.type="min",this.value=Number.MAX_VALUE}_insertValue(e){this.value=Math.min(this.value,e)}merge(e){this.value=Math.min(this.value,e.value)}clone(){const e=new Xt(this.field);return e.value=this.value,e}},br=class Yt extends B{constructor(){super(...arguments),this.type="max",this.value=Number.MIN_VALUE}_insertValue(e){this.value=Math.max(this.value,e)}merge(e){this.value=Math.max(this.value,e.value)}clone(){const e=new Yt(this.field);return e.value=this.value,e}},Ir=class Qt extends B{constructor(){super(...arguments),this.type="sum",this.value=0}_insertValue(e){this.value+=e}merge(e){this.value+=e.value}clone(){const e=new Qt(this.field);return e.value=this.value,e}},wr=class Ht extends B{constructor(){super(...arguments),this.type="avg",this._total=0,this._count=0}get value(){return this._total/this._count}_insertValue(e){this._total+=e,this._count+=1}merge(e){this._total+=e._total,this._count+=e._count}clone(){const e=new Ht(this.field);return e._total=this._total,e._count=this._count,e}},xr=class Jt extends B{constructor(){super(...arguments),this.type="avg_angle",this._x=0,this._y=0,this._count=0}get value(){const e=this._x/this._count,t=this._y/this._count,s=180/Math.PI;return Math.atan2(t,e)*s}_insertValue(e){this._x=this._x+Math.cos(e*nt),this._y=this._y+Math.sin(e*nt),this._count+=1}merge(e){this._x+=e._x,this._y+=e._y,this._count+=e._count}clone(){const e=new Jt(this.field);return e._x=this._x,e._y=this._y,e._count=this._count,e}},vr=class Zt extends B{constructor(){super(...arguments),this._frequencies=new Map}get value(){let e,t=0;for(const[s,r]of this._frequencies.entries())r>t&&(t=r,e=s);return e}_insertValue(e){const t=this._frequencies.get(e);t!=null?this._frequencies.set(e,t+1):this._frequencies.set(e,1)}merge(e){for(const[t,s]of e._frequencies.entries()){const r=this._frequencies.get(t);r!=null?this._frequencies.set(t,r+s):this._frequencies.set(t,s)}}clone(){const e=new Zt(this.field);return e._frequencies=new Map(this._frequencies),e}},Fe=class ie extends Bt{static createId(e,t){return`${e}.${t}`}static create(e,t,s,r){return new ie(e,t,Vt.create(s),r)}constructor(e,t,s,r){super(s),this.gridX=e,this.gridY=t,this._worldUnitsPerCell=r,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._objectIds=new Set}get id(){return ie.createId(this.gridX,this.gridY)}get containedObjectIds(){return this._objectIds}get count(){return this._count}get firstObjectId(){return this._objectIds.values().next().value}get centroidXWorld(){return this._xWorldTotal/this._count}get centroidYWorld(){return this._yWorldTotal/this._count}clone(){const e=new ie(this.gridX,this.gridY,this._statistics.clone(),this._worldUnitsPerCell);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._firstFeatureAttributes=this._firstFeatureAttributes,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r){this._count===0?this._firstFeatureAttributes=e.readAttributes():this._firstFeatureAttributes=null,this._count+=1,this._xWorldTotal+=s,this._yWorldTotal+=r,this._statistics.insert(e,t),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._firstFeatureAttributes=e._firstFeatureAttributes,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroidX(e){return e==null?this.centroidXWorld:Ys(e,this.centroidXWorld)}getCentroidY(e){return e==null?this.centroidYWorld:Qs(e,this.centroidYWorld)}getGeometry(e,t){const s=this.gridX*this._worldUnitsPerCell,r=this.gridY*this._worldUnitsPerCell,i=new C([4],[s,r,s+this._worldUnitsPerCell,r,s+this._worldUnitsPerCell,r+this._worldUnitsPerCell,s,r+this._worldUnitsPerCell]);if(t!=null){const n=new C;return Y(n,i,!1,!1,"esriGeometryPolygon",t)}return i}getCentroid(e){const t=new C([],[this.centroidXWorld,this.centroidYWorld]);if(e!=null){const s=new C;return Y(s,t,!1,!1,"esriGeometryPoint",e)}return t}getGeometricCentroid(e,t){const s=this.gridX*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,r=this.gridY*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,i=new C([],[s,r]);if(t!=null){const n=new C;return Y(n,i,!1,!1,"esriGeometryPoint",t)}return i}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return this._firstFeatureAttributes!=null?{...e,...this._firstFeatureAttributes}:e}},Kt=class{constructor(e){this._options=e}insert(e,t){const s=e.getCursor(),{arcadeContextInfo:r,scale:i}=this._options,n=mt(i,r);for(;s.next();)this._insertFeature(s,n,t)}_insertFeature(e,t,s){const{featureFilter:r}=this._options;if(r!==null&&!r.check(e))return;let i=0,n=0;if(e.geometryType==="esriGeometryPoint")i=e.readXWorldSpace(),n=e.readYWorldSpace();else{if(s){const o=e.readCentroidForDisplay();if(o==null)return;const[d,u]=o.coords;if(d<0||d>M||u<0||u>M)return}const a=e.readCentroidWorldSpace();if(a==null)return;i=a.coords[0],n=a.coords[1]}this._insert(e,i,n,t)}};const Sr=96;function Me(h,e){return us(h)*cs*Sr/e}let kr=class extends Kt{constructor(e){super(e),this._cells=new Map,this._pixelsPerMapUnit=Me(e.spatialReference,e.scale)}put(e){for(const t of this._cells.values()){const s=e.get(t.id);s?s.merge(t):e.set(t.id,t.clone())}}putBounded(e,t,s){const r=[t.xmin,t.ymin,t.xmax,t.ymax],[i,n,a,o]=r,d=Math.floor(i*this._pixelsPerMapUnit/this._options.cellSize),u=Math.floor(n*this._pixelsPerMapUnit/this._options.cellSize),c=Math.ceil(a*this._pixelsPerMapUnit/this._options.cellSize),l=Math.ceil(o*this._pixelsPerMapUnit/this._options.cellSize);for(let p=u;p<=l;p++)for(let _=d;_<=c;_++){const f=`${_}.${p}`,g=this._cells.get(f);if(!g)continue;const y=e.get(g.id);y?g&&!e.has(g.id)&&y.merge(g):e.set(g.id,g.clone())}}_insert(e,t,s,r){const i=t*this._pixelsPerMapUnit,n=s*this._pixelsPerMapUnit,a=Math.floor(i/this._options.cellSize),o=Math.floor(n/this._options.cellSize);this._getCellOrCreate(a,o).insert(e,r,t,s)}_getCellOrCreate(e,t){const s=Fe.createId(e,t);let r=this._cells.get(s);if(!r){const i=1*this._options.cellSize/this._pixelsPerMapUnit;r=Fe.create(e,t,this._options.fields,i),this._cells.set(s,r)}return r}},Fr=class{constructor(e,t){this.inner=e,this.displayId=t}};const ee=128;let Mr=class extends Le{constructor(e){super(e),this.didSend=!1,this.done=!1}},Cr=class{constructor(e,t,s,r,i){this._level=e,this._scale=t,this._indexOptions=s,this._clusterRadius=r,this._store=i,this._cells=new Map,this._handledChunks=new Set,this._statistics=new Map,this._clusters=new Map}destroy(){this._clearClusters()}_clearClusters(){for(const e of this._clusters.values())this._store.releaseDisplayIdForObjectId(e.inner.id);this._clusters.clear()}*aggregatesWorldSpace(){for(const e of this._clusters.values()){const t=e.inner.getCentroid(null);yield new j(t,e.inner.getAttributes(),null,e.inner.id,e.displayId)}}clusters(){return this._clusters.values()}updateChunks(e,t){let s=!1;for(const a of e){const o=a.queryInfo;"tileId"in o&&new Oe(o.tileId).level!==this._level||this._handledChunks.has(a.normalizedChunkId)||(this._handledChunks.add(a.normalizedChunkId),s=!0,a.getAggregateIndex({...this._indexOptions,scale:this._scale}).put(this._cells))}const r={xMin:1/0,yMin:1/0,xMax:-1/0,yMax:-1/0},i=Me(this._indexOptions.spatialReference,this._scale),n=this._indexOptions.cellSize;for(const{subscription:a}of t){const o=a.tile.bounds,d=Math.floor(o[0]*i/n),u=Math.floor(o[1]*i/n),c=Math.ceil(o[2]*i/n),l=Math.ceil(o[3]*i/n);r.xMin=Math.min(r.xMin,d),r.yMin=Math.min(r.yMin,u),r.xMax=Math.max(r.xMax,c),r.yMax=Math.max(r.yMax,l)}return this._lastCellBounds!=null&&r.xMin===this._lastCellBounds.xMin&&r.yMin===this._lastCellBounds.yMin&&r.yMin===this._lastCellBounds.yMin&&r.yMax===this._lastCellBounds.yMax||(s=!0,this._lastCellBounds=r),s&&this._clusterCells(r),s}async updateStatistics(e){let t=!1;for(const s of this._clusters.values())s.inner.count>1&&(t=this._updateAggregateStatistics(this._statistics,s.inner)||t);if(t){const s=Array.from(this._statistics.entries()).map(([r,i])=>({fieldName:r,minValue:i.minValue,maxValue:i.maxValue}));await e.container.updateStatistics(this._level,s)}}createAggregateFeatures(e,t){const s=e.subscription,r=[],i=s.tile.transform;for(const n of this._clusters.values()){let a=n.inner.getCentroidX(i);const o=n.inner.getCentroidY(i),d=s.tile.lod,u=d.wrap?d.worldSize[0]:null,c=n.inner.count===1?n.inner.firstObjectId:n.inner.id,l=n.displayId;if(u!=null)if(u===1){const p=new C([],[a,o]),_=new j(p,n.inner.getAttributes(),null,c,l);_.geometry.coords[0]-=M,r.push(_);const f=new C([],[a,o]),g=new j(f,n.inner.getAttributes(),null,c,l);g.geometry.coords[0]+=M,r.push(g)}else a>M+M/2?a-=u*M:a<-M/2&&(a+=u*M);if(a<M+ee&&a>=-ee&&o<M+ee&&o>=-ee){const p=new C([],[a,o]),_=new j(p,n.inner.getAttributes(),null,c,l);r.push(_)}}return q.fromOptimizedFeatures(r,t,s.tile.transform)}_clusterCells(e){let t=Array.from(this._cells.values());t=t.sort((a,o)=>o.count-a.count);const s=[];for(const a of this._clusters.values())s.push(a.inner.id);this._clusters.clear();const r=this._clusterRadius*(1/Me(this._indexOptions.spatialReference,this._scale)),i=1+this._clusterRadius/this._indexOptions.cellSize,n=new Set;for(const a of t){if(n.has(a.id)||a.gridX<e.xMin||a.gridX>e.xMax||a.gridY<e.yMin||a.gridY>e.yMax)continue;const o=this._store.createDisplayIdForObjectId(a.id),d=new Fr(a.clone(),o);n.add(a.id),this._clusters.set(a.id,d);const u=a.centroidXWorld,c=a.centroidYWorld;for(let l=a.gridY-i;l<=a.gridY+i;l++)for(let p=a.gridX-i;p<=a.gridX+i;p++){if(l===a.gridY&&p===a.gridX)continue;const _=this._cells.get(Fe.createId(p,l));if(!_||n.has(_.id))continue;const f=Math.abs(_.centroidXWorld-u),g=Math.abs(_.centroidYWorld-c);f<r&&g<r&&(d.inner.merge(_),n.add(_.id))}}for(const a of s)this._store.releaseDisplayIdForObjectId(a)}_updateAggregateStatistics(e,t){let s=!1;for(const r of t.statistics.values()){if(r.field.type==="esriFieldTypeString")continue;const i=r.value,n=r.field,a=e.get(n.name);if(a){const{minValue:o,maxValue:d}=a,u=Math.min(a.minValue,i),c=Math.max(a.maxValue,i);o===u&&d===c||(a.minValue=u,a.maxValue=c,s=!0)}else e.set(n.name,{minValue:i,maxValue:i}),s=!0}return s}},Tr=class es extends Lt{static async create(e,t,s,r,i,n){const a=new De({spatialReference:s}),o={type:"grid",fields:await Promise.all(t.fields.map(async d=>Wt.create(a,d))),spatialReference:s,featureFilter:t.featureFilter?await Ft.create({geometryType:r.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:r.metadata.timeInfo,fieldsIndex:r.metadata.fieldsIndex,spatialReference:s,filterJSON:t.featureFilter}):null,cellSize:t.clusterRadius/4,arcadeContextInfo:n};return new es(e,t.clusterRadius,o,t.fields,r,i)}constructor(e,t,s,r,i,n){super(i,n,s.spatialReference,s.fields),this._connection=e,this._clusterRadius=t,this._indexOptions=s,this._cellsPerScale=new Map,this._metadata=je.createFeature({geometryType:"esriGeometryPoint",objectIdField:"aggregateId",fieldsIndex:new H([...r,...this._source.metadata.fieldsIndex.fields,{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}]).toJSON(),globalIdField:null,spatialReference:i.metadata.spatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null,types:null})}get enablePixelBuffering(){return!1}invalidate(){super.invalidate();for(const e of this._cellsPerScale.values())e.destroy();this._cellsPerScale.clear()}onSubscribe(e){super.onSubscribe(e),this._requiredLevel=e.tile.level,this._requiredScale=e.tile.scale}createState(e){return new Mr(e)}async*applyOverrideUpdate(e){for(const t of this._cellsPerScale.values())t.destroy();this._cellsPerScale.clear();for(const t of this._sendStates.values())t.done=!1}displayMap(e,t,s){const r=new Map(e.map(a=>[t(a),a])),i=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const a of n.clusters()){const o=r.get(a.inner.id);if(o==null){if(a.inner.count===1){const{firstObjectId:d}=a.inner,u=d?r.get(d):null;if(u!=null){const c=s(a.displayId,u,d);i.push(c),r.delete(d)}}}else{const d=s(a.displayId,o,a.inner.id);i.push(d),r.delete(a.inner.id)}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[],i=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const a of n.aggregatesWorldSpace())if(t.has(a.displayId)&&!s.has(a.displayId)){const o=Ct(a,this._metadata.geometryType,!1,!1);if(s.add(a.displayId),o.attributes.cluster_count===1){r.push({...o,displayId:a.displayId});continue}i.push({...o,displayId:a.displayId})}return{features:r,aggregates:i}}getFeatureObjectIdsForAggregate(e){const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.clusters())if(s.inner.id===e)return Array.from(s.inner.containedObjectIds);return[]}async*updateChunks(){const e=this._source.chunks();if(!e.length)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale),s=Array.from(this._sendStates.values()).filter(n=>n.subscription.tile.level===this._requiredLevel);if(t.updateChunks(e,s)||!this._source.updateTracking.updating)for(const n of s)n.subscription.tile.level===this._requiredLevel&&(n.didSend=!1,n.done=!1);const r=Array.from(this._sendStates.values()).filter(n=>n.done).map(n=>n.subscription.tile.key),i=new Set(r);for(const n of this._sendStates.values())this._source.updateTracking.updating&&(r.some(a=>a.containsChild(n.subscription.tile.key))||n.subscription.tile.key.getChildKeys().every(a=>i.has(a)))||n.didSend||n.subscription.tile.level!==this._requiredLevel||(n.didSend=!0,yield*this._update(n,t,this._source));await t.updateStatistics(this._connection)}forEachAggregateWorldSpace(e){if(this._requiredLevel==null||this._requiredScale==null)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.aggregatesWorldSpace())e(s)}_getClusterState(e,t){if(e==null||t==null)throw new Error("InternalError: Level and scale must be defined");let s=this._cellsPerScale.get(t);return s||(s=new Cr(e,t,this._indexOptions,this._clusterRadius,this._attributeStore),this._cellsPerScale.set(t,s)),s}async*_update(e,t,s){if(e.done)return;const r=t.createAggregateFeatures(e,this._metadata);this.events.emit("changed"),e.done=!s.updateTracking.updating;const i=r.getCursor(),n=e.subscription.tile.createArcadeEvaluationOptions(this._indexOptions.arcadeContextInfo);for(;i.next();)this._attributeStore.setAttributeData(i.getDisplayId(),i,n);yield new Ne(e.subscription,r,!0,e.done,{})}},qr=class ts{static fromReader(e){const t=[],s=e.copy(),r=Re();for(;s.next();)s.getBounds(r)&&t.push(s.getIndex());const i=ls(9,n=>(s.setIndex(n),{minX:s.getBoundsXMin(),minY:s.getBoundsYMin(),maxX:s.getBoundsXMax(),maxY:s.getBoundsYMax()}));return i.load(t),new ts(i)}constructor(e){this._index=e}search(e){const t={minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]};return this._index.search(t)}};const $r=64;function Or(h,e,t,s){const r=[h.xmin,h.ymin,h.xmax,h.ymax],i=_s.fromExtent(ps(r,s)),n=oe(i,s,R.WGS84,{densificationStep:e*$r});if(!n)return null;const a=Tt(new C,n,!1,!1),o=a.coords.filter((g,y)=>!(y%2)),d=a.coords.filter((g,y)=>y%2),u=Math.min(...o),c=Math.min(...d),l=Math.max(...o),p=Math.max(...d),_=Ce(u,c,t,R.WGS84),f=Ce(l,p,t,R.WGS84);return _&&f?{bounds:r,geohashBounds:{xLL:_[0],yLL:_[1],xTR:f[0],yTR:f[1]},level:t}:null}function Ce(h,e,t,s){if(s.isWebMercator){const n=Xe(h/Ye.radius),a=n-360*Math.floor((n+180)/360),o=[0,0];return at(o,0,Xe(Math.PI/2-2*Math.atan(Math.exp(-e/Ye.radius))),a,t),o}const r=oe({x:h,y:e},s,R.WGS84);if(!r)return null;const i=[0,0];return at(i,0,r.y,r.x,t),i}function Ar(h,e){let t=-90,s=90,r=-180,i=180;for(let n=0;n<e;n++){const a=Math.ceil((n+1)/2),o=Math.floor((n+1)/2),d=1-n%2,u=30-(3*a+2*o),c=30-(2*a+3*o),l=3*d+2*(1-d),p=2*d+3*(1-d),_=3*d+7*(1-d)<<c,f=(7*d+3*(1-d)<<u&h.geohashX)>>u,g=(_&h.geohashY)>>c;for(let y=l-1;y>=0;y--){const b=(r+i)/2,I=f&1<<y?1:0;r=(1-I)*r+I*b,i=(1-I)*b+I*i}for(let y=p-1;y>=0;y--){const b=(t+s)/2,I=g&1<<y?1:0;t=(1-I)*t+I*b,s=(1-I)*b+I*s}}return[r,t,i,s]}function at(h,e,t,s,r){r%2&&(r+=1);let i=0,n=0,a=-90,o=90,d=-180,u=180;for(let c=0;c<r/2;c++){for(let l=0;l<5;l++){const p=(d+u)/2,_=s>p?1:0;i|=_<<29-(l+5*c),d=(1-_)*d+_*p,u=(1-_)*p+_*u}for(let l=0;l<5;l++){const p=(a+o)/2,_=t>p?1:0;n|=_<<29-(l+5*c),a=(1-_)*a+_*p,o=(1-_)*p+_*o}}h[2*e]=i,h[2*e+1]=n}let ot=class Te extends Bt{static create(e,t,s,r){const i=Vt.create(e),n=new Array(32);for(let a=0;a<n.length;a++)n[a]=null;return new Te(i,t,s,r,n)}constructor(e,t,s,r,i){super(e),this.xNode=t,this.yNode=s,this.depth=r,this.children=i,this._objectIds=new Set,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._xGeohashTotal=0,this._yGeohashTotal=0,this.next=null}get id(){return`${this.xNode}.${this.yNode}`}get containedObjectIds(){return this._objectIds}get count(){return this._count}clone(){const e=new Te(this._statistics.clone(),this.xNode,this.yNode,this.depth,this.children);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._xGeohashTotal=this._xGeohashTotal,e._yGeohashTotal=this._yGeohashTotal,e.next=this.next,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r,i,n){this._count+=1,this._xWorldTotal+=t,this._yWorldTotal+=s,this._xGeohashTotal+=r,this._yGeohashTotal+=i,this._statistics.insert(e,n),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._xGeohashTotal+=e._xWorldTotal,this._yGeohashTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroid(e){throw new Error("getCentroid not supported for GeohashNode")}getGeometry(e,t){const s=this._getLngLatBounds(),[r,i,n,a]=s,o=oe({rings:[[[r,i],[r,a],[n,a],[n,i],[r,i]]]},R.WGS84,e),d=Tt(new C,o,!1,!1);return t!=null?Y(new C,d,!1,!1,"esriGeometryPolygon",t,!1,!1):d}getGeometricCentroid(e,t){const s=this._getLngLatBounds(),[r,i,n,a]=s,o=oe({x:(r+n)/2,y:(i+a)/2},R.WGS84,e),d=Hs(new C,o);return t!=null?Y(new C,d,!1,!1,"esriGeometryPoint",t,!1,!1):d}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return e.aggregateCount=this._count,e}find(e,t,s,r,i,n){if(r>=s)return this;const a=1-r%2,o=3*a+2*(1-a),d=2*a+3*(1-a),u=30-i-o,c=30-n-d,l=((e&7*a+3*(1-a)<<u)>>u)+((t&3*a+7*(1-a)<<c)>>c)*(8*a+4*(1-a)),p=this.children[l];return p==null?null:p.find(e,t,s,r+1,i+o,n+d)}_getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),r=30-(3*t+2*s),i=30-(2*t+3*s),n=this.xNode<<r,a=this.yNode<<i;return Ar({geohashX:n,geohashY:a},this.depth)}};class Rr{constructor(e){this._fields=e,this._size=0,this._depth=0,this._root=ot.create(this._fields,0,0,0)}destroy(){}get size(){return this._size}get depth(){return this._depth}find(e,t,s){return this._root.find(e,t,s,0,0,0)}insert(e,t,s,r,i,n,a){let o=this._root,d=0,u=0,c=0;for(;o!==null;){if(o.insert(e,t,s,r,i,a),d>=n)return;const l=Math.ceil((d+1)/2),p=Math.floor((d+1)/2),_=1-d%2,f=30-(3*l+2*p),g=30-(2*l+3*p),y=(r&7*_+3*(1-_)<<f)>>f,b=(i&3*_+7*(1-_)<<g)>>g,I=y+b*(8*_+4*(1-_));u=u<<3*_+2*(1-_)|y,c=c<<2*_+3*(1-_)|b,o.children[I]==null&&(o.children[I]=ot.create(this._fields,u,c,d+1),this._depth=Math.max(this._depth,d+1),this._size+=1),d+=1,o=o.children[I]}}putBins(e,t){for(const s of this.getNodes(t)){const r=e.get(s.id);r?r.merge(s):e.set(s.id,s.clone())}}getNodes(e){const t=[],{geohashBounds:s,level:r}=e;let i=this._root;for(;i!==null;){const n=i.depth,a=i.xNode,o=i.yNode;if(n>=r){t.push(i),i=i.next;continue}const d=Math.ceil((n+1)/2),u=Math.floor((n+1)/2),c=1-n%2,l=30-(3*d+2*u),p=30-(2*d+3*u),_=~((1<<l)-1),f=~((1<<p)-1),g=(s.xLL&_)>>l,y=(s.yLL&f)>>p,b=(s.xTR&_)>>l,I=(s.yTR&f)>>p,k=a<<3*c+2*(1-c),T=o<<2*c+3*(1-c),v=k+8*c+4*(1-c),S=T+4*c+8*(1-c),F=Math.max(k,g),w=Math.max(T,y),O=Math.min(v,b),A=Math.min(S,I);let x=null,$=null;for(let E=w;E<=A;E++)for(let P=F;P<=O;P++){const ds=P-k+(E-T)*(8*c+4*(1-c)),V=i.children[ds];V&&(x||(x=V,x.next=i.next),$&&($.next=V),$=V,V.next=i.next)}i=x||i.next}return t}}let Er=class extends Kt{constructor(e){super(e),this._tree=new Rr(this._options.fields)}put(e){throw new Error("Geohash tree does not support put")}putBounded(e,t,s){const{geohashLevel:r,spatialReference:i}=this._options,n=Or(t,s,r,i);n!=null&&this._tree.putBins(e,n)}_insert(e,t,s,r){const{geohashLevel:i,spatialReference:n}=this._options,a=Ce(t,s,i,n);a&&this._tree.insert(e,t,s,a[0],a[1],i,r)}},Pr=class qe extends ce{static from(e,t){return new qe(e.copy(),t)}constructor(e,t){super(e.metadata),this._currentIndex=-1,this._displayTranslationX=0,this._displayTranslationY=0,this._displayScaleX=1,this._displayScaleY=1,this._reader=e,this._indices=t,this._isPoint=e.geometryType==="esriGeometryPoint"}setTransformForDisplay(e){const t=this._reader.getInTransform();if(t==null){const[c,l]=e.scale,[p,_]=e.translate;return this._displayTranslationX=-p/c,this._displayScaleX=1/c,this._displayTranslationY=_/l,this._displayScaleY=1/-l,void(this._displayTransform=e)}const[s,r]=t.scale,[i,n]=t.translate,[a,o]=e.scale,[d,u]=e.translate;if(this._displayScaleX=s/a,this._displayTranslationX=(i-d)/a,this._displayScaleY=r/o,this._displayTranslationY=(-n+u)/o,!this._isPoint&&t)throw new Error("InternalError: Relative transformations not supported for non-point features");this._displayTransform=e}getInTransform(){return this._reader.getInTransform()}get fields(){return this._reader.fields}get hasNext(){return this._currentIndex+1<this._indices.length}getSize(){return this._indices.length}getCursor(){return this.copy()}copy(){const e=new qe(this._reader.copy(),this._indices);return e._currentIndex=this._currentIndex,e._displayTransform=this._displayTransform,e._displayTranslationX=this._displayTranslationX,e._displayTranslationY=this._displayTranslationY,e._displayScaleX=this._displayScaleX,e._displayScaleY=this._displayScaleY,e}get contextTimeZone(){return this._reader.contextTimeZone}set contextTimeZone(e){this._reader.contextTimeZone=e}get usedMemory(){return Ee+this._reader.usedMemory}_nextIndex(){return++this._currentIndex<this._indices.length&&(this._reader.setIndex(this._indices[this._currentIndex]),!0)}next(){for(;this._nextIndex()&&!this._reader._getExists(););return this._currentIndex<this._indices.length}readXForDisplay(){return this._reader.readXForDisplay()*this._displayScaleX+this._displayTranslationX}readYForDisplay(){return this._reader.readYForDisplay()*this._displayScaleY+this._displayTranslationY}readGeometryForDisplay(){return this._displayTransform?this._reader.readGeometryForDisplayTransformed(this._displayTransform):this._reader.readGeometryForDisplay()}readCentroidForDisplay(){var t;const e=(t=this._reader.readCentroidForDisplay())==null?void 0:t.clone();if(e){const[s,r]=e.coords;e.coords[0]=s*this._displayScaleX+this._displayTranslationX,e.coords[1]=r*this._displayScaleY+this._displayTranslationY}return e}get geometryType(){return this._reader.geometryType}get hasFeatures(){return this._reader.hasFeatures}get exceededTransferLimit(){return this._reader.exceededTransferLimit}get hasZ(){return this._reader.hasZ}get hasM(){return this._reader.hasM}readAttribute(e,t=!1){return this._reader.readAttribute(e,t)}readAttributes(){return this._reader.readAttributes()}joinAttributes(e){return this._reader.joinAttributes(e)}getBounds(e){return this._reader.getBounds(e)}getAttributeHash(){return this._reader.getAttributeHash()}getObjectId(){return this._reader.getObjectId()}getDisplayId(){return this._reader.getDisplayId()}setDisplayId(e){return this._reader.setDisplayId(e)}setIndex(e){return this._reader.setIndex(e)}getIndex(){return this._reader.getIndex()}readXWorldSpace(){return this._reader.readXWorldSpace()}readYWorldSpace(){return this._reader.readYWorldSpace()}_readX(){return this._reader.readXForDisplay()}_readY(){return this._reader.readYForDisplay()}_readServerCentroid(){return this._reader._readServerCentroid()}readLegacyFeatureForDisplay(){const e=this.readCentroidForDisplay();return{attributes:this.readAttributes(),geometry:this.readLegacyGeometryForDisplay(),centroid:(e&&{x:e.coords[0],y:e.coords[1]})??null}}readLegacyGeometryForDisplay(){const e=this.readGeometryForDisplay();return Js(e,this.geometryType,!1,!1)}readGeometryArea(){return this._reader.readGeometryArea()}readGeometryWorldSpace(){return this._reader.readGeometryWorldSpace()}_readGeometry(){return this._reader._readGeometry()}_readAttribute(e,t){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}_readAttributes(){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}readArcadeFeature(){return this._reader.readArcadeFeature()}geometry(){return this._reader.geometry()}field(e){return this._reader.field(e)}hasField(e){return this._reader.hasField(e)}setField(e,t){return this._reader.setField(e,t)}keys(){return this._reader.keys()}castToText(e=!1){return this._reader.castToText(e)}},J=class{size(){return this.reader.getSize()}get fields(){return this.reader.fields}invalidate(){this._aggregateIndex=null,this._aggregateIndexHash=null,this._spatialIndex=null}registerOverrides(e){this.reader.registerOverrides(e),this.invalidate()}queryFeaturesInBounds(e){const t=this._getSpatialIndex().search(e);return Pr.from(this.reader,t)}getAggregateIndex(e){const t=JSON.stringify(e);if(t!==this._aggregateIndexHash){switch(this._aggregateIndexHash=t,e.type){case"grid":this._aggregateIndex=new kr(e);break;case"geohash":this._aggregateIndex=new Er(e)}this._aggregateIndex.insert(this.reader,this.isTiled)}return this._aggregateIndex}_getSpatialIndex(){return this._spatialIndex||(this._spatialIndex=qr.fromReader(this.reader)),this._spatialIndex}},dt=class{constructor(){this.modified=[],this.removed=[]}modify(e){this.modified.push(e)}remove(e){this.removed.push(e)}get isEmpty(){return this.modified.length===0&&this.removed.length===0}},ss=class rs extends J{constructor(e){super(),this._reader=e,this.chunkId="override",this.normalizedChunkId="override"}static fromFeatures(e,t){const s=q.fromOptimizedFeatures(e,t);return new rs(s)}get reader(){return this._reader}get queryInfo(){return{}}get first(){return!1}get end(){return!1}get isTiled(){return!1}getTileReader(e){if(!this._reader.getSize())return null;const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}},te=class{constructor(e,t){this.inner=e,this.isWeak=t,this.lastWeak=null}},Dr=class{constructor(){this._overrides=new Map,this._update=new dt}hasOverride(e){return this._overrides.has(e)}onChunkInsert(e){if(this._overrides.size){const t=e.reader.getCursor();for(;t.next();){const s=t.getObjectId(),r=this._overrides.get(s);r!=null&&r.lastWeak&&(r.lastWeak=null),r!=null&&r.isWeak&&(this._overrides.delete(s),this._update.remove(s),this.invalidate())}}e.registerOverrides(this)}apply(e,t){const{updateWeak:s,removeWeak:r,update:i,remove:n,release:a}=e.commands;this.invalidate();for(const o of s)this._overrides.set(o.objectId,new te(o,!0)),this._update.modify(o);for(const o of i){const d=new te(o,!1),u=this._overrides.get(o.objectId);u!=null&&u.isWeak&&(d.lastWeak=u),this._overrides.set(o.objectId,d),this._update.modify(o)}for(const o of r)this._overrides.set(o,new te(null,!0)),this._update.remove(o);for(const o of n){const d=new te(null,!1),u=this._overrides.get(o);u!=null&&u.isWeak&&(d.lastWeak=u),this._overrides.set(o,d),this._update.remove(o)}if(a.length){const o=new Set;for(const d of a){const u=this._overrides.get(d);u!=null&&u.lastWeak?this._overrides.set(d,u.lastWeak):u&&!u.isWeak&&(this._overrides.delete(d),o.add(d))}t.forEachUnsafe(d=>{const u=d.getObjectId();o.has(u)&&(this._update.modify(d.readOptimizedFeatureWorldSpace()),o.delete(u))});for(const d of o.values())this._update.remove(d)}}takeOverrideUpdate(){const e=this._update;return e.isEmpty?null:(this._update=new dt,e)}asChunk(e){if(!this._chunk){const t=[];for(const s of this._overrides.values())s.inner!=null&&t.push(s.inner);this._chunk=ss.fromFeatures(t,e)}return this._chunk}invalidate(){this._chunk=null}},jr=class extends Le{},zr=class extends Gt{constructor(e,t,s){super(e,t),this._arcadeContextInfo=s,this.handledChunks=new Set,this.handledChunksForIdCreation=new Set,this.handledChunksForAttributeData=new Set,this._streamLayerDeferredObjectIdsToRemove=[]}destroy(){super.destroy();for(const e of this._source.chunks())this._cleanupChunkIds(e)}invalidateAttributeData(e){this.handledChunksForAttributeData.clear(),this._arcadeContextInfo=e,this._evalOptions=mt(this._evalOptions.$view.scale,e)}onSubscribe(e){super.onSubscribe(e),this._evalOptions=e.tile.createArcadeEvaluationOptions(this._arcadeContextInfo)}createState(e){return new jr(e)}get aggregateQueryEngine(){return null}displayMap(e,t,s){const r=new Map(e.map(n=>[t(n),n])),i=[];for(const n of this._source.chunks()){const a=n.reader.getCursor();for(;a.next();){const o=a.getObjectId(),d=a.getDisplayId(),u=r.get(o);if(u!=null){const c=s(d,u,o);i.push(c),r.delete(o)}}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const i of this._source.chunks()){const n=i.reader.getCursor();for(;n.next();){const a=n.getObjectId(),o=n.getDisplayId();t.has(o)&&!s.has(a)&&(r.push({...n.readLegacyFeatureWorldSpace(),displayId:o}),s.add(a))}}return{features:r,aggregates:[]}}async*applyOverrideUpdate(e){const t=[];for(const n of e.modified){const a=this._attributeStore.createDisplayIdForObjectId(n.objectId);n.displayId=a,t.push(a)}const s=q.fromOptimizedFeatures(e.modified,this._source.metadata).getCursor();for(;s.next();)this._attributeStore.setAttributeData(s.getDisplayId(),s,this._evalOptions);const r=[];for(const n of e.removed){const a=this._attributeStore.getDisplayIdForObjectId(n);a!=null&&r.push(a)}m("esri-2d-update-debug")&&console.debug("FeatureUpdateStrategy.applyLocalEdit",{message:e,modifiedDisplayIds:t,removedDisplayIds:r});const i=ss.fromFeatures(e.modified,this._source.metadata);this.handledChunks.add(i.chunkId),this.handledChunksForAttributeData.add(i.chunkId),this.handledChunksForIdCreation.add(i.chunkId);for(const n of this._sendStates.values())n.handledChunks.add(i.chunkId),yield new Se(n.subscription,null,t,!1,i.queryInfo);for(const n of this._sendStates.values()){const a=i.getTileReader(n.subscription.tile);yield new Se(n.subscription,a,r,!1,i.queryInfo)}for(const n of e.removed)this._attributeStore.releaseDisplayIdForObjectId(n)}async*updateChunks(){if(this._source.chunks().length){await this._updateAttributeData();for(const e of this._sendStates.values())yield*this._update(e)}}removeChunks(e){for(const t of e)this.handledChunks.delete(t.chunkId),this.handledChunksForAttributeData.delete(t.chunkId),this._cleanupChunkIds(t)}afterUpdateChunks(){for(const e of this._streamLayerDeferredObjectIdsToRemove)this._attributeStore.releaseDisplayIdForObjectId(e);this._streamLayerDeferredObjectIdsToRemove=[]}_cleanupChunkIds(e){if(this.handledChunksForIdCreation.has(e.chunkId)){const t=e.reader.getCursor();for(;t.next();){const s=t.getObjectId();this._source.isStream?this._streamLayerDeferredObjectIdsToRemove.push(s):this._attributeStore.releaseDisplayIdForObjectId(s)}this.handledChunksForIdCreation.delete(e.chunkId)}}async _updateAttributeData(){for(const e of this._source.chunks()){const{chunkId:t,reader:s}=e;if(!this.handledChunksForIdCreation.has(t)){this.handledChunksForIdCreation.add(t);const r=s.getCursor();for(;r.next();){const i=this._attributeStore.createDisplayIdForObjectId(r.getObjectId());r.setDisplayId(i)}}}for(const e of this._source.chunks())if(!this.handledChunksForAttributeData.has(e.chunkId)){this.handledChunksForAttributeData.add(e.chunkId);const t=e.reader.getCursor();for(;t.next();){const s=t.getDisplayId();this._attributeStore.setAttributeData(s,t,this._evalOptions)}}}*_update(e){const{subscription:t,handledChunks:s}=e;for(const r of this._source.chunks()){const{chunkId:i}=r;if(s.has(i))continue;s.add(i);const n=r.getTileReader(t.tile);n&&(yield new Ne(e.subscription,n,!1,r.end,r.queryInfo))}}},Ur=class{constructor(e,t){this._connection=e,this._source=t,this._version=1,this._registry=new Ls,this._proxy=new js({fetch:(s,r)=>this._connection.layerView.fetch(s,r),fetchDictionary:(s,r)=>this._connection.layerView.fetchDictionary(s,r)}),this._attributeStore=new zs({isLocal:!1,update:s=>$e(this._connection.container.updateAttributeView(s))})}destroy(){var e;this._proxy.destroy(),(e=this._strategy)==null||e.destroy(),this._attributeStore.destroy()}get aggregateQueryEngine(){var e;return(e=this._strategy)==null?void 0:e.aggregateQueryEngine}getDisplayFeatures(e){return this._strategy?this._strategy.getDisplayFeatures(e):{features:[],aggregates:[]}}getDisplayIds(e){const t={};return this._strategy&&this._strategy.displayMap(e,s=>s,(s,r,i)=>{t[i]=s}),t}getFeatureObjectIdsForAggregate(e){return this._strategy?this._strategy.getFeatureObjectIdsForAggregate(e):[]}onSubscribe(e){var t;(t=this._strategy)==null||t.onSubscribe(e)}onUnsubscribe(e){var t;(t=this._strategy)==null||t.onUnsubscribe(e)}async update(e,t,s,r,i){var k,T,v,S,F,w,O;const n=e.processor,a=K((k=this._schema)==null?void 0:k.storage,n.storage),o=K((T=this._schema)==null?void 0:T.mesh.properties,n.mesh.properties),d=K((v=this._schema)==null?void 0:v.mesh.factory,n.mesh.factory),u=K((S=this._schema)==null?void 0:S.mesh.strategy,n.mesh.strategy),c=Wr((F=this._schema)==null?void 0:F.expressionProperties,n.expressionProperties),l=c.some(A=>this._attributeStore.hasArcadeDependency(A)),p=c.some(A=>{var x;return((x=this._factory)==null?void 0:x.hasArcadeDependency(A))??!1}),_=c.some(A=>{var x;return(x=this._strategy)==null?void 0:x.hasArcadeDependency(A)})||((w=this._strategy)==null?void 0:w.isAggregate)&&l,f=p||_,g=o||d||u;if(!(a||g||p||l||_)&&!r)return;m("esri-2d-update-debug")&&console.debug(`Version[${this._version}] SymbolProcessor.update`,{changes:bt(this._schema,n),schema:n}),this._schema=n;const y=R.fromJSON(this._source.service.outSpatialReference),b=new De({fields:this._source.metadata.fieldsIndex,spatialReference:y});if((a||g||l)&&(await this._attributeStore.update(n.storage,b,this._source.metadata,y,t),(O=this._strategy)==null||O.invalidateAttributeData(X(n))),!r&&!g&&!f)return;(u||o||f)&&await this._updateStrategy(n.mesh.strategy,y,i,X(n)),this._updateSortKey(b,"sortKey"in n.mesh.properties?n.mesh.properties.sortKey:null);const I=new _r(b,this._proxy,s,this._registry);return(d||n.mesh.factory.symbology.type==="dictionary")&&(this._factory=await lr.create(I,n.mesh.factory)),this._invalidate(),this._version=t,this._connection.container.updateRenderState(this._version)}async applyOverrideUpdate(e){if(!this._strategy)return;const t=this._strategy.applyOverrideUpdate(e);for await(const s of t)try{await this._process(s)}catch{}}async updateChunks(){var e;await this._doUpdateChunks(),(e=this._strategy)==null||e.afterUpdateChunks()}async removeChunks(e){var t;(t=this._strategy)==null||t.removeChunks(e),this._attributeStore.incrementDisplayIdGeneration()}updateHighlight({highlights:e}){if(!this._strategy)return void this._attributeStore.setHighlight(e.map(({objectId:s,highlightFlags:r})=>({objectId:s,highlightFlags:r,displayId:-1})),e);const t=this._strategy.displayMap(e,({objectId:s})=>s,(s,{highlightFlags:r},i)=>({objectId:i,displayId:s,highlightFlags:r}));this._attributeStore.setHighlight(t,e)}async _doUpdateChunks(){if(!this._strategy)return;const e=this._strategy.updateChunks(),t=[],s=new Map;for await(const r of e){let i=s.get(r.id);i==null&&(i=new pr({concurrency:16,process:a=>this._process(a)}),s.set(r.id,i));const n=i.push(r).catch(a=>Pe(a));t.push(n)}try{await Promise.all(t)}catch{}m("esri-2d-update-debug")&&console.log("SendUpdates"),this._attributeStore.sendUpdates(),m("esri-2d-update-debug")&&console.log("SendUpdates.await")}async _updateStrategy(e,t,s,r){var i;switch((i=this._strategy)==null||i.destroy(),e.type){case"feature":this._strategy=new zr(this._source,this._attributeStore,r);break;case"binning":this._strategy=await fr.create(e,t,this._source,this._attributeStore,r);break;case"cluster":this._strategy=await Tr.create(this._connection,e,t,this._source,this._attributeStore,r)}for(const n of s)this._strategy.onSubscribe(n)}async _updateSortKey(e,t){var s;if(this._sortInfo=It((s=this._sortInfo)==null?void 0:s.computed),t!=null){const r=t.byRenderer?null:await e.createComputedField(t);this._sortInfo={...t,computed:r}}}_invalidate(){this._strategy&&this._strategy.invalidate()}async _process(e){var o,d;const t=e.subscription;if(m("esri-2d-update-debug")){const u=t.tile;console.debug(`Version[${this._version}] Tile[${u.key.id}, end=${e.end}] Processor._process`)}await this._fetchResources(e),N(t.signal);const s=await this._write(e,t.tile.createArcadeEvaluationOptions(X(this._schema))),r=t.tile.tileInfoView.getLODInfoAt(t.tile.key),{message:i,transferList:n}=s.serialize(r),a={objectIdMap:null,inner:e.createMessage(i,this._version,this._attributeStore.epoch)};if((o=this._schema)!=null&&o.mesh.properties.returnMeshObjectId){a.objectIdMap={};const u=(d=e.reader)==null?void 0:d.getCursor();if(u)for(;u.next();)a.objectIdMap[u.getDisplayId()]=u.getObjectId()}if(N(t.signal),await this._connection.container.onMessage(a,{signal:t.signal,transferList:n}),this._attributeStore.sendUpdates(),m("esri-2d-update-debug")){const u=t.tile;console.debug(`Version[${this._version}] Tile[${u.key.id}, end=${e.end}] Processor._process.await`)}}async _fetchResources(e){await this._fetchMatcherResources(e),await this._fetchWriterResources(e)}async _fetchMatcherResources(e){if(e.reader)return this._factory.enqueueMatcherRequests(this._proxy,e.reader)}async _fetchWriterResources(e){if(!e.reader)return;const t=e.reader.getCursor(),s=e.subscription.tile.createArcadeEvaluationOptions(X(this._schema));for(;t.next();)this._factory.enqueueWriterRequests(this._proxy,t,s);await this._proxy.fetchEnqueuedResources()}async _write(e,t){var u;const s=e.subscription.tile,r=(u=e.reader)==null?void 0:u.getCursor(),i=(r==null?void 0:r.getSize())??0,n=s.tileInfoView.tileInfo.isWrappable,a=s.tileInfoView.tileInfo.spatialReference.isWGS84,o=new ir(s.key,this._strategy.enablePixelBuffering,n,a,i);if(!r)return o;const d=s.createArcadeEvaluationOptions(X(this._schema));for(;r.next();){const c=this._getSortKeyValue(r,t);o.entityStart(r.getDisplayId(),c),this._factory.write(o,this._proxy,r,d,s.level),o.entityEnd()}return o}_getSortKeyValue(e,t){if(!this._sortInfo)return 0;const{computed:s,order:r,byRenderer:i}=this._sortInfo,n=i?this._factory.getSortKey(e,t):s==null?void 0:s.read(e,t);return n==null||isNaN(n)?0:n*(r==="asc"?-1:1)}};function Wr(h,e){var s,r,i,n;const t=[];return((s=h==null?void 0:h.timeExtent)==null?void 0:s.start)===((r=e.timeExtent)==null?void 0:r.start)&&((i=h==null?void 0:h.timeExtent)==null?void 0:i.end)===((n=e.timeExtent)==null?void 0:n.end)||t.push("timeProperties"),t}function X(h){const{timeZone:e}=(h==null?void 0:h.mesh.properties)??{},{timeExtent:t}=(h==null?void 0:h.expressionProperties)??{};return{timeZone:e,timeExtent:t}}let Gr=class is{static from(e){let t=0,s=0,r=0;return e.forEach(i=>{const n=i._readGeometry();n&&(s+=n.isPoint?1:n.lengths.reduce((a,o)=>a+o,0),r+=n.isPoint?1:n.lengths.length,t+=1)}),new is(t,s,r)}constructor(e,t,s){this.featureCount=e,this.vertexCount=t,this.ringCount=s}toJSON(){return{featureCount:this.featureCount,ringCount:this.featureCount,vertexCount:this.featureCount}}};const be=4;function Lr(h,e,t){const s=h.orderByFields??t.objectIdField+" ASC",r=h.source,i={returnCentroid:!(r!==null&&typeof r=="object"&&"path"in r&&fs(r.path))&&t.serviceGeometryType==="esriGeometryPolygon",returnGeometry:!0,timeReferenceUnknownClient:t.timeReferenceUnknownClient??void 0,outSpatialReference:R.fromJSON(h.outSpatialReference),orderByFields:h.type==="memory"?[]:[s],where:e.mutable.dataFilter.definitionExpression??"1=1",outFields:e.mutable.availableFields,multipatchOption:t.serviceGeometryType==="esriGeometryMultiPatch"?"xyFootprint":null};if(e.type==="feature"){const{gdbVersion:n,historicMoment:a,timeExtent:o}=e.mutable.dataFilter;return{...i,gdbVersion:n,historicMoment:a?new Date(a):null,timeExtent:o?ys.fromJSON(o):null,outFields:e.mutable.availableFields}}return i}let Nr=class ns{static fromSchema(e,t,s){const r=t.type==="feature"?t.mutable.dataFilter.queryScaleRanges:[];return new ns(Lr(e,t,s),r,s.subtypeField,t.mutable.dataFilter.customParameters,s.geometryType,e.queryMetadata)}constructor(e,t,s,r,i,n){this._queryParams=e,this._queryScaleRanges=t,this._subtypeField=s,this._customParameters=r,this._geometryType=i,this._queryMetadata=n}get pageSize(){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support paged queries");const e=this._queryMetadata.supportsMaxRecordCountFactor?be:null,t=(this._queryMetadata.maxRecordCount??8e3)*(e??1);return Math.min(8e3,t)}updateHistoricMoment(e){this._queryParams.historicMoment=e}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,t){if(!t.getSize())return null;const s=e.clone();if(this._queryParams.outFields[0]==="*"){if((s.outFields??[])[0]==="*")return null;s.outFields=this._queryParams.outFields}else{const r=new Set(this._queryParams.outFields),i=[];for(const n of r)t.hasField(n)||i.push(n);if(i.length===0)return null;s.outFields=i}return s.returnGeometry=!1,s.returnCentroid=!1,s.quantizationParameters=null,s.cacheHint=!0,{inner:s,customParameters:this._customParameters}}createQuery(e={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new wt({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,t){if(this._queryMetadata==null)throw new Error("InternalError: Service does not support tile queries");const s=this.createQuery(t),r=s.inner;if(this._queryScaleRanges.length){const i=this._queryScaleRanges.filter(n=>(!n.minScale||n.minScale>=e.maxScale)&&(!n.maxScale||n.maxScale<=e.minScale)).map(n=>n.subtypeCode);if(i.length){const n=`${this._subtypeField} IN (${i})`;r.where=gs(r.where,n)}}if(r.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),r.resultType="tile",r.geometry=e.extent,this._queryMetadata.supportsQuantization?this._geometryType==="esriGeometryPolyline"&&(r.maxAllowableOffset=e.resolution*m("feature-polyline-generalization-factor")):this._geometryType!=="esriGeometryPolyline"&&this._geometryType!=="esriGeometryPolygon"||(r.maxAllowableOffset=e.resolution,this._geometryType==="esriGeometryPolyline"&&(r.maxAllowableOffset*=m("feature-polyline-generalization-factor"))),r.defaultSpatialReferenceEnabled=this._queryMetadata.supportsDefaultSpatialReference,r.compactGeometryEnabled=this._queryMetadata.supportsCompactGeometry,this._queryMetadata.supportsMaxRecordCountFactor&&(r.maxRecordCountFactor=be),m("esri-tiles-debug")){const i=e.id.replaceAll("/",".");s.customParameters=s.customParameters?{...s.customParameters,tileId:i}:{tileId:i}}return s}createPagedTileQuery(e,t){const s=this.pageSize;return this.createTileQuery(e,{start:s*t,num:s,returnExceededLimitFeatures:!0})}createPagedQuery(e){const t=this.pageSize;return this.createQuery({start:t*e,num:t,returnExceededLimitFeatures:!0,maxRecordCountFactor:be})}};const Br=2500;let ne=class extends vt{constructor(e){super(),this._connection=e,this._enabledEventTypes=new Set,this._updateInfo={websocket:0,client:0},this._lastTime=performance.now(),this._queuedCommands=[],this.addHandles([xe(()=>{var t;return((t=this._strategy)==null?void 0:t.connectionStatus)??"disconnected"},t=>{this._layerView.setProperty({propertyName:"pipelineConnectionStatus",value:t})},{initial:!0}),xe(()=>{var t;return((t=this._strategy)==null?void 0:t.errorString)||null},t=>this._layerView.setProperty({propertyName:"pipelineErrorString",value:t}),{initial:!0})])}destroy(){this._strategy=null,this.removeAllHandles()}get _layerView(){return this._connection.layerView}set strategy(e){this._strategy==null&&this._resetUpdateInfo(performance.now());const t="event-handles";this.removeHandles(t),e!=null&&(this.addHandles([e.events.on("data-received",s=>this._onFeature(s)),e.events.on("message-received",s=>this._onWebSocketMessage(s)),e.events.on("features-updated",s=>this._onUpdate(s)),e.events.on("tick",()=>this._onTick())],t),this._queuedCommands.forEach(s=>s(e)),this._queuedCommands=[]),this._strategy=e}updateCustomParameters(e){e!=null&&this._callOrEnqueue(t=>t.updateCustomParameters(e))}sendMessageToSocket(e){this._callOrEnqueue(t=>t.sendMessageToSocket(e))}sendMessageToClient(e){this._callOrEnqueue(t=>t.sendMessageToClient(e))}enableEvent(e,t){t?this._enabledEventTypes.add(e):this._enabledEventTypes.delete(e)}disconnect(){var e;(e=this._strategy)==null||e.disconnect()}connect(){var e;(e=this._strategy)==null||e.connect()}clear(){var e;(e=this._strategy)==null||e.clear()}_onWebSocketMessage(e){this._enabledEventTypes.has("message-received")&&this._layerView.emitEvent({name:"message-received",event:e})}_onFeature(e){this._updateInfo.websocket++,this._enabledEventTypes.has("data-received")&&this._layerView.emitEvent({name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}})}_onUpdate(e){this._updateInfo.client+=e}_onTick(){const e=performance.now(),t=e-this._lastTime;if(t>Br){const s=Math.round(this._updateInfo.client/(t/1e3)),r=Math.round(this._updateInfo.websocket/(t/1e3));this._resetUpdateInfo(e),this._layerView.emitEvent({name:"update-rate",event:{client:s,websocket:r}})}}_resetUpdateInfo(e){this._lastTime=e,this._updateInfo.client=0,this._updateInfo.websocket=0}_callOrEnqueue(e){this._strategy!=null?e(this._strategy):this._queuedCommands.push(e)}};L([re()],ne.prototype,"_strategy",void 0),ne=L([xt("esri.views.2d.layers.features.sources.StreamMessenger")],ne);let Be=class{constructor(e){this._store=e,this._controller=new AbortController}destroy(){this._controller.abort()}get _options(){return{signal:this._controller.signal}}unsafeSetQueryHistoricMoment(e){throw new Error("InternalError: LoadStrategy does not support query info")}async queryByObjectId(e){throw new Error("InternalError: LoadStrategy does not support fetching")}async addParquetFile(e){throw new Error("InternalError: LoadStrategy does not support loading blobs")}};const Ie=268435455;let Vr=class{constructor(){this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}};function Xr(h,e,t=!1){var F;const d=h.asUnsafe(),u=d.pos(),c=new Vr;let l=0,p=0;const _=1,f=2,g=4,y=3;let b=null,I=null,k=null,T=!1;const v=[];for(;d.next();)switch(d.tag()){case 1:b=d.getString();break;case 3:I=d.getString();break;case 12:k=d.processMessage(bs);break;case 9:if(c.exceededTransferLimit=d.getBool(),c.exceededTransferLimit){c.offsets.geometry=t?new Float64Array(8e3):new Int32Array(8e3),c.centroid=t?new Float64Array(16e3):new Int32Array(16e3);for(let w=0;w<c.centroid.length;w++)c.centroid[w]=Ie}break;case 13:{const w=d.processMessage(ms);w.index=l++,v.push(w);break}case 15:{const w=d.getLength(),O=d.pos()+w;if(!c.exceededTransferLimit){const x=c.offsets.geometry,$=c.centroid;x.push(0),$.push(Ie),$.push(Ie)}!T&&c.exceededTransferLimit&&(T=!0,c.offsets.attributes=t?new Float64Array(8e3*l):new Uint32Array(8e3*l));let A=p*l;for(;d.pos()<O&&d.next();)switch(d.tag()){case _:{T?c.offsets.attributes[A++]=d.pos():c.offsets.attributes.push(d.pos());const x=d.getLength();d.skipLen(x);break}case f:if(e){const x=d.getLength(),$=d.pos()+x;for(;d.pos()<$&&d.next();)switch(d.tag()){case y:{d.getUInt32();const E=d.getSInt64(),P=d.getSInt64();c.centroid[2*p]=E,c.centroid[2*p+1]=P;break}default:d.skip()}}else{c.offsets.geometry[p]=d.pos();const x=d.getLength();c.vertexCount+=x,d.skipLen(x)}break;case g:{const x=d.getLength(),$=d.pos()+x;for(;d.pos()<$&&d.next();)switch(d.tag()){case y:{d.getUInt32();const E=d.getSInt64(),P=d.getSInt64();c.centroid[2*p]=E,c.centroid[2*p+1]=P;break}default:d.skip()}break}default:d.skip()}p++,c.hasFeatures=!0;break}default:d.skip()}const S=b||I;if(!S)throw new z("FeatureSet has no objectId or globalId field name");return c.fields=new H(v),c.featureCount=p,c.fieldCount=l,c.objectIdFieldIndex=(F=c.fields.get(S))==null?void 0:F.index,c.transform=k,c.displayIds=new Uint32Array(c.featureCount),c.groupIds=new Uint16Array(c.featureCount),d.move(u),c}const Yr=!0,ht=268435455,ut=128,ct=128e3,W={small:{delta:new Int32Array(ut),decoded:new Int32Array(ut)},large:{delta:new Int32Array(ct),decoded:new Int32Array(ct)}};function lt(h){return h<=W.small.delta.length?W.small:(h<=W.large.delta.length||(W.large.delta=new Int32Array(Math.round(1.25*h)),W.large.decoded=new Int32Array(Math.round(1.25*h))),W.large)}function Qr(h){try{const t=new ws(new Uint8Array(h),new DataView(h));for(;t.next();){if(t.tag()===2)return Hr(t.getMessage());t.skip()}}catch(e){const t=new z("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});xs.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(t)}return null}function Hr(h){for(;h.next();){if(h.tag()===1)return h.getMessage();h.skip()}return null}function Jr(h){const u=h.getLength(),c=h.pos()+u;for(;h.pos()<c&&h.next();)switch(h.tag()){case 1:return h.getString();case 2:return h.getFloat();case 3:return h.getDouble();case 4:return h.getSInt32();case 5:return h.getUInt32();case 6:return h.getInt64();case 7:return h.getUInt64();case 8:return h.getSInt64();case 9:return h.getBool();default:return h.skip(),null}return null}function Zr(h,e,t,s,r,i){return .5*Math.abs(h*s+t*i+r*e-h*i-t*e-r*s)}function we(h,e,t,s,r){return h?e*r-s*t===0&&e*s+t*r>0:!1}class de extends ce{static fromBuffer(e,t,s=!1){const r=t.geometryType,i=Qr(e),n=Xr(i,r==="esriGeometryPoint",s);return new de(i,n,t)}constructor(e,t,s){super(s),this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0},this._parseCaches=new Array,this._geometryType=s.geometryType,this._reader=e,this._header=t,this._hasNext=t.hasFeatures,this._isPoints=s.geometryType==="esriGeometryPoint"}get _size(){return this._header.featureCount}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get hasZ(){return!1}get hasM(){return!1}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getInTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._featureIndex=e}getAttributeHash(){let e="";for(const t of this._header.fields.fields)e+=this._readAttributeAtIndex(t.index)+".";return e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}readGeometryArea(){return this._cache.area||this._readGeometry(!0),this._cache.area}copy(){const e=this._reader.clone(),t=new de(e,this._header,this.metadata);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}get usedMemory(){var e;return Ee+(((e=this._cache.geometry)==null?void 0:e.usedMemory)??0)}_readX(){return this._header.centroid[2*this._featureIndex]}_readY(){return this._header.centroid[2*this._featureIndex+1]}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];return e===ht?null:new C([],[e,t])}_readGeometry(e=!1){if(this._cache.geometry===void 0){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===ht)return null;const s=this._header.centroid[2*this._featureIndex],r=this._header.centroid[2*this._featureIndex+1];t=new C([],[s,r])}else{const s=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(s===0)return null;r.move(s);try{t=e?this._parseGeometryForDisplay(r):this._parseGeometry(r)}catch{return null}}return(t==null?void 0:t.coords.length)===0&&(t=null),this._cache.geometry=t,t}return this._cache.geometry}_readAttribute(e,t){const s=this._header.fields.get(e);if(s==null)return;const r=this._readAttributeAtIndex(s.index),i=this._header.fields.isDateField(s.name);return t?r==null?r:i?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._header.fields.fields)e[t.name]=this._readAttributeAtIndex(t.index);return e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext,e._parseCaches=this._parseCaches}_readAttributeAtIndex(e){let t=this._parseCaches[e];if(t||(t=new Us(this.getSize()),this._parseCaches[e]=t),t.has(this._featureIndex))return t.get(this._featureIndex);const s=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],r=this._reader;r.move(s);const i=Jr(r);return t.set(this._featureIndex,i),i}_readGeometryDeltaDecoded(e=!1){if(this._cache.unquantGeometry===void 0){const t=this._readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;if(!this.getInTransform())return this._cache.unquantGeometry=t,t;const s=lt(t.coords.length).decoded,r=t.clone(s),i=r.coords;let n=0;for(const a of r.lengths){for(let o=1;o<a;o++){const d=2*(n+o),u=2*(n+o-1);i[d]+=i[u],i[d+1]+=i[u+1]}n+=a}return this._cache.unquantGeometry=r,r}return this._cache.unquantGeometry}_parseGeometry(e){const r=e.asUnsafe(),i=r.getLength(),n=r.pos()+i,a=[],o=[];for(;r.pos()<n&&r.next();)switch(r.tag()){case 2:{const d=r.getUInt32(),u=r.pos()+d;for(;r.pos()<u;)o.push(r.getUInt32());break}case 3:{const d=r.getUInt32(),u=r.pos()+d;for(a.push(r.getSInt64()),a.push(r.getSInt64()),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();r.pos()<u;)a.push(r.getSInt64()),a.push(r.getSInt64()),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();break}default:r.skip()}return new C(o,a)}_parseGeometryForDisplay(e){const r=e.asUnsafe(),i=r.getLength(),n=r.pos()+i,a=[],o=[];let d=0,u=0,c=null,l=0;const p=this.geometryType==="esriGeometryPolygon",_=this.geometryType==="esriGeometryPolyline",f=p||_;for(;r.pos()<n&&r.next();)switch(r.tag()){case 2:{const g=r.getUInt32(),y=r.pos()+g;for(;r.pos()<y;){const b=r.getUInt32();a.push(b),d+=b}c=lt(2*d).delta;break}case 3:{r.getUInt32();const g=2+(this.hasZ?1:0)+(this.hasM?1:0);Is(c);for(const y of a)if(u+g*y>c.length)for(let b=0;b<y;b++)r.getSInt32(),r.getSInt32(),this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();else if(p&&Yr){const b=this.getAreaSimplificationThreshold(y,this._header.vertexCount);let I=2,k=1;const T=!1;let v=r.getSInt32(),S=r.getSInt32();c[u++]=v,c[u++]=S,this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();let F=r.getSInt32(),w=r.getSInt32();for(this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();I<y;){let O=r.getSInt32(),A=r.getSInt32();this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();const x=v+F,$=S+w;Zr(v,S,x,$,x+O,$+A)>=b?(l+=-.5*(x-v)*($+S),k>1&&we(f,c[u-2],c[u-1],F,w)?(c[u-2]+=F,c[u-1]+=w):(c[u++]=F,c[u++]=w,k++),v=x,S=$):(O+=F,A+=w),F=O,w=A,I++}k<3||T?u-=2*k:(l+=-.5*(v+F-v)*(S+w+S),we(f,c[u-2],c[u-1],F,w)?(c[u-2]+=F,c[u-1]+=w,o.push(k)):(c[u++]=F,c[u++]=w,o.push(++k)))}else{let b=0,I=r.getSInt32(),k=r.getSInt32();this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32(),c[u++]=I,c[u++]=k,b+=1;for(let T=1;T<y;T++){const v=r.getSInt32(),S=r.getSInt32(),F=I+v,w=k+S;l+=-.5*(F-I)*(w+k),this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32(),T>2&&we(f,c[u-2],c[u-1],v,S)?(c[u-2]+=v,c[u-1]+=S):(c[u++]=v,c[u++]=S,b+=1),I=F,k=w}o.push(b)}break}default:r.skip()}return this._cache.area=l,o.length?new C(o,c):c!=null?this._createQuantizedExtrudedGeometry(c[0],c[1]):null}}class fe{constructor(e,t){this.service=e,this._metadata=t}destroy(){}}function Kr(h,e){switch(h.type){case"memory":return new ti(h,e);case"ogc":return new ii(h,e);case"feature-service":return h.queryMetadata.supportsFormatPBF&&m("featurelayer-pbf")?new si(h,e):new ri(h,e)}}async function ei(h){const e=new Ss;return await e.open(h,{}),e}let ti=class extends fe{constructor(e,t){super(e,t),this._portsOpen=ei(e.source).then(s=>this.client=s)}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const s=await this.client.invoke("queryFeatures",e.toJSON(),t);return q.fromFeatureSet(s,this._metadata)}},si=class extends fe{async executeQuery(e,t){const{data:s}=await vs(this.service.source,e,t),r=!e.quantizationParameters;return de.fromBuffer(s,this._metadata,r)}};class ri extends fe{async executeQuery(e,t){var n;const{source:s,queryMetadata:r}=this.service;if(e.quantizationParameters!=null&&!r.supportsQuantization){const a=e.clone(),o=Ot(a.quantizationParameters);a.quantizationParameters=null;const{data:d}=await Qe(s,a,this._metadata.spatialReference,t),u=Mt(d,this._metadata.objectIdField);return qt(o,u),q.fromOptimizedFeatureSet(u,this._metadata)}const{data:i}=await Qe(s,e,this._metadata.spatialReference,t);return this._metadata.geometryType==="esriGeometryPoint"&&(i.features=(n=i.features)==null?void 0:n.filter(a=>{if(a.geometry!=null){const o=a.geometry;return Number.isFinite(o.x)&&Number.isFinite(o.y)}return!0})),q.fromFeatureSet(i,this._metadata)}}let ii=class extends fe{async executeQuery(e,t){if(e.quantizationParameters&&!this.service.queryMetadata.supportsQuantization){const r=e.clone(),i=Ot(r.quantizationParameters);r.quantizationParameters=null;const n=await Ke(this.service.source,e,t);return qt(i,n),q.fromOptimizedFeatureSet(n,this._metadata)}const s=await Ke(this.service.source,e,t);return q.fromOptimizedFeatureSet(s,this._metadata)}},as=class extends Be{constructor(e,t,s,r,i){super(s),this._serviceInfo=e,this._queryInfo=t,this._metadata=r,this._connection=i,this._queue=new yt({concurrency:16,process:async n=>{var o;const a={signal:(o=n.options)==null?void 0:o.signal,query:n.query.customParameters};return this._adapter.executeQuery(n.query.inner,a)}}),this._adapter=Kr(e,r)}unsafeSetQueryHistoricMoment(e){this._queryInfo.updateHistoricMoment(e)}async updateFields(e){this._queryInfo.updateFields(e);const t=Array.from(this._store.chunks()).map(async r=>{const i=wt.fromJSON(r.queryInfo.queryJSON);if(i)try{return await this._tryUpdateFields(r.reader,i),null}catch(n){return n}}),s=(await Promise.all(t)).filter(r=>r);if(s.length)throw new z("featurelayer-query","Encountered errors when downloading fields",{errors:s})}async queryByObjectId(e){if(e.length===0)return q.empty(this._metadata);const t=this._queryInfo.createQuery({objectIds:e});return this._fetch(t)}async _fetch(e,t){const s=await this._enqueue(e,t);return await this._tryUpdateFields(s,e.inner),s}async _tryUpdateFields(e,t){const s=this._queryInfo.createPatchFieldsQuery(t,e);if(!s)return;const r=await this._enqueue(s,this._options);e.joinAttributes(r)}async _enqueue(e,t){return this._connection.onEvent({type:"fetchStart"}),this._queue.push({query:e,options:t}).finally(()=>{this._connection.onEvent({type:"fetchEnd",done:this._queue.length===0})})}},os=class extends as{constructor(){super(...arguments),this._chunksById=new Map}unload(e){this._removeChunks(e.tile)}_addChunk(e){const t=e.tile.id;this._chunksById.has(t)||this._chunksById.set(t,[]);const s=e.size();(s||e.first||e.end)&&(m("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] ATileLoadStrategy.addChunk [count=${s}]`),this._chunksById.get(t).push(e),this._store.insert(e))}_removeChunks(e){const t=this._chunksById.get(e.key.id)??[];for(const s of t)m("esri-2d-update-debug")&&console.debug(`Tile[${e.key.id}] Chunk[${s.chunkId}] ATileLoadStrategy.removeChunk`),this._store.remove(s);this._chunksById.delete(e.key.id)}},_t=class extends J{constructor(e,t,s,r,i,n){var a,o;super(),this._reader=e,this._queryJSON=t,this._tile=s,this._sourceTile=r,this._sourceTileDepth=i,this._end=n,this.chunkId=`${this._tile.key.id}.${(a=this._sourceTile)==null?void 0:a.key.id}${this._end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${(o=this._sourceTile)==null?void 0:o.key.normalizedId}${this._end?"e":""}`}get queryInfo(){var e;return{type:"drill-down-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,sourceTileDepth:this._sourceTileDepth,sourceTileId:(e=this._sourceTile)==null?void 0:e.key.id,size:this.size(),end:this.end}}get first(){return this._sourceTileDepth===0}get reader(){return this._reader}get end(){return this._end}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}},ni=class{constructor(e,t){this.subscription=e,this._tileIdToResult=new Map,this._controller=new AbortController,this._handles=ue([ae(e.signal,()=>this._controller.abort()),ae(t,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get(e){return this._tileIdToResult.get(e)}set(e,t){this._tileIdToResult.set(e,t)}get options(){return{signal:this._controller.signal}}},ai=class extends os{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new ni(e,this._options));const t=this._loadStates.get(e.key.id);let s;try{for await(const i of this._fetchChunkInfos(t,e.tile,0)){const{queryJSON:n,reader:a,sourceTile:o,sourceTileDepth:d,tile:u}=i,c=new _t(a,n,u,o,d,!1);N(t.options),this._addChunk(c)}}catch(i){s=i}const r=new _t(q.empty(this._metadata),null,e.tile,null,-1,!0);if(this._addChunk(r),s)throw s}unload(e){var t;super.unload(e),(t=this._loadStates.get(e.key.id))==null||t.destroy(),this._loadStates.delete(e.key.id)}async*_fetchChunkInfos(e,t,s){let r=e.get(t.id);const i=!!r;if(r||(r=await this._fetchChunkInfo(e,t,s),e.set(t.id,r)),r.reader.exceededTransferLimit&&s<m("featurelayer-query-max-depth"))for(const n of t.createChildTiles())yield*this._fetchChunkInfos(e,n,s+1);else i||(yield r)}async _fetchChunkInfo(e,t,s){const r=e.subscription.tile.getQuantizationParameters(),i=this._queryInfo.createTileQuery(t,{returnExceededLimitFeatures:!1,quantizationParameters:r});return{reader:await this._fetch(i,e.options),queryJSON:i.inner.toJSON(),tile:e.subscription.tile,sourceTile:t,sourceTileDepth:s}}},pt=class extends J{constructor(e,t,s,r,i){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._page=r,this._end=i,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get queryInfo(){return{type:"paged-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get page(){return this._page}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}},oi=class{constructor(e,t){this.subscription=e,this._pages=new Set,this._controller=new AbortController,this._done=!1,this._handles=ue([ae(e.signal,()=>this._controller.abort()),ae(t,()=>this._controller.abort())])}destroy(){this._controller.abort(),this._handles.remove()}get pageStart(){let e=-1;for(const t of this._pages.values())e=Math.max(e,t);return e+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(e,t){this._pages.add(e),this._done=this._done||t}};class di extends os{constructor(){super(...arguments),this._loadStates=new Map}destroy(){super.destroy();for(const e of this._loadStates.values())e.destroy();this._loadStates.clear()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new oi(e,this._options));const t=this._loadStates.get(e.key.id);let s;try{await this._fetchPages(t)}catch(i){s=i}const r=new pt(q.empty(this._metadata),null,e.tile,-1,!0);if(ks(t.options)||this._addChunk(r),s)throw s}unload(e){var t;super.unload(e),(t=this._loadStates.get(e.key.id))==null||t.destroy(),this._loadStates.delete(e.key.id)}async _fetchPages(e){let r=0,i=e.pageStart,n=1;for(;r<20&&!e.done;){const a=[];for(let d=0;d<n;d++)a.push(this._fetchChunk(e,i++));const o=await Promise.all(a);for(const d of o)(d.size()!==0||d.first)&&(e.add(d.page,!d.reader.exceededTransferLimit),N(e.options),this._addChunk(d));r++,n=Math.min(n+1,4)}}async _fetchChunk(e,t){const s=e.subscription.tile,r=this._queryInfo.createPagedTileQuery(s,t),i=await this._fetch(r,e.options);return new pt(i,r.inner.toJSON(),s,t,!1)}}let he=class extends J{constructor(e,t,s,r){super(),this._reader=e,this._queryJSON=t,this._page=s,this._end=r,this.chunkId=`${this._page}${this.end?"e":""}`,this.normalizedChunkId=this.chunkId}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get queryInfo(){return{type:"snapshot",chunkId:this.chunkId,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}};class Ve extends ce{constructor(e,t,s,r,i,n=new Uint32Array(r.size())){var a,o;super(e),this._fields=t,this._geometryInfo=s,this._inner=r,this._chunkId=i,this._displayIds=n,this._index=-1,this.usedMemory=Ee,this._size=this._inner.size(),this._geometryInfo.type==="geometry"&&(this._primaryGeometryIndex=(a=this._fields.get(this._geometryInfo.primaryFieldName))==null?void 0:a.index),e.objectIdField!=null&&(this._objectIdFieldIndex=(o=this._fields.get(e.objectIdField))==null?void 0:o.index),this._chunkId>65535&&console.error("Exceeded max allowed parquet reader size")}destroy(){super.destroy(),this._inner.free()}get fields(){return this._fields}get geometryType(){return this._geometryInfo.geometryType}get hasFeatures(){return!0}get hasNext(){throw new Error("Method not implemented.")}get exceededTransferLimit(){return!1}get hasZ(){return!1}get hasM(){return!1}getInTransform(){return null}getSize(){return this._size}getCursor(){return this.copy()}getAttributeHash(){let e="";for(const t of this.fields.fields)e+=this._readAttribute(t.name,!1)+".";return e}getObjectId(){return this._objectIdFieldIndex!=null?this._inner.readAttribute(this._index,this._objectIdFieldIndex):this._index<<16|this._chunkId}getDisplayId(){return this._displayIds[this._index]}setDisplayId(e){this._displayIds[this._index]=e}setIndex(e){this._index=e}getBoundsXMin(){return this._inner.boundsXMin(this._index)}getBoundsYMin(){return this._inner.boundsYMin(this._index)}getBoundsXMax(){return this._inner.boundsXMax(this._index)}getBoundsYMax(){return this._inner.boundsYMax(this._index)}setBoundsXMin(e){throw new Error("InternalError: Setting bounds is unsupported")}setBoundsYMin(e){throw new Error("InternalError: Setting bounds is unsupported")}setBoundsXMax(e){throw new Error("InternalError: Setting bounds is unsupported")}setBoundsYMax(e){throw new Error("InternalError: Setting bounds is unsupported")}getIndex(){return this._index}next(){for(;++this._index<this._size&&!this._getExists(););return this._index<this._size}readGeometryArea(){throw new Error("Method not implemented.")}copy(){const e=new Ve(this.metadata,this._fields,this._geometryInfo,this._inner,this._chunkId,this._displayIds);return this.copyInto(e),e}copyInto(e){super.copyInto(e),e._index=this._index}readGeometryForDisplayTransformed(e){const[t,s]=e.translate,[r,i]=e.scale,n=this._inner.readGeometryTransformed(this._index,t,s,r,-i);return n?new C(n.readLengthsUnsafe(),n.readCoordsUnsafe()):null}_readGeometry(e){const t=this._inner.readCoords(this._index),s=this._inner.readLengths(this._index);return t&&s?new C(s,t):null}_readX(){var e;return(e=this._readGeometry())==null?void 0:e.coords[0]}_readY(){var e;return(e=this._readGeometry())==null?void 0:e.coords[1]}_readServerCentroid(){return null}_readAttribute(e,t){const s=this.fields.get(e);if(!s)return;const r=this._inner.readAttribute(this._index,s.index);if(r==null)return r;const i=this.fields.isDateField(s.name);return t?r==null?r:i?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._fields.fields)this._inner.hasField(t.index)&&t.index!==this._primaryGeometryIndex&&(e[t.name]=this._readAttribute(t.name,!1));return this._objectIdFieldIndex==null&&(e.__OBJECTID=this.getObjectId()),e}}class hi extends Be{constructor(e,t,s,r){super(r),this._service=e,this._metadata=t,this._schema=s,this._chunkId=0,this._files=[],this._availableFields=new Set(s.mutable.availableFields);const{geometryInfo:i}=this._service;i.type==="location"?(this._availableFields.add(i.latitudeFieldName),this._availableFields.add(i.longitudeFieldName)):this._availableFields.add(i.primaryFieldName)}destroy(){for(const e of this._files)e.destroy()}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}async updateFields(e){await this._promise;const t=new Set(e),s=Fs(t,this._availableFields);this._availableFields=Ms(s,this._availableFields),await Promise.all(this._files.map(r=>{const i=Array.from(s).map(n=>r.metadata.getFieldIndex(n));return r.inner.updateChunks(new Uint16Array(i))}))}async load(e){return this._promise==null&&(this._promise=this._download()),this._promise}unload(e){}async addParquetFile(e){this._insert(e)}async _insert(e){const t=await er.create(e,{geometryInfo:this._service.geometryInfo,outSpatialReference:this._service.outSpatialReference,getCustomParameters:()=>this._schema.mutable.dataFilter.customParameters}),{geometryInfo:s}=this._service;N(this._options);const{fields:r,timeZoneByFieldName:i}=this._service.metadata.fieldsIndex,n=r.map(d=>({...d,index:t.metadata.getFieldIndex(d.name)})),a=H.fromJSON({fields:n,timeZoneByFieldName:i}),o=new Uint16Array(Array.from(this._availableFields.values()).map(d=>{var u;return(u=a.get(d))==null?void 0:u.index}));await t.inner.readChunksWithCallback(o,d=>{const u=this._chunkId++,c=new Ve(this._metadata,a,s,d,u),l=new he(c,null,u,!1);this._store.insert(l)}),this._files.push(t)}async _download(){try{await Promise.all(this._service.source.urls.map(t=>this._insert(t)));const e=new he(q.empty(this._metadata),null,-1,!0);this._store.insert(e)}catch(e){throw console.error(e),e}}}class ui extends as{constructor(e,t,s,r,i,n){super(e,t,s,i,n),this._random=new St(1e3),this._featureCount=r}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}load(e){return this._promise==null&&(this._promise=this._downloadPages(this._featureCount)),this._promise}unload(e){}async _downloadPages(e){const t=Math.ceil(e/this._queryInfo.pageSize),s=Array.from({length:t},(a,o)=>o).sort((a,o)=>this._random.getInt()-this._random.getInt()),r=await Promise.all(s.map(a=>this._downloadPage(a))),i=new he(q.empty(this._metadata),null,-1,!0);this._store.insert(i);const n=r.filter(a=>a);if(n.length)throw new z("featurelayer-query","Encountered errors when downloading data",{errors:n})}async _downloadPage(e){try{const t=this._queryInfo.createPagedQuery(e),s=await this._fetch(t,this._options),r=new he(s,t.inner.toJSON(),e,!1);return N(this._options),this._store.insert(r),null}catch(t){return t}}}const ci="__esri_stream_id__",gt="__esri_timestamp__",ft=1e3;class li{constructor(e,t,s,r,i=128){this._trackIdToObservations=new Map,this._idCounter=0,this._lastPurge=performance.now(),this._addOrUpdated=new Map,this._removed=[],this._maxAge=0,this._timeInfo=s,this._purgeOptions=r,this.store=e,this.objectIdField=t,this.purgeInterval=i,this._useGeneratedIds=this.objectIdField===ci}removeById(e){this._removed.push(e)}removeByTrackId(e){const t=this._trackIdToObservations.get(e);if(t)for(const s of t.entries)this._removed.push(s)}add(e){var n;if(this._useGeneratedIds){const a=this._nextId();e.attributes[this.objectIdField]=a,e.objectId=a}else e.objectId=e.attributes[this.objectIdField];const t=e.objectId;if(this._addOrUpdated.set(t,e),this._maxAge=Math.max(this._maxAge,e.attributes[this._timeInfo.startTimeField]),!this._timeInfo.trackIdField)return this._trackIdLessObservations==null&&(this._trackIdLessObservations=new et(1e5)),void this._trackIdLessObservations.enqueue(t);const s=e.attributes[this._timeInfo.trackIdField];if(!this._trackIdToObservations.has(s)){const a=((n=this._purgeOptions)==null?void 0:n.maxObservations)!=null?this._purgeOptions.maxObservations:ft,o=Cs(a,0,ft);this._trackIdToObservations.set(s,new et(o))}const r=this._trackIdToObservations.get(s),i=r==null?void 0:r.enqueue(t);i!=null&&(this._addOrUpdated.has(i)?this._addOrUpdated.delete(i):this._removed.push(i))}checkForUpdates(){const e=this._getToAdd(),t=this._getToRemove(),s=performance.now();s-this._lastPurge>=this.purgeInterval&&(this._purge(s),this._lastPurge=s);const r=[];if(t!=null)for(const n of t){const a=this.store.removeById(n);a!=null&&r.push(a)}const i=[];if(e!=null){const n=new Set(t??[]);for(const a of e)n.has(a.objectId)||(a.attributes[gt]=s,this.store.add(a),i.push(a))}return!(!i.length&&!(r!=null&&r.length))&&(this.store.update(i,r),!0)}_getToAdd(){if(!this._addOrUpdated.size)return null;const e=new Array(this._addOrUpdated.size);let t=0;return this._addOrUpdated.forEach(s=>e[t++]=s),this._addOrUpdated.clear(),e}_getToRemove(){const e=this._removed;return this._removed.length?(this._removed=[],e):null}_nextId(){const e=this._idCounter;return this._idCounter=(this._idCounter+1)%4294967294+1,e}_purge(e){const t=this._purgeOptions;t!=null&&(this._purgeSomeByDisplayCount(t),this._purgeByAge(t),this._purgeByAgeReceived(e,t),this._purgeTracks())}_purgeSomeByDisplayCount(e){if(!e.displayCount)return;let t=this.store.size;if(t>e.displayCount){if(this._timeInfo.trackIdField){for(const s of this._trackIdToObservations.values())if(t>e.displayCount&&s.size){const r=s.dequeue();this._removed.push(r),t--}}if(this._trackIdLessObservations!=null){let s=t-e.displayCount;for(;s-- >0;){const r=this._trackIdLessObservations.dequeue();r!=null&&this._removed.push(r)}}}}_purgeByAge(e){var i;const t=(i=this._timeInfo)==null?void 0:i.startTimeField;if(!e.age||!t)return;const s=60*e.age*1e3,r=this._maxAge-s;this.store.forEach(n=>{n.attributes[t]<r&&this._removed.push(n.objectId)})}_purgeByAgeReceived(e,t){if(!t.ageReceived)return;const s=e-60*t.ageReceived*1e3;this.store.forEach(r=>{r.attributes[gt]<s&&this._removed.push(r.objectId)})}_purgeTracks(){this._trackIdToObservations.forEach((e,t)=>{e.size===0&&this._trackIdToObservations.delete(t)})}}let G=class extends vt{constructor(h){super(h)}get connectionStatus(){var h;return(h=this.connection)==null?void 0:h.connectionStatus}get errorString(){var h;return(h=this.connection)==null?void 0:h.errorString}};L([re()],G.prototype,"connection",void 0),L([re()],G.prototype,"connectionStatus",null),L([re()],G.prototype,"errorString",null),G=L([xt("esri.views.2d.layers.features.sources.StreamConnectionState")],G);let _i=class{constructor(e,t){this._metadata=e,this._onUpdate=t,this._objectIdToFeature=new Map}get size(){return this._objectIdToFeature.size}get reader(){return q.fromFeatures([...this._objectIdToFeature.values()],this._metadata)}add(e){this._objectIdToFeature.set(e.objectId,e)}forEach(e){this._objectIdToFeature.forEach(e)}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),t):null}clear(){this._objectIdToFeature=new Map}update(e,t){this._onUpdate((e==null?void 0:e.length)??0)}},pi=class extends J{constructor(e){super(),this._reader=e,this.chunkId="stream-chunk",this.normalizedChunkId="stream-chunk"}get reader(){return this._reader}get first(){return!0}get end(){return!0}get queryInfo(){return{type:"stream",chunkId:this.chunkId,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}};class gi extends Be{constructor(e,t,s,r,i){super(s),this._service=e,this._dataFilter=t,this._streamOptions=r,this._metadata=i,this._connectionState=new G,this._forceRefresh=!1,this.events=new Ae;const{objectIdField:n,timeInfo:a}=this._metadata,{purgeOptions:o}=t;this._stagingStore=new _i(this._metadata,d=>this.events.emit("features-updated",d)),this._manager=new li(this._stagingStore,n,a,o),this.connect()}destroy(){super.destroy(),this.disconnect()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){var e;return(e=this._connectionState)==null?void 0:e.errorString}async refresh(){const e=this._chunk!=null;this._manager.checkForUpdates()||!e||this._forceRefresh?(this._chunk&&this._store.remove(this._chunk),this._forceRefresh=!1,this._chunk=new pi(this._stagingStore.reader),this._store.insert(this._chunk),this.events.emit("tick")):this.events.emit("tick")}async updateFields(e){throw new Error("Updating available fields not supported for StreamLayer")}async load(e){}unload(e){}disconnect(){var e;this._connection=It(this._connection),this._connectionState.connection=null,(e=this._handlesGroup)==null||e.remove()}connect(){if(this._connection!=null)return;const{geometryType:e,spatialReference:t}=this._metadata,{maxReconnectionAttempts:s,maxReconnectionInterval:r,geometryDefinition:i,definitionExpression:n,customParameters:a}=this._dataFilter;this._connection=tr(this._service.source,t,this._streamOptions.outSR,e,n,i,s,r,a),this._handlesGroup=ue([this._connection.on("data-received",o=>this._onFeature(o)),this._connection.on("message-received",o=>this._onWebSocketMessage(o))]),this._connectionState.connection=this._connection}clear(){this._manager.checkForUpdates(),this._stagingStore.clear(),this._forceRefresh=!0}updateCustomParameters(e){var t;(t=this._connection)==null||t.updateCustomParameters(e)}sendMessageToSocket(e){var t;(t=this._connection)==null||t.sendMessageToSocket(e)}sendMessageToClient(e){var t;(t=this._connection)==null||t.sendMessageToClient(e)}_onWebSocketMessage(e){if("type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this._manager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this._manager.removeByTrackId(t);break;case"clear":this.clear()}this.events.emit("message-received",e)}_onFeature(e){try{this._manager.add(e),this.events.emit("data-received",e)}catch{}}}class fi{constructor(e,t){this._onChange=e,this._metadata=t,this._chunks=new Map,this._chunksToRemove=[],this._overrides=new Dr,this.events=new Ae,this.featureAdapter=new Ws}destroy(){this.clear()}clear(){for(const e of this._chunks.values())this._chunksToRemove.push(e);this._chunks.clear()}*chunks(){this._overrides&&(yield this._overrides.asChunk(this._metadata)),yield*this._chunks.values()}insert(e){m("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.insert`),this._overrides.onChunkInsert(e),this._chunks.set(e.chunkId,e),this.events.emit("changed"),this._onChange()}remove(e){m("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.remove`),this._chunks.delete(e.chunkId),this._chunksToRemove.push(e)}cleanupRemovedChunks(){const e=this._chunksToRemove;return this._chunksToRemove=[],e}applyOverride(e){this._overrides.apply(e,this),this.events.emit("changed");for(const t of this._chunks.values())t.invalidate()}takeOverrideUpdate(){return this._overrides.takeOverrideUpdate()}forEach(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const i=r.getObjectId();t.has(i)||(e(r.copy()),t.add(i))}}}forEachUnsafe(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const i=r.getObjectId();t.has(i)||(e(r),t.add(i))}}}forEachInBounds(e,t){const s=new Set;for(const r of this.chunks()){const i=r.queryFeaturesInBounds(e);for(;i.next();){const n=i.getObjectId();s.has(n)||(t(i.copy()),s.add(n))}}}forEachBounds(e,t){const s=Re();for(const r of e)r.getBounds(s)&&t(s)}}class yi{constructor(e,t,s,r,i){this.service=e,this._aggregateAdapter=t,this._subscriptions=s,this._onChange=r,this._connection=i,this._updateTracking=new sr({debugName:"FeatureSource"}),this._didInvalidateData=!1,this._metadata=je.createFeature(e.metadata),this._store=new fi(this._onChange,this._metadata)}destroy(){var e,t;(e=this._strategy)==null||e.destroy(),this._store.destroy(),(t=this._streamMessenger)==null||t.destroy(),this.service.type==="memory"&&this.service.source.map(s=>s.close())}get metadata(){if(!this._metadata)throw new Error("InternalError: Metadata not defined. Was update called?");return this._metadata}get store(){return this._store}get streamMessenger(){return this._streamMessenger==null&&this._initStreamMessenger(),this._streamMessenger}get statistics(){return Gr.from(this._store)}get updateTracking(){return this._updateTracking}get queryEngine(){if(!this._queryEngine){if(!this._schema)return null;const{dataFilter:e}=this._schema.mutable,t=this._schema.mutable.availableFields,s=this._metadata;this._queryEngine=new $t({featureStore:this._store,fieldsIndex:s.fieldsIndex,geometryType:s.geometryType,objectIdField:s.objectIdField,hasM:!1,hasZ:!1,spatialReference:this.service.outSpatialReference,aggregateAdapter:this._aggregateAdapter,timeInfo:s.timeInfo,definitionExpression:e.definitionExpression,availableFields:t})}return this._queryEngine}get isStream(){return this._schema.type==="stream"}chunks(){return Array.from(this._store.chunks())}cleanupRemovedChunks(){return this._store.cleanupRemovedChunks()}onSubscribe(e){var s;this._connection.onEvent({type:"subscribe",tile:e.tile.id});const t=(s=this._strategy)==null?void 0:s.load(e);t&&(t.then(()=>this._connection.onEvent({type:"loaded",tile:e.tile.id})).catch(r=>this._connection.onEvent({type:"error",tile:e.tile.id,error:r})),this._updateTracking.addPromise(t))}onResume(e){var t;this._updateTracking.addPromise(kt((t=this._strategy)==null?void 0:t.load(e)))}onUnsubscribe(e){var t;this._connection.onEvent({type:"unsubscribe",tile:e.tile.id}),(t=this._strategy)==null||t.unload(e)}applyOverride(e){this._didInvalidateData=!0,this._store.applyOverride(e)}takeOverrideUpdate(){return this._store.takeOverrideUpdate()}async update(e,t){var i,n,a;const s=e.source,r=bt((i=this._schema)==null?void 0:i.mutable,s.mutable);if(!r)return!1;if(m("esri-2d-update-debug")&&console.debug(`Version[${t}] FeatureSource.update`,{changes:r}),this._schema=s,(n=this._queryEngine)==null||n.destroy(),this._queryEngine=null,this.service.type==="feature-service"&&this.service.queryMetadata.lastEditDate!=null&&(this._lastEditDate=this.service.queryMetadata.lastEditDate),this._streamMessenger==null&&this._schema.type==="stream"&&this._initStreamMessenger(),He(r,"sourceRefreshVersion")&&((a=this._strategy)==null?void 0:a.refresh))return await this._strategy.refresh(),!0;if((s.type==="feature"||s.type==="parquet")&&He(r,"availableFields")){if(await this._queryLastEditDateChanged()||this._didInvalidateData)this._didInvalidateData=!1,await this._updateStrategy(t);else{this._connection.onEvent({type:"updateFieldsStart"});try{await this._strategy.updateFields(s.mutable.availableFields),this._connection.onEvent({type:"updateFieldsEnd"})}catch(o){this._connection.onEvent({type:"updateFieldsError",error:o})}}return!1}return!(!Je(r,"dataFilter")&&!Je(r,"sourceRefreshVersion"))&&(await this._updateStrategy(t),!0)}async addParquetFile(e){this._strategy.addParquetFile(e)}unsafeSetQueryHistoricMoment(e){this._schema.type==="feature"&&(this._schema.mutable.dataFilter.historicMoment=e,this._strategy.unsafeSetQueryHistoricMoment(new Date(e)))}_initStreamMessenger(){this._streamMessenger==null&&(this._streamMessenger=new ne(this._connection))}async normalizeOverrides(e){const t={historicMoment:e.historicMoment,commands:{updateWeak:e.commands.updateWeak.map(j.fromJSON),removeWeak:e.commands.removeWeak,update:e.commands.update.map(j.fromJSON),remove:e.commands.remove,release:e.commands.release}},s=e.commands.updateByIdWeak,r=await this._queryOptimizedFeatures(s);return t.commands.updateWeak.push(...r),t}async _queryOptimizedFeatures(e){if(e.length===0)return[];const t=[],s=(await this._strategy.queryByObjectId(e)).getCursor();for(;s.next();)t.push(s.readOptimizedFeatureWorldSpace());return t}getObjectIdsFromGlobalIds(e){const t=new Set(e),s=this.metadata.globalIdField;if(s==null)throw new Error("InternalError: Recieved an edit with globalIds, but not supported by the service");const r=[];return this._store.forEachUnsafe(i=>{const n=i.readAttribute(s);if(t.has(n)){const a=i.getObjectId();a!=null&&r.push(a)}}),r}async _queryLastEditDateChanged(){if(this._lastEditDate==null)return!1;const e=this.service.source,t={...e.query,f:"json"},s=(await Ts(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate;return s!==this._lastEditDate&&(this._lastEditDate=s,!0)}async _createStrategy(){const e="isSourceHosted"in this.service&&this.service.isSourceHosted,t=Array.isArray(this.service.source),s=this.service.source&&"collection"in this.service.source,r=e||t||s;if(this._schema.type==="stream"){const o=new gi(this.service,this._schema.mutable.dataFilter,this._store,{outSR:this.service.outSpatialReference},this.metadata);return this._streamMessenger.strategy=o,o}if(this._schema.type==="parquet"){const o=this.service;return new hi(o,this._metadata,this._schema,this._store)}const i=this.service,n=Nr.fromSchema(i,this._schema,this._metadata),a=await this._supportSnapshotMode(i,n);return a?new ui(i,n,this._store,a.featureCount,this.metadata,this._connection):r?new di(i,n,this._store,this.metadata,this._connection):new ai(i,n,this._store,this.metadata,this._connection)}async _updateStrategy(e){var n;const t=await this._createStrategy();this._connection.onEvent({type:"updateStrategyStart",about:t.about});const s=!!this._strategy;this._store.clear(),(n=this._strategy)==null||n.destroy(),this._strategy=t,m("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategy`,{strategy:t});const r=Array.from(this._subscriptions.values());if(!r.length)return void this._connection.onEvent({type:"updateStrategyEnd"});const i=Promise.all(r.map(a=>this._strategy.load(a).then(()=>this._connection.onEvent({type:"loaded",tile:a.tile.id})).catch(o=>this._connection.onEvent({type:"error",tile:a.tile.id,error:o}))));this._updateTracking.addPromise(i);try{s&&await i}catch(a){Pe(a)}this._connection.onEvent({type:"updateStrategyEnd"}),m("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategyEnd`,{strategy:t})}async _supportSnapshotMode(e,t){const{queryMetadata:s}=e,r=s.snapshotInfo;if(!r||!r.supportsSnapshotMinThreshold||!r.snapshotCountThresholds)return null;const i=e.source,n=t.createQuery();n.inner.orderByFields=[],n.inner.returnGeometry=!1;const a=(await qs(i,n.inner,{query:n.customParameters})).data.count,{min:o,max:d}=r.snapshotCountThresholds;return a<=o||r.supportsSnapshotMaxThreshold&&a<d?{featureCount:a}:null}}class mi{constructor(e,t){this.tile=e,this.version=t,this._abortController=new AbortController}get key(){return this.tile.key}get signal(){return this._abortController.signal}abort(){this._abortController.abort()}}class se{constructor(e){this.inner=e,this.resolver=Ps()}}class Jn{constructor(){this._aggregateAdapter={getFeatureObjectIds:e=>this._processor.getFeatureObjectIdsForAggregate(e)},this._subscriptions=new Map,this._updateRequested=!1,this._updateSubscriptionRequests=[],this._updateHighlightRequests=[]}destroy(){var e,t,s;this._subscriptions.clear(),(e=this._processor)==null||e.destroy(),(t=this._source)==null||t.destroy(),(s=this._handles)==null||s.remove(),this._updateOverridesRequest=null,this._tileInfoView=null}onAttach(e){m("esri-2d-update-debug")&&console.debug("Pipeline.onAttach");const t=this._connection,s=$s.fromJSON(e.tileInfoJSON);this._tileInfoView=new Os(s),this._source=new yi(e.service,this._aggregateAdapter,this._subscriptions,()=>this._requestUpdate(),t),this._processor=new Ur(t,this._source),this._handles=ue([xe(()=>this._source.updateTracking.updating,()=>{this._requestUpdate(),kt(this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0}))})])}onDetach(){m("esri-2d-update-debug")&&console.debug("Pipeline.onDetach"),this.destroy()}set remoteClient(e){this._connection=new rr(e)}get features(){var t;const e=(t=this._source)==null?void 0:t.queryEngine;if(!e)throw new z("no-queryEngine","No query engine defined");return e}get aggregates(){var t;const e=(t=this._processor)==null?void 0:t.aggregateQueryEngine;if(!e)throw new z("no-queryEngine","No aggregate query engine defined");return e}get processor(){return this._processor}get streamMessenger(){return this._source.streamMessenger}getDisplayFeatures(e){return this._processor.getDisplayFeatures(e)}getDisplayIds(e){return this._processor.getDisplayIds(e)}getObjectIdsFromGlobalIds(e){return this._source.getObjectIdsFromGlobalIds(e)}async updateSchema(e,t){return m("esri-2d-update-debug")&&this._updateSchemaRequest&&console.error("InternalError: Schema already updating"),this._updateSchemaRequest=new se({schema:e,version:t}),this._requestUpdate(),this._updateSchemaRequest.resolver.promise}updateSubscriptions(e){const t=new se(e);return this._updateSubscriptionRequests.push(t),this._requestUpdate(),t.resolver.promise}updateHighlight(e){const t=new se(e);return this._updateHighlightRequests.push(t),this._requestUpdate(),t.resolver.promise}async addParquetFile(e){return this._source.addParquetFile(e)}async onOverride(e){if(this._updateOverridesRequest!=null)throw new z("InternalError - Already processing an edit");this._updateOverridesRequest=new se(e);const t=this._updateOverridesRequest.resolver.promise;return this._requestUpdate(),t}queryStatistics(){return this._source.statistics.toJSON()}async queryVisibleFeatures(e,t){return this.features.executeQuery(e,t)}async queryHeatmapStatistics(e){const t=Math.round(As(e.radius));let s=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;const i=typeof e.fieldOffset=="string",n=e.fieldOffset??0,a=Array.from(this._subscriptions.values()),o=this._source.chunks(),d=t**2,u=3/(Math.PI*d),c=2*t,l=Math.ceil(M/c);for(const p of a){const _=p.tile,f=new Float64Array(l*l);for(const g of o){const y=g.getTileReader(_);if(!y)continue;const b=y.getCursor();for(;b.next();){let I=1;if(e.field!=null){const O=b.readAttribute(e.field);I=i?-1*+O:+O+n}const k=b.readXForDisplay()/c,T=b.readYForDisplay()/c,v=Math.floor(k),S=Math.floor(T);if(v<0||S<0||v>=l||S>=l)continue;const F=((.5+v-k)*c)**2+((.5+S-T)*c)**2;if(F>d)continue;const w=I*(u*(1-F/d)**2);f[S+v*l]+=w}}for(let g=0;g<f.length;g++)s=Math.min(s,f[g]),r=Math.max(r,f[g])}return{max:r,min:s}}async getSampleFeatures(e){const t=this._source.chunks();if(t.reduce((o,d)=>o+d.size(),0)<=e.minFeatureCount){if(!this._source.updateTracking.updating){const o=[];return this._source.store.forEachUnsafe(d=>o.push(d.readLegacyFeatureWorldSpace())),o}return null}const s=new Set,r=[],i=t.map(o=>o.reader.getCursor()),n=new St,a=3*e.sampleSize;for(let o=0;o<a&&r.length<e.sampleSize;o++){const d=i[n.getIntRange(0,t.length-1)];if(d.getSize()===0)continue;const u=n.getIntRange(0,d.getSize()-1);d.setIndex(u);const c=d.getObjectId();s.has(c)||(s.add(c),r.push(d.readLegacyFeatureWorldSpace()))}return r.length>=e.sampleSize?r:null}_requestUpdate(){this._updateRequested||(this._updateRequested=!0,Rs(()=>this._scheduleNextUpdate()))}_scheduleNextUpdate(){this._updateRequested&&(this._ongoingUpdate||(this._ongoingUpdate=$e(this._doUpdate()).finally(()=>{this._ongoingUpdate=null,this._scheduleNextUpdate()}),this._updateRequested=!1))}_subscribe(e){const t=e.tileId;if(this._subscriptions.has(t))return;m("esri-2d-update-debug")&&console.debug(`Tile[${t}] Pipeline.subscribe`);const s=new Es(this._tileInfoView,t),r=new mi(s,e.version);this._subscriptions.set(t,r),this._source.onSubscribe(r),this._processor.onSubscribe(r)}_unsubscribe(e){const t=this._subscriptions.get(e);t&&(m("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.unsubscribe`),t.abort(),this._source.onUnsubscribe(t),this._processor.onUnsubscribe(t),this._subscriptions.delete(t.key.id))}async _doUpdate(){if(m("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateStart"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0}),this._updateSubscriptionRequests.length){const r=this._updateSubscriptionRequests;this._updateSubscriptionRequests=[];for(const i of r)this._doUpdateSubscriptions(i.inner),i.resolver.resolve()}const e=this._updateSchemaRequest;if(this._updateSchemaRequest=null,e!=null){const{schema:r,version:i}=e.inner;await this._doUpdateSchema(r,i)}const t=this._updateOverridesRequest;if(this._updateOverridesRequest=null,t!=null){m("esri-2d-update-debug")&&console.debug("Pipeline.applyOverride",t.inner);const r=await this._source.normalizeOverrides(t.inner);r.historicMoment!=null&&this._source.unsafeSetQueryHistoricMoment(r.historicMoment),this._source.applyOverride(r),m("esri-2d-update-debug")&&console.debug("Pipeline.endOverride",t.inner)}if(this._updateHighlightRequests.length){const r=this._updateHighlightRequests;this._updateHighlightRequests=[];for(const i of r)this._processor.updateHighlight(i.inner),i.resolver.resolve()}const s=this._source.cleanupRemovedChunks();this._processor.removeChunks(s);try{const r=this._source.takeOverrideUpdate();r!=null&&this._subscriptions.size&&(m("esri-2d-update-debug")&&console.debug("Pipeline.applyOverrideChangesStart"),await this._processor.applyOverrideUpdate(r),m("esri-2d-update-debug")&&console.debug("Pipeline.applyOverrideChangesEnd")),this._subscriptions.size&&(m("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksStart"),await this._processor.updateChunks(),m("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksEnd"))}catch(r){Pe(r)}t!=null&&t.resolver.resolve(),e!=null&&e.resolver.resolve(),this._updateRequested?(m("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=true]"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:!0})):(m("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=false, After flush]"),await this._connection.layerView.setUpdating({source:this._source.updateTracking.updating,pipeline:this._updateRequested}))}async _doUpdateSchema(e,t){var n;m("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateStart`,{schema:e});const s={tileInfo:(n=this._tileInfoView)==null?void 0:n.tileInfo},r=await this._source.update(e,t),i=Array.from(this._subscriptions.values());await this._processor.update(e,t,s,r,i),m("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateEnd`)}_doUpdateSubscriptions(e){m("esri-2d-update-debug")&&console.debug("Pipeline.updateSubscriptions",e);for(const t of e.subscribe)this._subscribe(t);for(const t of e.unsubscribe)this._unsubscribe(t)}}export{Jn as default};

import{F as p,G as o,V as a,R as g,t as s,v as m,w as l}from"./index-50a15231.js";import{f as c,d as n}from"./LayerView-c90d1aa5.js";import{i as d}from"./GraphicContainer-ebc39c8e.js";import{o as u}from"./GraphicsView2D-3e5ac913.js";import"./Container-6adabd1d.js";import"./definitions-a8ed7337.js";import"./enums-b14466b3.js";import"./Texture-ec09d824.js";import"./color-42f02849.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-9cf19ecb.js";import"./FeatureContainer-f1bc951a.js";import"./AttributeStoreView-10e209cf.js";import"./TiledDisplayObject-65a3e647.js";import"./WGLContainer-195f0ef6.js";import"./VertexArrayObject-58a735d8.js";import"./ProgramTemplate-7871ba60.js";import"./GeometryUtils-f6c16945.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-d576701f.js";import"./featureConversionUtils-7c61a3bc.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-37867ffe.js";import"./ExpandedCIM-fcf5cec3.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-47353c86.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-5741c072.js";import"./floatRGBA-11d2e087.js";import"./util-7647e774.js";import"./TileContainer-467b45a0.js";import"./vec3f32-ad1dc57f.js";import"./normalizeUtils-dafe5f32.js";import"./normalizeUtilsCommon-defe4a62.js";import"./utils-b41f1d99.js";import"./normalizeUtilsSync-08eef041.js";import"./projectionSupport-92f1224f.js";import"./json-48e3ea08.js";import"./Matcher-e9592f49.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-2a3c4951.js";import"./devEnvironmentUtils-5002a058.js";import"./webStyleSymbolUtils-64021f66.js";import"./ComputedAttributeStorage-9e53a96e.js";import"./arcadeTimeUtils-4ea6049a.js";import"./executionError-c92d3b85.js";const w={remove(){},pause(){},resume(){}};let e=class extends c(n){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new u({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new d(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=p(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof o?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):a.isCollection(i)&&i.length>0&&(t=i.map(h=>h&&h.uid).toArray());const r=t==null?void 0:t.filter(g);return r!=null&&r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):w}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};s([m()],e.prototype,"graphicsView",void 0),e=s([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const ni=e;export{ni as default};

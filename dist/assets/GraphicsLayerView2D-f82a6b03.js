import{C as a,D as o,V as g,k as m,e as s,q as p,t as c,v as l}from"./index-7df220b7.js";import{m as n,u as d}from"./LayerView-b8aceff2.js";import{i as u}from"./GraphicContainer-d2517115.js";import{r as w}from"./GraphicsView2D-f37b1db8.js";import"./scaleUtils-32de8df1.js";import"./Container-25b37322.js";import"./definitions-0ff99485.js";import"./enums-bdecffa2.js";import"./Texture-a748c37c.js";import"./color-f3f79b89.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-2b2eea32.js";import"./FeatureContainer-a3f63e4f.js";import"./AttributeStoreView-86485239.js";import"./TiledDisplayObject-611e0500.js";import"./WGLContainer-042f00e6.js";import"./FramebufferObject-6975534b.js";import"./ProgramTemplate-1931a919.js";import"./GeometryUtils-3cc9f56c.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-4171d0de.js";import"./featureConversionUtils-7b0c7dc1.js";import"./OptimizedGeometry-d94e541f.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-99572efb.js";import"./ExpandedCIM-85e23481.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-fa2983ac.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-6260a1a7.js";import"./floatRGBA-1f39df92.js";import"./util-0b4c9e8a.js";import"./TileContainer-0ecfcdaa.js";import"./vec3f32-2da9db36.js";import"./normalizeUtilsSync-06a11b6b.js";import"./projectionSupport-6fc81d1e.js";import"./json-48e3ea08.js";import"./Matcher-121a4c56.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-1c8573e5.js";import"./ComputedAttributeStorage-98ebb4cc.js";import"./TimeOnly-094f602b.js";let e=class extends n(d){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new w({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new u(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler))}detach(){this.container.removeAllChildren(),this.graphicsView=a(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){return this.graphicsView?this.graphicsView.hitTest(i).filter(t=>!!t.popupTemplate):[]}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let t;typeof i=="number"?t=[i]:i instanceof o?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(r=>r&&r.uid):g.isCollection(i)&&i.length>0&&(t=i.map(r=>r&&r.uid).toArray());const h=t==null?void 0:t.filter(m);return h!=null&&h.length?(this._addHighlight(h),s(()=>this._removeHighlight(h))):s()}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const h=this._highlightIds.get(t);this._highlightIds.set(t,h+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const h=this._highlightIds.get(t)-1;h===0?this._highlightIds.delete(t):this._highlightIds.set(t,h)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};p([c()],e.prototype,"graphicsView",void 0),e=p([l("esri.views.2d.layers.GraphicsLayerView2D")],e);const oi=e;export{oi as default};

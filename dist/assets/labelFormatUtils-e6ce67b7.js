import{o as m,ed as w,ee as h,ef as v,s as f,aS as y,aX as b,aW as x,cE as E,eg as F,eh as $}from"./index-7df220b7.js";const d=m.getLogger("esri.layers.support.labelFormatUtils"),p={type:"simple",evaluate:()=>null},V={getAttribute:(a,s)=>a.field(s)};async function S(a,s,r){if(!a||!a.symbol||!s)return p;const u=a.where,l=w(a);let o;if(l.type==="arcade"){const e=await h(l.expression,r,s);if(e==null)return p;o={type:"arcade",evaluate(i,t){try{const n="attributes"in i?e.repurposeFeature(i):i;n.contextTimeZone=t??null;const c=e.evaluate({$view:{timeZone:t},$feature:n},e.services);if(c!=null)return c.toString()}catch(n){d.error(new f("arcade-expression-error","Encountered an error when evaluating label expression for feature",{error:n,feature:i,expression:l}))}return null},needsHydrationToEvaluate:()=>$(l.expression)==null}}else o={type:"simple",evaluate:e=>l.expression.replaceAll(/{[^}]*}/g,i=>{const t=i.slice(1,-1),n=s.get(t);if(!n)return i;let c=null;return"attributes"in e?e&&e.attributes&&(c=e.attributes[n.name]):c=e.field(n.name),c==null?"":A(c,n)})};if(u){let e;try{e=await v(u,s)}catch(t){return d.error(new f("bad-where-clause","Encountered an error when evaluating where clause, ignoring",{where:u,error:t})),p}const i=o.evaluate;o.evaluate=(t,n)=>{const c="attributes"in t?void 0:V;try{if(e.testFeature(t,c))return i(t,n)}catch(g){d.error(new f("bad-where-clause","Encountered an error when evaluating where clause for feature",{where:u,feature:t,error:g}))}return null}}return o}function A(a,s){if(a==null)return"";const r=s.domain;if(r){if(r.type==="codedValue"||r.type==="coded-value"){const l=a;for(const o of r.codedValues)if(o.code===l)return o.name}else if(r.type==="range"){const l=+a,o="range"in r?r.range[0]:r.minValue,e="range"in r?r.range[1]:r.maxValue;if(o<=l&&l<=e)return r.name}}let u=a;return y(s)?u=b(u,x("short-date")):E(s)&&(u=F(+u)),u||""}export{S as createLabelFunction,A as formatField};

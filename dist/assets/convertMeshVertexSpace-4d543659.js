import{dj as p,s,au as i}from"./index-dca2343a.js";import{l as n}from"./MeshVertexAttributes-e2543c1b.js";import{M as a}from"./vertexSpaceConversion-e3d3646d.js";import"./mat3f64-e19cdcb8.js";import"./mat4f64-9a8384aa.js";import"./spatialReferenceEllipsoidUtils-44bc4ef2.js";import"./computeTranslationToOriginAndRotation-272d7033.js";import"./meshVertexSpaceUtils-722c8195.js";import"./MeshLocalVertexSpace-a396d8c9.js";import"./vec3-2be8fece.js";import"./projection-7b461b2a.js";import"./DoubleArray-e0fc0fd0.js";import"./BufferView-37ba72f0.js";import"./vec4-eb50fbe0.js";async function y(t,r,m){await Promise.resolve(),p(m);const o=a(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new n({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{y as convertMeshVertexSpace};

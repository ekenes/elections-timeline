import{by as l,bz as h,bA as g,aY as w,bB as f,bC as d,bD as n,A as u,F as b}from"./index-bb199e66.js";import{f as V,y as S}from"./LayerView-03fdc5c6.js";import{t as _}from"./GraphicContainer-222dea25.js";import{V as T}from"./GraphicsView2D-ef85bb93.js";import"./Container-d40c6af7.js";import"./highlightReasons-dc931d16.js";import"./definitions-f33e80b3.js";import"./enums-2e633670.js";import"./Texture-dd9dca6f.js";import"./AGraphicContainer-0f478619.js";import"./TechniqueInstance-006a6902.js";import"./UpdateTracking2D-f2323638.js";import"./BidiEngine-26aff129.js";import"./GeometryUtils-b6ea0e94.js";import"./enums-fb32c1bb.js";import"./Rect-ea14f53a.js";import"./LabelMetric-64456ecb.js";import"./Program-c1654195.js";import"./VertexElementDescriptor-2925c6af.js";import"./BindType-d21d71dd.js";import"./Util-10f67e4b.js";import"./TileContainer-e2364c65.js";import"./WGLContainer-4b9e078b.js";import"./ProgramTemplate-dc0d663d.js";import"./vec3f32-ad1dc57f.js";import"./StyleDefinition-df636448.js";import"./config-1337d16e.js";import"./earcut-936e97cf.js";import"./featureConversionUtils-6ab9114f.js";import"./FeatureCommandQueue-51181563.js";import"./constants-991354c8.js";import"./AttributeStore-d3dabd4b.js";import"./TimeOnly-12c17a71.js";import"./timeSupport-1677570f.js";import"./json-48e3ea08.js";import"./normalizeUtilsSync-68ffc03c.js";let y=class extends V(S){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(e,r){if(!this.graphicsViews.length)return null;const o=this.layer;return this.graphicsViews.reverse().flatMap(i=>{const t=this._popupTemplates.get(i),p=i.hitTest(e);for(const s of p)s.layer=o,s.sourceLayer=o,s.popupTemplate=t;return p}).map(i=>({type:"graphic",graphic:i,layer:o,mapPoint:e}))}update(e){if(this.graphicsViews)for(const r of this.graphicsViews)r.processUpdate(e)}attach(){this.addAttachHandles([l(()=>{var e;return(e=this.layer)==null?void 0:e.featureCollections},e=>{this._clear();for(const{popupInfo:r,featureSet:o,layerDefinition:i}of e){const t=g.fromJSON(o),p=new w(t.features),s=i.drawingInfo,c=r?f.fromJSON(r):null,a=d(s.renderer),m=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:a,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[t.geometryType]=m,this._popupTemplates.set(m,c),t.geometryType!=="polygon"||this.layer.polygonSymbol?t.geometryType!=="polyline"||this.layer.lineSymbol?t.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=a.symbol):this.layer.lineSymbol=a.symbol:this.layer.polygonSymbol=a.symbol,this.graphicsViews.push(m),this.container.addChild(m.container)}},h),l(()=>{var e;return(e=this.layer)==null?void 0:e.polygonSymbol},e=>{this._graphicsViewMap.polygon.renderer=new n({symbol:e})},h),l(()=>{var e;return(e=this.layer)==null?void 0:e.lineSymbol},e=>{this._graphicsViewMap.polyline.renderer=new n({symbol:e})},h),l(()=>{var e;return(e=this.layer)==null?void 0:e.pointSymbol},e=>{this._graphicsViewMap.point.renderer=new n({symbol:e})},h)])}detach(){this._clear()}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}_clear(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};y=u([b("esri.views.2d.layers.GeoRSSLayerView2D")],y);const pe=y;export{pe as default};

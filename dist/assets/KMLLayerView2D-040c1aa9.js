import{r as c,q as g,B as U,w as z,S as G,cF as T,Y as E,cN as j,cR as A,cT as F,cP as O,il as $,g as W,U as H,ck as P,ah as K,cv as Y,im as J,cC as I,cE as Q,C as L,io as X,ip as q,D as Z,fo as tt}from"./index-02eff6e6.js";import{b as M,g as et,d as it}from"./kmlUtils-d8c98c76.js";import{g as at,f as st,S as rt}from"./BitmapTechnique-d8d8de81.js";import{t as ot}from"./BitmapContainer-64852747.js";import{j as nt,y as lt}from"./LayerView-d36db7e7.js";import{t as R}from"./GraphicContainer-06aaa813.js";import{E as k}from"./GraphicsView2D-8809fff6.js";import{z as ht,a as pt}from"./rasterProjectionHelper-e7904c0e.js";import{n as mt}from"./VertexStream-b3d21013.js";import{y as ct,o as dt}from"./RenderingContext-1b56ce58.js";import{x as ut}from"./Program-99848a7b.js";import{m as gt}from"./rasterUtils-7212b18f.js";import"./Container-d78f5667.js";import"./Technique-ab058c0a.js";import"./GraphShaderModule-f9d77490.js";import"./BindType-d21d71dd.js";import"./Util-dd4663f8.js";import"./LabelMetric-d84c9df1.js";import"./VertexElementDescriptor-2925c6af.js";import"./WGLContainer-11b1375d.js";import"./ProgramTemplate-a13faaa7.js";import"./BufferObject-3b583792.js";import"./VertexArrayObject-98edc4cc.js";import"./vec3f32-ad1dc57f.js";import"./StyleDefinition-c67e7208.js";import"./config-1337d16e.js";import"./earcut-5a6c70eb.js";import"./featureConversionUtils-aa6583e8.js";import"./AGraphicContainer-6366aa45.js";import"./TechniqueInstance-ced5da48.js";import"./UpdateTracking2D-9382ce27.js";import"./BidiEngine-664145a5.js";import"./GeometryUtils-2ffbfd16.js";import"./rasterizingUtils-286ec3de.js";import"./floatRGBA-7569b6cb.js";import"./Rect-ea14f53a.js";import"./TileContainer-3b668984.js";import"./FeatureCommandQueue-c39cbc74.js";import"./OverrideHelper-6c639819.js";import"./quantizationUtils-75dcba1a.js";import"./AttributeStore-2c7fbf9b.js";import"./queryUtils-60c4a6a9.js";import"./json-48e3ea08.js";import"./timeSupport-4d47519e.js";import"./normalizeUtilsSync-734347b1.js";import"./dehydratedFeatures-f5766108.js";import"./utils-fc5bca97.js";import"./programUtils-a593d02b.js";import"./NestedMap-b667f687.js";import"./renderState-95c3e7c2.js";import"./basicInterfaces-cbf2757f.js";import"./interfaces-d79e913c.js";import"./testSVGPremultipliedAlpha-03ca3c37.js";import"./doublePrecisionUtils-e3c3d0d8.js";let _=class extends G{constructor(){super(...arguments),this.id=0,this.rotation=0,this.href="",this.extent=new U}};c([g({nonNullable:!0,json:{write:!0}})],_.prototype,"id",void 0),c([g({nonNullable:!0,json:{write:!0}})],_.prototype,"rotation",void 0),c([g({nonNullable:!0,json:{write:!0}})],_.prototype,"href",void 0),c([g({type:U,nonNullable:!0,json:{write:!0}})],_.prototype,"extent",void 0),_=c([z("esri.layers.support.KMLMapImage")],_);class p{constructor(t){if(this._ownsRctx=!1,t)this._ownsRctx=!1,this._rctx=t;else{if(p._instance)return p._instanceRefCount++,p._instance;p._instanceRefCount=1,p._instance=this,this._ownsRctx=!0;const a=document.createElement("canvas").getContext("webgl2");a.getExtension("OES_texture_float"),this._rctx=new ct(a,{})}const s={applyProjection:!0,bilinear:!1,bicubic:!1},r=dt("raster/reproject","raster/reproject",new Map([["a_position",0]]),s);this._program=this._rctx.programCache.acquire(r.shaders.vertexShader,r.shaders.fragmentShader,r.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new mt(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(t,s,r=!1){const a=T(t.extent,s),i=new E({x:(t.extent.xmax-t.extent.xmin)/t.texture.descriptor.width,y:(t.extent.ymax-t.extent.ymin)/t.texture.descriptor.height,spatialReference:t.extent.spatialReference}),{x:n,y:h}=ht(i,s,t.extent);let l=(n+h)/2;const u=Math.round((a.xmax-a.xmin)/l),o=Math.round((a.ymax-a.ymin)/l);l=(a.width/u+a.height/o)/2;const D=new E({x:l,y:l,spatialReference:a.spatialReference}),x=pt({projectedExtent:a,srcBufferExtent:t.extent,pixelSize:D,hasWrapAround:!0,spacing:[16,16]}),f=gt(this._rctx,x),b=new j(u,o);b.wrapMode=A.CLAMP_TO_EDGE;const m=new ut(this._rctx,b);this._rctx.bindFramebuffer(m),this._rctx.setViewport(0,0,u,o),this._rctx.useProgram(this._program),this._rctx.bindTexture(t.texture,0),this._rctx.bindTexture(f,1),this._quad.bind();const{width:V=0,height:v=0}=t.texture.descriptor;if(this._program.setUniform2f("u_srcImageSize",V,v),this._program.setUniform2fv("u_transformSpacing",x.spacing),this._program.setUniform2fv("u_transformGridSize",x.size),this._program.setUniform2f("u_targetImageSize",u,o),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),f.dispose(),r){const{width:d,height:C}=m,y=new ImageData(d??0,C??0);m.readPixels(0,0,d??0,C??0,F.RGBA,O.UNSIGNED_BYTE,y.data);const B=m.detachColorTexture($.COLOR_ATTACHMENT0);return m.dispose(),{texture:B,extent:a,imageData:y}}const S=m.detachColorTexture($.COLOR_ATTACHMENT0);return m.dispose(),{texture:S,extent:a}}reprojectBitmapData(t,s){const r=at(t.bitmapData)?st(t.bitmapData):t.bitmapData,a=new j;a.wrapMode=A.CLAMP_TO_EDGE,a.width=t.bitmapData.width,a.height=t.bitmapData.height;const i=new W(this._rctx,a,r),n=this.reprojectTexture({texture:i,extent:t.extent},s,!0);n.texture.dispose();const h=document.createElement("canvas"),l=n.imageData;return h.width=l.width,h.height=l.height,h.getContext("2d").putImageData(l,0,0),{bitmapData:h,extent:n.extent}}async loadAndReprojectBitmapData(t,s,r){const a=(await H(t,{responseType:"image"})).data,i=document.createElement("canvas");i.width=a.width,i.height=a.height;const n=i.getContext("2d");n.drawImage(a,0,0);const h=n.getImageData(0,0,i.width,i.height);if(s.spatialReference.equals(r))return{bitmapData:h,extent:s};const l=this.reprojectBitmapData({bitmapData:h,extent:s},r);return{bitmapData:l.bitmapData,extent:l.extent}}destroy(){this._ownsRctx?(p._instanceRefCount--,p._instanceRefCount===0&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),p._instance=null)):(this._quad.dispose(),this._program.dispose())}}p._instanceRefCount=0;class N{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let w=class extends nt(lt){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new ot,this._kmlVisualData=new N,this._fetchController=null,this.allVisiblePoints=new P,this.allVisiblePolylines=new P,this.allVisiblePolygons=new P,this.allVisibleMapImages=new K}async hitTest(e,t){var r,a,i;const s=this.layer;return[(r=this._pointsView)==null?void 0:r.hitTest(e),(a=this._polylinesView)==null?void 0:a.hitTest(e),(i=this._polygonsView)==null?void 0:i.hitTest(e)].flat().filter(Boolean).map(n=>(n.layer=s,n.sourceLayer=s,{type:"graphic",graphic:n,layer:s,mapPoint:e}))}update(e){this._polygonsView&&this._polygonsView.processUpdate(e),this._polylinesView&&this._polylinesView.processUpdate(e),this._pointsView&&this._pointsView.processUpdate(e)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new k({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new R(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new k({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new R(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new k({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new R(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.addAttachHandles([this.allVisibleMapImages.on("change",e=>{e.added.forEach(t=>this._addMapImage(t)),e.removed.forEach(t=>this._removeMapImage(t))}),Y(()=>this.layer.visibleSublayers,e=>{for(const t of this._kmlVisualData.allSublayers.values())t.visibility=0;for(const t of e){const s=this._kmlVisualData.allSublayers.get(t.id);s&&(s.visibility=1)}this._refreshCollections()})]),this._updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new p}detach(){this._fetchController=J(this._fetchController),this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView=I(this._polygonsView),this._polylinesView=I(this._polylinesView),this._pointsView=I(this._pointsView),this._imageReprojector=I(this._imageReprojector)}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(e){var t,s;((t=this.view.spatialReference)!=null&&t.isWGS84||(s=this.view.spatialReference)!=null&&s.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(e.href,e.extent,this.view.spatialReference).then(r=>{const a=new rt(r.bitmapData);a.x=r.extent.xmin,a.y=r.extent.ymax,a.resolution=r.extent.width/r.bitmapData.width,a.rotation=e.rotation,this._mapImageContainer.addChild(a),this._bitmapIndex.set(e,a)})}async _getViewDependentUrl(e,t){const{viewFormat:s,viewBoundScale:r,httpQuery:a}=e;if(s!=null){if(t==null)throw new Error("Loading this network link requires a view state.");let i;if(await Q(),r!=null&&r!==1){const d=new U(t.extent);d.expand(r),i=d}else i=t.extent;i=T(i,L.WGS84);const n=T(i,L.WebMercator),h=i.xmin,l=i.xmax,u=i.ymin,o=i.ymax,D=t.size[0]*t.pixelRatio,x=t.size[1]*t.pixelRatio,f=Math.max(n.width,n.height),b={"[bboxWest]":h.toString(),"[bboxEast]":l.toString(),"[bboxSouth]":u.toString(),"[bboxNorth]":o.toString(),"[lookatLon]":i.center.x.toString(),"[lookatLat]":i.center.y.toString(),"[lookatRange]":f.toString(),"[lookatTilt]":"0","[lookatHeading]":t.rotation.toString(),"[lookatTerrainLon]":i.center.x.toString(),"[lookatTerrainLat]":i.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":i.center.x.toString(),"[cameraLat]":i.center.y.toString(),"[cameraAlt]":f.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":D.toString(),"[vertPixels]":x.toString(),"[terrainEnabled]":"0","[clientVersion]":X,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},m=d=>{for(const C in d){let y;for(y in b)d[C]=d[C].replace(y,b[y])}},V=q(s);m(V);let v={};a!=null&&(v=q(a),m(v));const S=Z(e.href);return S.query={...S.query,...V,...v},`${S.path}?${tt(V)}`}return e.href}async _fetchService(e){const t=new N;await this._loadVisualData(this.layer.url,t,e),this._kmlVisualData=t,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter(e=>this._isSublayerVisible(e.sublayerId)).map(({item:e})=>e)),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter(e=>this._isSublayerVisible(e.sublayerId)).map(({item:e})=>e)),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter(e=>this._isSublayerVisible(e.sublayerId)).map(({item:e})=>e)),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(e=>this._isSublayerVisible(e.sublayerId)).map(({item:e})=>e))}_isSublayerVisible(e){const t=this._kmlVisualData.allSublayers.get(e);return!!(t!=null&&t.visibility)&&(t.parentFolderId===-1||this._isSublayerVisible(t.parentFolderId))}_loadVisualData(e,t,s){return this._fetchParsedKML(e,s).then(async r=>{var a;for(const i of r.sublayers){t.allSublayers.set(i.id,i);const n=i.points?await M(i.points):[],h=i.polylines?await M(i.polylines):[],l=i.polygons?await M(i.polygons):[],u=((a=i.mapImages)==null?void 0:a.map(o=>_.fromJSON(o)))??[];if(t.allPoints.push(...n.map(o=>({item:o,sublayerId:i.id}))),t.allPolylines.push(...h.map(o=>({item:o,sublayerId:i.id}))),t.allPolygons.push(...l.map(o=>({item:o,sublayerId:i.id}))),t.allMapImages.push(...u.map(o=>({item:o,sublayerId:i.id}))),i.networkLink){const o=await this._getViewDependentUrl(i.networkLink,this.view.state);await this._loadVisualData(o,t,s)}}})}_fetchParsedKML(e,t){return et(e,this.layer.spatialReference,this.layer.refreshInterval,t).then(s=>it(s.data))}_removeMapImage(e){const t=this._bitmapIndex.get(e);t&&(this._mapImageContainer.removeChild(t),this._bitmapIndex.delete(e))}};c([g()],w.prototype,"_pointsView",void 0),c([g()],w.prototype,"_polylinesView",void 0),c([g()],w.prototype,"_polygonsView",void 0),c([g()],w.prototype,"updating",void 0),w=c([z("esri.views.2d.layers.KMLLayerView2D")],w);const _e=w;export{_e as default};

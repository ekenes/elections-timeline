import{aa as p,s,aQ as i}from"./index-bb199e66.js";import{l as a}from"./MeshVertexAttributes-6ade3967.js";import{M as n}from"./vertexSpaceConversion-90b103c6.js";import"./mat3f64-e19cdcb8.js";import"./mat4f64-9a8384aa.js";import"./spatialReferenceEllipsoidUtils-c1ddba15.js";import"./computeTranslationToOriginAndRotation-f4e4fc06.js";import"./meshVertexSpaceUtils-76ca21e1.js";import"./MeshLocalVertexSpace-b14e87a4.js";import"./vec3-9297102c.js";import"./projection-756e98ec.js";import"./DoubleArray-2a568590.js";import"./BufferView-59699d39.js";import"./vec4-3f7addc8.js";async function S(t,r,m){await Promise.resolve(),p(m);const o=n(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new a({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{S as convertMeshVertexSpace};

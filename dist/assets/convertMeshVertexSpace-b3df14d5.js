import{ab as m,s,a$ as i}from"./index-b8632133.js";import{p as a}from"./MeshVertexAttributes-aed17032.js";import{M as n}from"./vertexSpaceConversion-2cd660e2.js";import"./mat3f64-e19cdcb8.js";import"./mat4f64-9a8384aa.js";import"./spatialReferenceEllipsoidUtils-017f44f7.js";import"./computeTranslationToOriginAndRotation-614be9a1.js";import"./projectPointToVector-8bba8dd3.js";import"./meshVertexSpaceUtils-cd45f9e9.js";import"./MeshLocalVertexSpace-0737ddbe.js";import"./vec3-7d7bc497.js";import"./projection-6554bee2.js";import"./DoubleArray-715bf84c.js";import"./BufferView-a598cb7c.js";import"./vec4-fe1290dd.js";async function S(t,r,p){await Promise.resolve(),m(p);const o=n(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new a({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{S as convertMeshVertexSpace};

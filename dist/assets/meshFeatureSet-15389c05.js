import{cx as y,C as d,ai as S,B as g,es as N,et as l,$ as D}from"./index-02eff6e6.js";import{$ as E}from"./Mesh-be5bd676.js";import{i as M,a as F}from"./External-79124343.js";import{n as T,i as w}from"./meshFeatureAttributes-e63f5671.js";import"./MeshTransform-4f90ca35.js";import"./mat4f64-9a8384aa.js";import"./quat-eaa78af8.js";import"./mat3f64-e19cdcb8.js";import"./quatf64-216ddd5a.js";import"./MeshVertexAttributes-322694de.js";import"./MeshLocalVertexSpace-795f86db.js";import"./meshVertexSpaceUtils-4a324c69.js";import"./earcut-5a6c70eb.js";import"./Indices-5546e6ec.js";import"./plane-53ccce62.js";import"./deduplicate-bad38e80.js";import"./projectPointToVector-4f128583.js";import"./vertexSpaceConversion-19816ce6.js";import"./spatialReferenceEllipsoidUtils-16e47544.js";import"./computeTranslationToOriginAndRotation-e412a98d.js";import"./vec3-9cc00b38.js";import"./BufferView-ca9895dd.js";import"./vec4-4d59ff29.js";const I=()=>D.getLogger("esri.rest.support.meshFeatureSet");function et(t,s,e){const r=e.features;e.features=[],delete e.geometryType;const o=y.fromJSON(e);if(o.geometryType="mesh",!e.assetMaps)return o;const n=O(s,e.assetMaps),i=t.sourceSpatialReference??d.WGS84,m=e.globalIdFieldName,{outFields:a}=t,c=a!=null&&a.length>0?b(a.includes("*")?null:new Set(a)):()=>({});for(const u of r){const p=L(u,m,i,s,n);o.features.push(new S({geometry:p,attributes:c(u)}))}return o}function b(t){return({attributes:s})=>{if(!s)return{};if(!t)return s;for(const e in s)t.has(e)||delete s[e];return s}}function L(t,s,e,r,o){const n=t.attributes[s],i=o.get(n);if(i==null||!t.geometry)return null;const m=T(t.attributes,e,r.transformFieldRoles),a=g.fromJSON(t.geometry);a.spatialReference=e;const c=w(t.attributes,r.transformFieldRoles),u=e.isGeographic?"local":"georeferenced",p=$(i);return p?E.createWithExternalSource(m,p,{extent:a,transform:c,vertexSpace:u,unitConversionDisabled:!0}):E.createIncomplete(m,{extent:a,transform:c,vertexSpace:u})}var f;function O(t,s){const e=new Map;for(const r of s){const o=r.parentGlobalId;if(o==null)continue;const n=r.assetName,i=r.assetType,m=r.assetHash,a=r.assetURL,c=r.conversionStatus,u=r.seqNo,p=N(i,t.supportedFormats);if(!p){I().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${i}, but it does not list it as a supported type`);continue}const h=l(e,o,()=>({files:new Map}));l(h.files,n,()=>({name:n,type:i,mimeType:p,status:P(c),parts:[]})).parts[u]={hash:m,url:a}}return e}function $(t){const s=Array.from(t.files.values()),e=new Array;for(const r of s){if(r.status!==f.COMPLETED)return null;const o=new Array;for(const n of r.parts){if(!n)return null;o.push(new M(n.url,n.hash))}e.push(new F(r.name,r.mimeType,o))}return e}function P(t){switch(t){case"COMPLETED":case"SUBMITTED":return f.COMPLETED;case"INPROGRESS":return f.PENDING;default:return f.FAILED}}(function(t){t[t.FAILED=0]="FAILED",t[t.PENDING=1]="PENDING",t[t.COMPLETED=2]="COMPLETED"})(f||(f={}));export{O as assetMapFromAssetMapsJSON,L as extractMesh,et as meshFeatureSetFromJSON};

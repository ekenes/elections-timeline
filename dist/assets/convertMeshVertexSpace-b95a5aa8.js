import{dj as p,s,au as i}from"./index-5bdaa4d1.js";import{l as n}from"./MeshVertexAttributes-0466a598.js";import{M as a}from"./vertexSpaceConversion-d6e8bffa.js";import"./mat3f64-e19cdcb8.js";import"./mat4f64-9a8384aa.js";import"./spatialReferenceEllipsoidUtils-60cb8a01.js";import"./computeTranslationToOriginAndRotation-4eca75e2.js";import"./meshVertexSpaceUtils-5bae5391.js";import"./MeshLocalVertexSpace-647e17cb.js";import"./vec3-ed78143c.js";import"./projection-1c08f2e4.js";import"./DoubleArray-bf43bbb1.js";import"./BufferView-8a76b2a2.js";import"./vec4-2b6545d2.js";async function y(t,r,m){await Promise.resolve(),p(m);const o=a(t,r);if(!o)throw new s("meshUtils:convertVertexSpace()","Failed to convert to provided vertex space due to projection errors");const e=t.cloneAndModifyVertexAttributes(new n({...o,uv:i(t.vertexAttributes.uv),color:i(t.vertexAttributes.color)}),r);return e.transform=null,e}export{y as convertMeshVertexSpace};

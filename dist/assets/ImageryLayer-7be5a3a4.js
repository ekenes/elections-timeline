import{aL as A,ma as Bt,y as r,z as l,ev as j,A as v,bZ as P,bY as Se,aF as V,bC as se,eC as He,cC as Qt,k8 as oe,nI as be,nJ as st,dm as te,nK as nt,c7 as J,bk as dt,bn as Le,c3 as ie,cD as kt,nL as Wt,ey as Ft,C as $t,bm as Zt,cq as M,cn as E,cp as U,co as H,ai as T,aT as Pe,ex as yt,dM as Ie,gt as Kt,e2 as Xt,de as Yt,aC as ei,x as Pt,s as x,fl as ut,fm as ti,B as ii,J as ri,nM as si,ie as ni,bT as ai,ew as oi,bU as li,dZ as ui,d_ as pi,dY as ci,e9 as mi,e8 as di,d$ as yi,e_ as hi,bi as gi,gp as fi,gE as ke,eA as wi,e1 as Ri,gu as vi,D as bi,bX as Si,bu as xi}from"./index-09dc31eb.js";import{N as F,h as ve,i as ze,j as k,g as Ii,c as Fi,l as Di,d as Ti,n as pt,a as ji,p as Pi,f as Ni,b as _i,B as Oi,L as Ci,U as $i,q as Ai,e as Vi,t as Mi,o as Ji}from"./RasterPresetRendererMixin-1060c0b6.js";import{m as ct,g as Ei,p as qi,d as Gi}from"./multidimensionalUtils-d614c8d8.js";import{j as Li,g as mt,s as zi,l as Ui}from"./dataUtils-e99fec0b.js";import{A as At,d as Vt,e as Hi,q as Bi,s as Qi,n as ki,a as Mt,_ as Wi,j as Nt,P as Zi}from"./RasterSymbolizer-96738dae.js";import{t as _t}from"./imageBitmapUtils-0f258456.js";import{a as Ki,s as Xi}from"./executeForIds-1655f618.js";import"./ClassBreaksDefinition-1b4896d2.js";import"./_commonjsHelpers-2f3e7994.js";const Yi={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},er=new Set(["u1","u2","u4","u8","s8","u16","s16"]),tr={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},ir=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function Jt(s){return ir.has(s.type)}function ht(s,i){var e;if(!s||!i)return A(s||i);const a=A(s);if(a.functionDefinition&&i.rasterFunctionDefinition){const t=i.rasterFunctionDefinition;(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=void 0),Et(a.functionDefinition.arguments,i),a.rasterFunctionDefinition=a.functionDefinition.toJSON()}else((e=i.functionName)==null?void 0:e.toLowerCase())!=="none"&&(qt(a.functionArguments).Raster=i);return a}function Et(s,i){for(const a in s)a.toLowerCase()==="raster"&&(s[a].type==="RasterFunctionVariable"?(s[a]=i.rasterFunctionDefinition,s[a].type="RasterFunctionTemplate"):s[a].type==="RasterFunctionTemplate"&&Et(s[a].arguments,i))}function ne(s){const i=A(Yi[s.functionName+"Function"]),a=s.functionArguments;for(const e in a)e.toLowerCase()==="raster"?(i.arguments[e]=ne(a[e]),i.arguments[e].type="RasterFunctionTemplate"):e.toLowerCase()==="colormap"?(i.arguments[e].value=cr(a[e]),i.arguments.ColorSchemeType.value=0):i.arguments[e].value=a[e];return i}function rr(s,i){switch(i=i||{},s.type){case"raster-stretch":return ar(s,i);case"class-breaks":return or(s,i);case"unique-value":return lr(s,i);case"raster-colormap":return ur(s,i);case"vector-field":return sr(s,i);case"raster-shaded-relief":return nr(s,i);case"flow":throw new Error("Unsupported rendering rule.")}}function qt(s){const i=(s==null?void 0:s.Raster)??(s==null?void 0:s.raster);return i&&i.declaredClass==="esri.layers.support.RasterFunction"?qt(i.functionArguments):s}const Me={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function sr(s,i){const a=new F;a.functionName="VectorFieldRenderer";const{dataType:e,bandNames:t}=i,n=e==="vector-uv";let o,u;if(t&&t.length===2){const f=t.map(w=>w.toLowerCase());o=f.indexOf("magnitude"),u=f.indexOf("direction")}o!==-1&&o!==null||(o=0,u=1);const p=s.rotationType==="arithmetic"?1:2,m=s.flowRepresentation==="flow-from"?0:1,c=s.visualVariables?s.visualVariables.find(f=>f.field==="Magnitude"):new Bt,d={magnitudeBandID:o,directionBandID:u,isUVComponents:n,referenceSystem:p,massFlowAngleRepresentation:m,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:tr[s.style.toLowerCase().replace("-","_")],minimumMagnitude:c.minDataValue,maximumMagnitude:c.maxDataValue,minimumSymbolSize:c.minSize,maximumSymbolSize:c.maxSize};a.functionArguments=d;const h=ne(a);return i.convertToRFT?F.fromJSON({rasterFunctionDefinition:h}):a}function nr(s,i){const a=i.convertToRFT;if(i.dataType!=="elevation"&&(i.dataType!=="generic"||i.bandCount!==1||i.pixelType!=="s16"&&i.pixelType!=="s32"&&i.pixelType!=="f32"&&i.pixelType!=="f64"))return new F;const e=new F;e.functionName="Hillshade";const t=s.hillshadeType==="traditional"?0:1,n=s.scalingType==="none"?1:3,o={HillshadeType:t,SlopeType:n,ZFactor:s.zFactor};return t===0&&(o.Azimuth=s.azimuth,o.Altitude=s.altitude),n===3&&(o.PSPower=s.pixelSizePower,o.PSZFactor=s.pixelSizeFactor),e.functionArguments=o,e.variableName="Raster",s.colorRamp&&(e.functionName="ShadedRelief",a?o.ColorRamp=At(s.colorRamp):o.Colormap=Vt(s.colorRamp)),a?new F({rasterFunctionDefinition:ne(e)}):e}function ar(s,i){var u;const a=i.convertToRFT,e=new F;e.functionName="Stretch";const t=Me[Hi.toJSON(s.stretchType)],n="u8",o={StretchType:t,Statistics:pr(s.statistics??[]),DRA:s.dynamicRangeAdjustment,UseGamma:s.useGamma,Gamma:s.gamma,ComputeGamma:s.computeGamma};if(s.outputMin!=null&&(o.Min=s.outputMin),s.outputMax!=null&&(o.Max=s.outputMax),t===Me.standardDeviation?(o.NumberOfStandardDeviations=s.numberOfStandardDeviations,e.outputPixelType=n):t===Me.percentClip?(o.MinPercent=s.minPercent,o.MaxPercent=s.maxPercent,e.outputPixelType=n):t===Me.minMax?e.outputPixelType=n:t===Me.sigmoid&&(o.SigmoidStrengthLevel=s.sigmoidStrengthLevel),e.functionArguments=o,e.variableName="Raster",s.colorRamp){const p=s.colorRamp,m=new F;if(a)m.functionArguments={ColorRamp:At(p)};else{const c=Bi(p,!0);if(c)m.functionArguments={colorRampName:c};else if(!i.convertColorRampToColormap||p.type!=="algorithmic"&&p.type!=="multipart"){const d=s.colorRamp.toJSON();d.type==="algorithmic"?d.algorithm=d.algorithm||"esriCIELabAlgorithm":d.type==="multipart"&&((u=d.colorRamps)!=null&&u.length)&&d.colorRamps.forEach(h=>h.algorithm=h.algorithm||"esriCIELabAlgorithm"),m.functionArguments={colorRamp:d}}else m.functionArguments={Colormap:Vt(p)}}return m.variableName="Raster",m.functionName="Colormap",m.functionArguments.Raster=e,a?new F({rasterFunctionDefinition:ne(m)}):m}return a?new F({rasterFunctionDefinition:ne(e)}):e}function or(s,i){const a=[],e=[],t=[],n=[],{pixelType:u,rasterAttributeTable:p}=i,m=p==null?null:p.features,c=Gt(p);if(c&&m&&Array.isArray(m)&&s.classBreakInfos){s.classBreakInfos.forEach((y,R)=>{var N;const I=(N=y.symbol)==null?void 0:N.color;let S;I!=null&&I.a&&y.minValue!=null&&y.maxValue!=null&&m.forEach(q=>{y.minValue!=null&&y.maxValue!=null&&(S=q.attributes[s.field],(S>=y.minValue&&S<y.maxValue||R===s.classBreakInfos.length-1&&S>=y.minValue)&&n.push([q.attributes[c],I.r,I.g,I.b]))})});const w=u?at(n,u):n,g=new F;return g.functionName="Colormap",g.functionArguments={},g.functionArguments.Colormap=w,g.variableName="Raster",i.convertToRFT?new F({rasterFunctionDefinition:ne(g)}):g}s.classBreakInfos.forEach((w,g)=>{if(w.minValue==null||w.maxValue==null)return;const y=w.symbol&&w.symbol.color;y!=null&&y.a?(g===0?a.push(w.minValue,w.maxValue+1e-4):a.push(w.minValue+1e-4,w.maxValue+1e-4),e.push(g),n.push([g,y.r,y.g,y.b])):t.push(w.minValue,w.maxValue)});const d=u?at(n,u):n,h=new F;h.functionName="Remap",h.functionArguments={InputRanges:a,OutputValues:e,NoDataRanges:t},h.variableName="Raster";const f=new F;return f.functionName="Colormap",f.functionArguments={Colormap:d,Raster:h},i.convertToRFT?new F({rasterFunctionDefinition:ne(f)}):f}function at(s,i){const a=er.has(i)?Li(i):null;return a&&s.push([Math.floor(a[0]-1),0,0,0],[Math.ceil(a[1]+1),0,0,0]),s}function Gt(s){if(s==null)return;const{fields:i}=s,a=i==null?void 0:i.find(e=>(e==null?void 0:e.name)&&e.name.toLowerCase()==="value");return a==null?void 0:a.name}function lr(s,i){var d,h;const a=[],{pixelType:e,rasterAttributeTable:t}=i,n=t==null?null:t.features,o=Gt(t),u=(h=(d=s.defaultSymbol)==null?void 0:d.color)==null?void 0:h.toRgb(),p=s.uniqueValueInfos;if(p)if(n){if(o){const f=new Map;p.forEach(g=>{const y=g.value,R=Ot(g);y!=null&&(R!=null&&R.a)&&f.set(String(y),R.toRgb())});const w=s.field;w&&n.forEach(({attributes:g})=>{const y=String(g[w]),R=g[o],I=f.get(y);I?a.push([R,...I]):u&&a.push([R,...u])})}}else for(let f=0;f<p.length;f++){const w=p[f],g=Ot(w),y=+w.value;if(g!=null&&g.a){if(isNaN(y))return null;a.push([y,g.r,g.g,g.b])}}const m=e?at(a,e):a,c=new F;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=m,c.variableName="Raster",i.convertToRFT?new F({rasterFunctionDefinition:ne(c)}):c}function Ot(s){var i,a,e,t,n;return((i=s.symbol)==null?void 0:i.type)==="polygon-3d"?(t=(e=(a=s.symbol.symbolLayers)==null?void 0:a.find(o=>o.type==="fill"))==null?void 0:e.material)==null?void 0:t.color:(n=s.symbol)==null?void 0:n.color}function ur(s,i){const a=s.extractColormap();if(!a||a.length===0)return null;const{pixelType:e}=i,t=e?at(a,e):a,n=new F;return n.functionName="Colormap",n.functionArguments={},n.functionArguments.Colormap=t,i.convertToRFT?new F({rasterFunctionDefinition:ne(n)}):n}function pr(s){const i=[];return s==null||s.forEach(a=>{const e=a;if(Array.isArray(e))i.push(e);else{if(e.min==null||e.max==null)return;const t=[e.min,e.max,e.avg||0,e.stddev||0];i.push(t)}}),i}function cr(s){const i=[],a=[];return s.forEach(e=>{i.push(e[0]),a.push(Qi([...e.slice(1),255]))}),{type:"RasterColormap",values:i,colors:a}}let O=class extends P{constructor(){super(...arguments),this.layer=null,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}get adjustAspectRatio(){return this.layer.adjustAspectRatio}writeAdjustAspectRatio(i,a,e){this.layer.version<10.3||(a[e]=i)}get bandIds(){return this.layer.bandIds}get compressionQuality(){return this.layer.compressionQuality}writeCompressionQuality(i,a,e){this.format&&this.format.toLowerCase().includes("jpg")&&i!=null&&(a[e]=i)}get compressionTolerance(){return this.layer.compressionTolerance}writeCompressionTolerance(i,a,e){this.format==="lerc"&&i!=null&&(a[e]=i)}get format(){var i;return((i=this.layer.renderer)==null?void 0:i.type)==="vector-field"?"lerc":this.layer.format}get interpolation(){return this.layer.interpolation}get noData(){return this.layer.noData}get noDataInterpretation(){return this.layer.noDataInterpretation}writeLercVersion(i,a,e){this.format==="lerc"&&this.layer.version>=10.5&&(a[e]=i)}get version(){const i=this.layer;return i.commitProperty("bandIds"),i.commitProperty("format"),i.commitProperty("compressionQuality"),i.commitProperty("compressionTolerance"),i.commitProperty("interpolation"),i.commitProperty("noData"),i.commitProperty("noDataInterpretation"),i.commitProperty("mosaicRule"),i.commitProperty("rasterFunction"),i.commitProperty("adjustAspectRatio"),i.commitProperty("pixelFilter"),i.commitProperty("definitionExpression"),i.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(i){this._set("version",i)}get mosaicRule(){const i=this.layer;let a=i.mosaicRule;const e=i.definitionExpression;return a?e&&e!==a.where&&(a=a.clone(),a.where=e):e&&(a=new k({where:e})),a}get rasterFunction(){var o,u;const i=this.layer;let{rasterFunction:a}=i;const e=i.pixelFilter,t=!i.format||i.format.includes("jpg")||i.format.includes("png");a=this._addResampleRasterFunction(a);const n=(o=i.multidimensionalSubset)==null?void 0:o.areaOfInterest;return n&&(a=mr(a,n)),t&&!e&&((u=i.renderer)==null?void 0:u.type)!=="vector-field"&&(a=this.combineRendererWithRenderingRule(a)),a}combineRendererWithRenderingRule(i){const a=this.layer,{rasterInfo:e,renderer:t}=a;return i=i||a.rasterFunction,!t||!Jt(t)?i:ht(rr(t,{rasterAttributeTable:e.attributeTable,pixelType:e.pixelType,dataType:e.dataType,bandNames:e.bandInfos.map(({name:n})=>n),convertColorRampToColormap:a.version<10.6,convertToRFT:!!(i!=null&&i.rasterFunctionDefinition),bandCount:e.bandCount}),i)}_addResampleRasterFunction(i){var n;if(((n=this.layer.renderer)==null?void 0:n.type)!=="vector-field"||(i==null?void 0:i.functionName)==="Resample")return i;const a=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10,e=this.layer.serviceRasterInfo.pixelSize;let t=new F({functionName:"Resample",functionArguments:{ResamplingType:a,InputCellSize:e}});return t=i!=null&&i.rasterFunctionDefinition?new F({rasterFunctionDefinition:ne(t)}):t,ht(t,i)}};function mr(s,i){const a=new F({functionName:"Clip",functionArguments:{ClippingGeometry:i.toJSON(),ClippingType:1}});return ht(a,s)}r([l()],O.prototype,"layer",void 0),r([l({json:{write:!0}})],O.prototype,"adjustAspectRatio",null),r([j("adjustAspectRatio")],O.prototype,"writeAdjustAspectRatio",null),r([l({json:{write:!0}})],O.prototype,"bandIds",null),r([l({json:{write:!0}})],O.prototype,"compression",void 0),r([l({json:{write:!0}})],O.prototype,"compressionQuality",null),r([j("compressionQuality")],O.prototype,"writeCompressionQuality",null),r([l({json:{write:!0}})],O.prototype,"compressionTolerance",null),r([j("compressionTolerance")],O.prototype,"writeCompressionTolerance",null),r([l({json:{write:!0}})],O.prototype,"format",null),r([l({type:String,json:{read:{reader:ve.read},write:{writer:ve.write}}})],O.prototype,"interpolation",null),r([l({json:{write:!0}})],O.prototype,"noData",null),r([l({type:String,json:{read:{reader:ze.read},write:{writer:ze.write}}})],O.prototype,"noDataInterpretation",null),r([l({json:{write:!0}})],O.prototype,"pixelType",void 0),r([l({json:{write:!0}})],O.prototype,"lercVersion",void 0),r([j("lercVersion")],O.prototype,"writeLercVersion",null),r([l({type:Number})],O.prototype,"version",null),r([l({json:{write:!0}})],O.prototype,"mosaicRule",null),r([l({json:{write:!0,name:"renderingRule"}})],O.prototype,"rasterFunction",null),O=r([v("esri.layers.support.ExportImageServiceParameters")],O);let ge=class extends Se(P){constructor(){super(...arguments),this.fromGeometry=null,this.toGeometry=null,this.objectIds=null,this.where=null,this.maxCount=null}};r([l({type:V,json:{read:!0}})],ge.prototype,"fromGeometry",void 0),r([l({type:V,json:{read:!0,write:!0}})],ge.prototype,"toGeometry",void 0),r([l({json:{write:!0}})],ge.prototype,"objectIds",void 0),r([l({type:String,json:{write:!0}})],ge.prototype,"where",void 0),r([l({type:Number,json:{write:!0}})],ge.prototype,"maxCount",void 0),ge=r([v("esri.rest.support.FindImagesParameters")],ge);const dr=ge,Lt=s=>{let i=class extends s{constructor(){super(...arguments),this.make=null,this.model=null,this.focalLength=null,this.pixelSize=null,this.rows=null,this.cols=null}};return r([l({json:{write:!0}})],i.prototype,"make",void 0),r([l({json:{write:!0}})],i.prototype,"model",void 0),r([l({json:{write:!0}})],i.prototype,"focalLength",void 0),r([l({json:{write:!0}})],i.prototype,"pixelSize",void 0),r([l({json:{write:!0}})],i.prototype,"rows",void 0),r([l({json:{write:!0}})],i.prototype,"cols",void 0),i=r([v("esri.rest.support.CameraInfoMixin")],i),i};let K=class extends Lt(P){constructor(){super(...arguments),this.id=null,this.referenceUri=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.perspectiveCenter=null,this.orientation=null}writeAcquisitionDate(i,a){a.acquisitionDate=i==null?void 0:i.getTime()}};r([l({json:{write:!0}})],K.prototype,"id",void 0),r([l({json:{name:"uri",write:!0}})],K.prototype,"referenceUri",void 0),r([l({type:Date,json:{write:!0}})],K.prototype,"acquisitionDate",void 0),r([j("acquisitionDate")],K.prototype,"writeAcquisitionDate",null),r([l({json:{write:!0}})],K.prototype,"cameraID",void 0),r([l({type:V,json:{write:!0}})],K.prototype,"center",void 0),r([l({type:V,json:{write:!0}})],K.prototype,"perspectiveCenter",void 0),r([l({json:{write:!0}})],K.prototype,"orientation",void 0),K=r([v("esri.rest.support.ImageInspectionInfo")],K);const yr=K;let We=class extends P{constructor(){super(...arguments),this.images=null}};r([l({type:[yr],json:{write:!0}})],We.prototype,"images",void 0),We=r([v("esri.rest.support.FindImagesResult")],We);const hr=We;var gt;let Fe=gt=class extends P{constructor(s){super(s),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new gt(A({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};r([l({type:[String],json:{name:"angleName",write:!0}})],Fe.prototype,"angleNames",void 0),r([l({type:V,json:{write:!0}})],Fe.prototype,"point",void 0),r([l({type:se,json:{write:!0}})],Fe.prototype,"spatialReference",void 0),r([l({type:He,json:{write:!0}})],Fe.prototype,"rasterId",void 0),Fe=gt=r([v("esri.rest.support.ImageAngleParameters")],Fe);const gr=Fe;let Ne=class extends P{constructor(i){super(i),this.north=null,this.up=null,this.spatialReference=null}};r([l({type:Number,json:{write:!0}})],Ne.prototype,"north",void 0),r([l({type:Number,json:{write:!0}})],Ne.prototype,"up",void 0),r([l({type:se,json:{write:!0}})],Ne.prototype,"spatialReference",void 0),Ne=r([v("esri.rest.support.ImageAngleResult")],Ne);const fr=Ne,W=new Qt({esriMensurationPoint:"point",esriMensurationCentroid:"centroid",esriMensurationDistanceAndAngle:"distance-and-angle",esriMensurationAreaAndPerimeter:"area-and-perimeter",esriMensurationHeightFromBaseAndTop:"base-and-top",esriMensurationHeightFromBaseAndTopShadow:"base-and-top-shadow",esriMensurationHeightFromTopAndTopShadow:"top-and-top-shadow",esriMensurationPoint3D:"point-3D",esriMensurationCentroid3D:"centroid-3D",esriMensurationDistanceAndAngle3D:"distance-and-angle-3D",esriMensurationAreaAndPerimeter3D:"area-and-perimeter-3D"});let ee=class extends P{constructor(){super(...arguments),this.type=null,this.measureOperation=null,this.mosaicRule=null,this.pixelSize=null,this.raster=void 0}};r([l()],ee.prototype,"type",void 0),r([l({type:W.apiValues,json:{read:W.read,write:W.write}})],ee.prototype,"measureOperation",void 0),r([l({type:k,json:{write:!0}})],ee.prototype,"mosaicRule",void 0),r([l({type:V,json:{write:!0}})],ee.prototype,"pixelSize",void 0),r([l({json:{write:!0}})],ee.prototype,"raster",void 0),ee=r([v("esri.rest.support.BaseImageMeasureParameters")],ee);var ft;let ue=ft=class extends ee{constructor(){super(...arguments),this.type="area-perimeter",this.geometry=null,this.is3D=!1,this.linearUnit="meters",this.areaUnit="square-meters"}writeGeometry(s,i,a){s!=null&&(i.geometryType=te(s),i[a]=s.toJSON())}get measureOperation(){return this.is3D?"area-and-perimeter-3D":"area-and-perimeter"}clone(){return new ft(A({geometry:this.geometry,is3D:this.is3D,linearUnit:this.linearUnit,areaUnit:this.areaUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};r([l({types:oe,json:{name:"fromGeometry",read:!0,write:!0}})],ue.prototype,"geometry",void 0),r([j("geometry")],ue.prototype,"writeGeometry",null),r([l({type:W.apiValues,json:{write:W.write}})],ue.prototype,"measureOperation",null),r([l({json:{read:!0}})],ue.prototype,"is3D",void 0),r([l({type:String,json:{read:be.read,write:be.write}})],ue.prototype,"linearUnit",void 0),r([l({type:String,json:{read:st.read,write:st.write}})],ue.prototype,"areaUnit",void 0),ue=ft=r([v("esri.rest.support.ImageAreaParameters")],ue);const wr=ue;let we=class extends P{constructor(){super(...arguments),this.value=null,this.displayValue=null,this.uncertainty=null}};r([l({type:Number,json:{read:!0,write:!0}})],we.prototype,"value",void 0),r([l({type:String,json:{read:!0,write:!0}})],we.prototype,"displayValue",void 0),r([l({type:Number,json:{read:!0,write:!0}})],we.prototype,"uncertainty",void 0),we=r([v("esri.rest.support.BaseImageMeasureResult.BaseImageMeasureResultValue")],we);let Ae=class extends we{constructor(){super(...arguments),this.unit=null}};r([l({type:String,json:{read:be.read,write:be.write}})],Ae.prototype,"unit",void 0),Ae=r([v("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultLengthValue")],Ae);let Ze=class extends we{constructor(){super(...arguments),this.unit=null}};r([l({type:String,json:{read:st.read,write:st.write}})],Ze.prototype,"unit",void 0),Ze=r([v("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAreaValue")],Ze);let Ue=class extends we{constructor(){super(...arguments),this.unit=null}};r([l({type:String,json:{read:nt.read,write:nt.write}})],Ue.prototype,"unit",void 0),Ue=r([v("esri.rest.support.BaseImageMeasureResult.ImageMeasureResultAngleValue")],Ue);let Re=class extends P{constructor(){super(...arguments),this.name=null,this.sensorName=null}};r([l({type:String,json:{read:!0,write:!0}})],Re.prototype,"name",void 0),r([l({type:String,json:{read:!0,write:!0}})],Re.prototype,"sensorName",void 0),Re=r([v("esri.rest.support.BaseImageMeasureResult")],Re);let Je=class extends Re{constructor(){super(...arguments),this.area=null,this.perimeter=null}};r([l({type:Ze,json:{read:!0,write:!0}})],Je.prototype,"area",void 0),r([l({type:Ae,json:{read:!0,write:!0}})],Je.prototype,"perimeter",void 0),Je=r([v("esri.rest.support.ImageAreaResult")],Je);const Rr=Je;let Ke=class extends Se(P){constructor(){super(...arguments),this.outSpatialReference=null}};r([l({type:se,json:{name:"outSR",write:!0}})],Ke.prototype,"outSpatialReference",void 0),Ke=r([v("esri.rest.support.ImageBoundaryParameters")],Ke);const vr=Ke;let _e=class extends P{constructor(){super(...arguments),this.area=null,this.geometry=null}readGeometry(i,a){return i==null?null:i.rings?dt.fromJSON(i):Le.fromJSON(i)}};r([l({type:Number,json:{write:!0}})],_e.prototype,"area",void 0),r([l({json:{name:"shape",write:!0}})],_e.prototype,"geometry",void 0),r([J("geometry")],_e.prototype,"readGeometry",null),_e=r([v("esri.rest.support.ImageBoundaryResult")],_e);const br=_e;var wt;let re=wt=class extends ee{constructor(){super(...arguments),this.type="distance-angle",this.fromGeometry=null,this.toGeometry=null,this.is3D=!1,this.linearUnit="meters",this.angularUnit="degrees"}writeFromGeometry(s,i,a){s!=null&&(i.geometryType=te(s),i[a]=s.toJSON())}get measureOperation(){return this.is3D?"distance-and-angle-3D":"distance-and-angle"}clone(){return new wt(A({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,is3D:this.is3D,linearUnit:this.linearUnit,angularUnit:this.angularUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};r([l({type:V,json:{read:!0,write:!0}})],re.prototype,"fromGeometry",void 0),r([j("fromGeometry")],re.prototype,"writeFromGeometry",null),r([l({type:V,json:{read:!0,write:!0}})],re.prototype,"toGeometry",void 0),r([l({type:W.apiValues,json:{write:W.write}})],re.prototype,"measureOperation",null),r([l({json:{read:!0}})],re.prototype,"is3D",void 0),r([l({type:String,json:{read:be.read,write:be.write}})],re.prototype,"linearUnit",void 0),r([l({type:String,json:{read:nt.read,write:nt.write}})],re.prototype,"angularUnit",void 0),re=wt=r([v("esri.rest.support.ImageDistanceParameters")],re);const Sr=re;let Oe=class extends Re{constructor(){super(...arguments),this.distance=null,this.azimuthAngle=null,this.elevationAngle=null}};r([l({type:Ae,json:{read:!0,write:!0}})],Oe.prototype,"distance",void 0),r([l({type:Ue,json:{read:!0,write:!0}})],Oe.prototype,"azimuthAngle",void 0),r([l({type:Ue,json:{read:!0,write:!0}})],Oe.prototype,"elevationAngle",void 0),Oe=r([v("esri.rest.support.ImageDistanceResult")],Oe);const xr=Oe;let pe=class extends Se(P){constructor(){super(...arguments),this.geometry=null,this.objectIds=null,this.spatialRelationship="intersects",this.timeExtent=null,this.where=null}writeGeometry(i,a,e){i!=null&&(a.geometryType=te(i),a[e]=JSON.stringify(i.toJSON()))}};r([l({types:oe,json:{read:ie,write:!0}})],pe.prototype,"geometry",void 0),r([j("geometry")],pe.prototype,"writeGeometry",null),r([l({json:{write:!0}})],pe.prototype,"objectIds",void 0),r([kt(Wt,{ignoreUnknown:!1,name:"spatialRel"})],pe.prototype,"spatialRelationship",void 0),r([l({type:Ft,json:{name:"time",write:!0}})],pe.prototype,"timeExtent",void 0),r([l({type:String,json:{write:!0}})],pe.prototype,"where",void 0),pe=r([v("esri.rest.support.ImageGPSInfoParameters")],pe);const Ir=pe;let Xe=class extends Lt(P){constructor(){super(...arguments),this.id=null}};r([l({json:{write:!0}})],Xe.prototype,"id",void 0),Xe=r([v("esri.rest.support.CameraInfo")],Xe);const Fr=Xe;let X=class extends P{constructor(){super(...arguments),this.id=null,this.name=null,this.acquisitionDate=null,this.cameraID=null,this.center=null,this.gps=null,this.orientation=null}writeAcquisitionDate(i,a){a.acquisitionDate=i==null?void 0:i.getTime()}};r([l({json:{write:!0}})],X.prototype,"id",void 0),r([l({json:{write:!0}})],X.prototype,"name",void 0),r([l({type:Date,json:{write:!0}})],X.prototype,"acquisitionDate",void 0),r([j("acquisitionDate")],X.prototype,"writeAcquisitionDate",null),r([l({json:{write:!0}})],X.prototype,"cameraID",void 0),r([l({type:V,json:{write:!0}})],X.prototype,"center",void 0),r([l({json:{write:!0}})],X.prototype,"gps",void 0),r([l({json:{write:!0}})],X.prototype,"orientation",void 0),X=r([v("esri.rest.support.ImageGPSInfo")],X);const Dr=X;let Ee=class extends P{constructor(){super(...arguments),this.images=null,this.cameras=null}};r([l({type:[Dr],json:{write:!0}})],Ee.prototype,"images",void 0),r([l({type:[Fr],json:{write:!0}})],Ee.prototype,"cameras",void 0),Ee=r([v("esri.rest.support.ImageGPSInfoResult")],Ee);const Tr=Ee;var Rt;let ce=Rt=class extends ee{constructor(){super(...arguments),this.type="height",this.fromGeometry=null,this.toGeometry=null,this.operationType="base-and-top",this.linearUnit="meters"}writeFromGeometry(s,i,a){s!=null&&(i.geometryType=te(s),i[a]=s.toJSON())}get measureOperation(){return this.operationType}clone(){return new Rt(A({fromGeometry:this.fromGeometry,toGeometry:this.toGeometry,operationType:this.operationType,linearUnit:this.linearUnit,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};r([l({type:V,json:{read:!0}})],ce.prototype,"fromGeometry",void 0),r([j("fromGeometry")],ce.prototype,"writeFromGeometry",null),r([l({type:V,json:{read:!0,write:!0}})],ce.prototype,"toGeometry",void 0),r([l({type:W.apiValues,json:{write:W.write}})],ce.prototype,"measureOperation",null),r([l({json:{read:!0}})],ce.prototype,"operationType",void 0),r([l({type:String,json:{read:be.read,write:be.write}})],ce.prototype,"linearUnit",void 0),ce=Rt=r([v("esri.rest.support.ImageHeightParameters")],ce);const jr=ce;let Ye=class extends Re{constructor(){super(...arguments),this.height=null}};r([l({type:Ae,json:{read:!0,write:!0}})],Ye.prototype,"height",void 0),Ye=r([v("esri.rest.support.ImageHeightResult")],Ye);const Pr=Ye;var vt;let C=vt=class extends P{constructor(){super(...arguments),this.geometry=null,this.rasterFunctions=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(s,i,a){s!=null&&(i.geometryType=te(s),i[a]=JSON.stringify(s.toJSON()))}set mosaicRule(s){let i=s;i!=null&&i.mosaicMethod&&(i=k.fromJSON({...i.toJSON(),mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation})),this._set("mosaicRule",i)}writeMosaicRule(s,i,a){s!=null&&(i[a]=JSON.stringify(s.toJSON()))}set rasterFunction(s){let i=s;i!=null&&i.rasterFunction&&(i=F.fromJSON({...i.toJSON(),rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments})),this._set("rasterFunction",i)}writeRasterFunction(s,i,a){s!=null&&(i[a]=JSON.stringify(s.toJSON())),s.rasterFunctionDefinition&&(i[a]=JSON.stringify(s.rasterFunctionDefinition))}writeRasterFunctions(s,i,a){s!=null&&(i[a]=JSON.stringify(s.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(s,i,a){s!=null&&(i[a]=JSON.stringify(s))}writeTimeExtent(s,i,a){if(s!=null){const e=s.start!=null?s.start.getTime():null,t=s.end!=null?s.end.getTime():null;i[a]=e!=null?t!=null?`${e},${t}`:`${e}`:null}}clone(){return new vt(A({geometry:this.geometry,mosaicRule:this.mosaicRule,rasterFunction:this.rasterFunction,rasterFunctions:this.rasterFunctions,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};r([l({json:{write:!0}})],C.prototype,"geometry",void 0),r([j("geometry")],C.prototype,"writeGeometry",null),r([l({type:k,json:{write:!0}})],C.prototype,"mosaicRule",null),r([j("mosaicRule")],C.prototype,"writeMosaicRule",null),r([l({type:F,json:{write:!0,name:"renderingRule"}})],C.prototype,"rasterFunction",null),r([j("rasterFunction")],C.prototype,"writeRasterFunction",null),r([l({type:[F],json:{write:!0,name:"renderingRules"}})],C.prototype,"rasterFunctions",void 0),r([j("rasterFunctions")],C.prototype,"writeRasterFunctions",null),r([l({type:V,json:{write:!0}})],C.prototype,"pixelSize",void 0),r([j("pixelSize")],C.prototype,"writePixelSize",null),r([l({type:Boolean,json:{write:!0}})],C.prototype,"returnGeometry",void 0),r([l({type:Boolean,json:{write:!0}})],C.prototype,"returnCatalogItems",void 0),r([l({type:Boolean,json:{write:!0}})],C.prototype,"returnPixelValues",void 0),r([l({type:Number,json:{write:!0}})],C.prototype,"maxItemCount",void 0),r([l({type:Ft,json:{write:{target:"time"}}})],C.prototype,"timeExtent",void 0),r([j("timeExtent")],C.prototype,"writeTimeExtent",null),r([l({json:{write:!0}})],C.prototype,"raster",void 0),r([l({json:{write:!0}})],C.prototype,"viewId",void 0),r([l({type:Boolean,json:{write:!0}})],C.prototype,"processAsMultidimensional",void 0),C=vt=r([v("esri.rest.support.ImageIdentifyParameters")],C);const zt=C;let Y=class extends P{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};r([l({json:{write:!0}})],Y.prototype,"catalogItemVisibilities",void 0),r([l({type:$t,json:{write:!0}})],Y.prototype,"catalogItems",void 0),r([l({type:V,json:{write:!0}})],Y.prototype,"location",void 0),r([l({json:{write:!0}})],Y.prototype,"name",void 0),r([l({json:{write:!0}})],Y.prototype,"objectId",void 0),r([l({json:{write:!0}})],Y.prototype,"processedValues",void 0),r([l({json:{write:!0}})],Y.prototype,"properties",void 0),r([l({json:{write:!0}})],Y.prototype,"value",void 0),Y=r([v("esri.rest.support.ImageIdentifyResult")],Y);const Nr=Y;var bt;let Ce=bt=class extends P{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(s,i,a){i.geometries={geometryType:"esriGeometryPoint",geometries:s.map(e=>e.toJSON())}}clone(){var s;return new bt({geometries:((s=this.geometries)==null?void 0:s.map(i=>i.clone()))??[],rasterId:this.rasterId})}};r([l({type:[V],json:{write:!0}})],Ce.prototype,"geometries",void 0),r([j("geometries")],Ce.prototype,"writeGeometry",null),r([l({type:He,json:{write:!0}})],Ce.prototype,"rasterId",void 0),Ce=bt=r([v("esri.rest.support.ImagePixelLocationParameters")],Ce);const _r=Ce;let et=class extends P{constructor(){super(...arguments),this.geometries=null}};r([l({json:{write:!0}})],et.prototype,"geometries",void 0),et=r([v("esri.rest.support.ImagePixelLocationResult")],et);const Or=et;var St;let De=St=class extends ee{constructor(){super(...arguments),this.type="point",this.geometry=null,this.is3D=!1}writeGeometry(s,i,a){s!=null&&(i.geometryType=te(s),i[a]=s.toJSON())}get measureOperation(){const{is3D:s,geometry:i}=this;return i.type==="point"?s?"point-3D":"point":s?"centroid-3D":"centroid"}clone(){return new St(A({geometry:this.geometry,is3D:this.is3D,mosaicRule:this.mosaicRule,pixelSize:this.pixelSize,raster:this.raster}))}};r([l({types:oe,json:{name:"fromGeometry",read:ie}})],De.prototype,"geometry",void 0),r([j("geometry")],De.prototype,"writeGeometry",null),r([l({type:W.apiValues,json:{read:W.read,write:W.write}})],De.prototype,"measureOperation",null),r([l({json:{read:!0}})],De.prototype,"is3D",void 0),De=St=r([v("esri.rest.support.ImagePointParameters")],De);const Cr=De;let tt=class extends Re{constructor(){super(...arguments),this.point=null}};r([l({type:V,json:{name:"point.value",read:!0,write:!0}})],tt.prototype,"point",void 0),tt=r([v("esri.rest.support.ImagePointResult")],tt);const $r=tt;var xt;let L=xt=class extends P{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(s,i,a){s!=null&&(i.geometryType=te(s),i[a]=s.toJSON())}set locations(s){if(s!=null&&s.length){const i=new Zt({spatialReference:s[0].spatialReference,points:s.map(({x:a,y:e})=>[a,e])});this._set("locations",s),this.geometry=i}}clone(){return new xt(A({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};r([l({types:oe,json:{read:ie}})],L.prototype,"geometry",void 0),r([j("geometry")],L.prototype,"writeGeometry",null),r([l()],L.prototype,"locations",null),r([l({type:String,json:{type:ve.jsonValues,read:ve.read,write:ve.write}})],L.prototype,"interpolation",void 0),r([l({type:k,json:{write:!0}})],L.prototype,"mosaicRule",void 0),r([l({type:[String],json:{write:!0}})],L.prototype,"outFields",void 0),r([l({type:V,json:{write:!0}})],L.prototype,"pixelSize",void 0),r([l({type:String,json:{write:!0}})],L.prototype,"raster",void 0),r([l({type:Boolean,json:{write:!0}})],L.prototype,"returnFirstValueOnly",void 0),r([l({type:Number,json:{write:!0}})],L.prototype,"sampleDistance",void 0),r([l({type:Number,json:{write:!0}})],L.prototype,"sampleCount",void 0),r([l({type:Number,json:{write:!0}})],L.prototype,"sliceId",void 0),r([l({type:Ft,json:{read:{source:"time"},write:{target:"time"}}})],L.prototype,"timeExtent",void 0),L=xt=r([v("esri.rest.support.ImageSampleParameters")],L);const Ar=L;let me=class extends P{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};r([l({json:{write:!0}})],me.prototype,"attributes",void 0),r([l({type:V,json:{write:!0}})],me.prototype,"location",void 0),r([l({json:{write:!0}})],me.prototype,"locationId",void 0),r([l({json:{write:!0}})],me.prototype,"rasterId",void 0),r([l({json:{write:!0}})],me.prototype,"resolution",void 0),r([l({json:{write:!0}})],me.prototype,"pixelValue",void 0),me=r([v("esri.rest.support.ImageSample")],me);const Vr=me;let it=class extends P{constructor(){super(...arguments),this.samples=null}};r([l({type:[Vr],json:{write:!0}})],it.prototype,"samples",void 0),it=r([v("esri.rest.support.ImageSampleResult")],it);const Mr=it;let Te=class extends Se(P){constructor(){super(...arguments),this.geometries=[],this.rasterIds=null,this.outSpatialReference=null}writeGeometries(i,a,e){a.geometries=i!=null&&i.length?{geometryType:te(i[0]),geometries:i.map(t=>({...t.toJSON(),spatialReference:void 0}))}:null}};r([l({types:[oe]})],Te.prototype,"geometries",void 0),r([j("geometries")],Te.prototype,"writeGeometries",null),r([l({type:[He],json:{write:!0}})],Te.prototype,"rasterIds",void 0),r([l({type:se,json:{name:"outSR",write:!0}})],Te.prototype,"outSpatialReference",void 0),Te=r([v("esri.rest.support.ImageToMapMultirayParameters")],Te);const Jr=Te;let de=class extends Se(P){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.outSpatialReference=null,this.depthOffset=0,this.adjust=!1}writeGeometry(i,a,e){i!=null&&(a.geometryType=te(i),a[e]={...i.toJSON(),spatialReference:void 0})}};r([l({types:oe,json:{read:ie,write:!0}})],de.prototype,"geometry",void 0),r([j("geometry")],de.prototype,"writeGeometry",null),r([l({json:{write:!0}})],de.prototype,"rasterId",void 0),r([l({type:se,json:{name:"outSR",write:!0}})],de.prototype,"outSpatialReference",void 0),r([l({json:{name:"options.DOff",write:!0}})],de.prototype,"depthOffset",void 0),r([l({json:{name:"options.Adjust",write:!0}})],de.prototype,"adjust",void 0),de=r([v("esri.rest.support.ImageToMapParameters")],de);const Er=de;let qe=class extends Se(P){constructor(){super(...arguments),this.referenceUri=null,this.rasterId=null}};r([l({type:String,json:{name:"uri",write:!0}})],qe.prototype,"referenceUri",void 0),r([l({type:Number,json:{write:!0}})],qe.prototype,"rasterId",void 0),qe=r([v("esri.rest.support.ImageUrlParameters")],qe);const qr=qe;let rt=class extends P{constructor(){super(...arguments),this.url=null}};r([l({json:{name:"imageURL",write:!0}})],rt.prototype,"url",void 0),rt=r([v("esri.rest.support.ImageUrlResult")],rt);const Gr=rt;let je=class extends Se(P){constructor(){super(...arguments),this.geometry=null,this.rasterId=null,this.visibleOnly=!1}writeGeometry(s,i,a){s!=null&&(i.geometryType=te(s),i[a]=JSON.stringify(s))}};r([l({types:oe,json:{read:ie,write:!0}})],je.prototype,"geometry",void 0),r([j("geometry")],je.prototype,"writeGeometry",null),r([l({json:{write:!0}})],je.prototype,"rasterId",void 0),r([l({json:{name:"options.VisibleOnly",write:!0}})],je.prototype,"visibleOnly",void 0),je=r([v("esri.rest.support.MapToImageParameters")],je);const Lr=je;let fe=class extends P{constructor(){super(...arguments),this.geometry=null,this.length=null,this.area=null,this.center=null}readCenter(i,a){return i.spatialReference||(i={...i,spatialReference:a.Shape.spatialReference}),V.fromJSON(i)}};r([l({types:oe,json:{name:"Shape",read:ie,write:!0}})],fe.prototype,"geometry",void 0),r([l({json:{name:"Length",write:!0}})],fe.prototype,"length",void 0),r([l({json:{name:"Area",write:!0}})],fe.prototype,"area",void 0),r([l({json:{name:"Center",write:!0}})],fe.prototype,"center",void 0),r([J("center")],fe.prototype,"readCenter",null),fe=r([v("esri.rest.support.MeasureAreaFromImageResult")],fe);const zr=fe;var It;let $e=It=class extends P{constructor(){super(...arguments),this.geometry=null,this.rasterId=void 0}writeGeometry(s,i,a){s!=null&&(i.geometryType=te(s),i[a]={...s.toJSON(),spatialReference:void 0})}clone(){const s=A({geometry:this.geometry,rasterId:this.rasterId});return new It(s)}};r([l({types:oe,json:{name:"fromGeometry",read:ie,write:!0}})],$e.prototype,"geometry",void 0),r([j("geometry")],$e.prototype,"writeGeometry",null),r([l({json:{write:!0}})],$e.prototype,"rasterId",void 0),$e=It=r([v("esri.rest.support.MeasureFromImageParameters")],$e);const Ur=$e;let Ge=class extends P{constructor(){super(...arguments),this.geometry=null,this.length=null}};r([l({types:oe,json:{name:"Shape",read:ie,write:!0}})],Ge.prototype,"geometry",void 0),r([l({json:{name:"Length",write:!0}})],Ge.prototype,"length",void 0),Ge=r([v("esri.rest.support.MeasureLengthFromImageResult")],Ge);const Hr=Ge;function Dt(s){const i=s==null?void 0:s.time;if(i&&(i.start!=null||i.end!=null)){const a=[];i.start!=null&&a.push(i.start),i.end==null||a.includes(i.end)||a.push(i.end),s.time=a.join(",")}}async function Ut(s,i,a){i=M(Ii,i);const e=E(s),t=i.geometry?[i.geometry]:[],n=await Pe(t),o=i.toJSON();Dt(o);const u=n==null?void 0:n[0];u!=null&&(o.geometry=ae(u));const p=U({...e.query,f:"json",...o});return H(p,a)}async function Br(s,i,a){var p,m,c;const e=(i=M(gr,i)).toJSON();e.angleName!=null&&(e.angleName=e.angleName.join(",")),(m=(p=i==null?void 0:i.point)==null?void 0:p.spatialReference)!=null&&m.imageCoordinateSystem&&(e.point.spatialReference=lt(i.point.spatialReference)),(c=i==null?void 0:i.spatialReference)!=null&&c.imageCoordinateSystem&&(e.spatialReference=Ve(i.spatialReference));const t=E(s),n=U({...t.query,f:"json",...e}),o=H(n,a),{data:u}=await T(`${t.path}/computeAngles`,o);return u.spatialReference=u.spatialReference?u.spatialReference.geodataXform!=null?new se({wkid:0,imageCoordinateSystem:u.spatialReference}):se.fromJSON(u.spatialReference):null,u.north==="NaN"&&(u.north=null),u.up==="NaN"&&(u.up=null),new fr(u)}async function Qr(s,i,a){var m;const e=(i=M(_r,i)).toJSON(),{geometries:t}=i;if(t)for(let c=0;c<t.length;c++)(m=t[c].spatialReference)!=null&&m.imageCoordinateSystem&&(e.geometries.geometries[c].spatialReference=lt(t[c].spatialReference));const n=E(s),o=U({...n.query,f:"json",...e}),u=H(o,a),{data:p}=await T(`${n.path}/computePixelLocation`,u);return Or.fromJSON(p)}async function kr(s,i,a){const e=await Ut(s,i,a),t=E(s),{data:n}=await T(`${t.path}/computeStatisticsHistograms`,e),{statistics:o}=n;return o!=null&&o.length&&o.forEach(u=>{u.avg=u.mean,u.stddev=u.standardDeviation}),{statistics:o,histograms:n.histograms}}async function Wr(s,i,a){const e=await Ut(s,i,a),t=E(s),{data:n}=await T(`${t.path}/computeHistograms`,e);return{histograms:n.histograms}}async function Zr(s,i,a){var d,h;const e=(i=M(Ar,i)).toJSON();Dt(e),(d=e.outFields)!=null&&d.length&&(e.outFields=e.outFields.join(","));const t=await Pe(i.geometry),n=t==null?void 0:t[0];n!=null&&(e.geometry=ae(n));const o=E(s),u=U({...o.query,f:"json",...e}),p=H(u,a),{data:m}=await T(`${o.path}/getSamples`,p),c=(h=m==null?void 0:m.samples)==null?void 0:h.map(f=>{const w=f.value==="NaN"||f.value===""?null:f.value.split(" ").map(g=>Number(g));return{...f,pixelValue:w}});return Mr.fromJSON({samples:c})}async function Ct(s,i,a){i=M(zt,i);const e=E(s),t=i.geometry?[i.geometry]:[];return Pe(t).then(n=>{const o=i.toJSON(),u=n==null?void 0:n[0];u!=null&&(o.geometry=JSON.stringify(ae(u)));const p=U({...e.query,f:"json",...o}),m=H(p,a);return T(e.path+"/identify",m)}).then(n=>Nr.fromJSON(n.data))}async function Kr(s,i,a){i=M(jr,i);const e=await ot(s,i,[i.fromGeometry,i.toGeometry],a);return Pr.fromJSON(e)}async function Xr(s,i,a){i=M(wr,i);const e=await ot(s,i,[i.geometry],a);return Rr.fromJSON(e)}async function Yr(s,i,a){i=M(Cr,i);const e=await ot(s,i,[i.geometry],a);return $r.fromJSON(e)}async function es(s,i,a){i=M(Sr,i);const e=await ot(s,i,[i.fromGeometry,i.toGeometry],a);return xr.fromJSON(e)}async function ot(s,i,a,e){const t=E(s),n=await Pe(a),o=i.toJSON();n[0]!=null&&(o.fromGeometry=JSON.stringify(ae(n[0]))),n[1]!=null&&(o.toGeometry=JSON.stringify(ae(n[1])));const u=U({...t.query,f:"json",...o}),p=H(u,e),{data:m}=await T(t.path+"/measure",p);return m}async function ts(s,i,a){const e=await Ht(s,i,a);return Hr.fromJSON(e)}async function is(s,i,a){const e=await Ht(s,i,a);return zr.fromJSON(e)}async function Ht(s,i,a){i=M(Ur,i);const e=E(s),t=i.toJSON(),n=U({...e.query,f:"json",...t}),o=H(n,a),{data:u}=await T(e.path+"/measureFromImage",o);return u}function ae(s){var a;const i=s.toJSON();return(a=s.spatialReference)!=null&&a.imageCoordinateSystem&&(i.spatialReference=lt(s.spatialReference)),i}function lt(s){const{imageCoordinateSystem:i}=s;if(i){const{id:a,referenceServiceName:e}=i;return a!=null?e?{icsid:a,icsns:e}:{icsid:a}:{ics:i}}return s.toJSON()}function Ve(s,i){if(!s.imageCoordinateSystem)return yt(s);const a=lt(s),{icsid:e,icsns:t}=a;return e==null||t!=null&&!(i!=null&&i.toLowerCase().includes("/"+t.toLowerCase()+"/"))?JSON.stringify(a):`0:${e}`}async function rs(s,i,a){i=M(vr,i);const e=E(s),t=i.toJSON();i.outSpatialReference&&(t.outSR=Ve(i.outSpatialReference));const n=U({...e.query,f:"json",...t}),o=H(n,a),{data:u}=await T(e.path+"/queryBoundary",o);return br.fromJSON(u)}async function ss(s,i,a){var d,h;const e=(i=M(Ir,i)).toJSON();Dt(e),(d=e.objectIds)!=null&&d.length&&(e.objectIds=e.objectIds.join(",")),e.geometry||e.objectIds||e.time||e.where||(e.where="1=1");const t=await Pe(i.geometry),n=t==null?void 0:t[0];n!=null&&(e.geometry=ae(n));const o=(n==null?void 0:n.spatialReference)??((h=i.geometry)==null?void 0:h.spatialReference);o&&(e.inSR=Ve(o));const u=E(s),p=U({...u.query,f:"json",...e}),m=H(p,a),{data:c}=await T(`${u.path}/queryGPSInfo`,m);return Tr.fromJSON(c)}async function ns(s,i,a){const e=(i=M(Er,i)).toJSON();i.geometry.spatialReference.imageCoordinateSystem&&(e.geometry=ae(i.geometry)),i.depthOffset&&i.adjust||delete e.options;const t=E(s),n=U({...t.query,f:"json",...e}),o=H(n,a),{data:u}=await T(`${t.path}/imageToMap`,o);return ie(u)}async function as(s,i,a){var p;const e=(i=M(Jr,i)).toJSON();(p=i.rasterIds)!=null&&p.length&&(e.rasterIds=i.rasterIds.join(","));const t=E(s),n=U({...t.query,f:"json",...e}),o=H(n,a),{data:u}=await T(`${t.path}/imageToMapMultiray`,o);return ie(u)}async function os(s,i,a){var d;const e=(i=M(Lr,i)).toJSON(),t=await Pe(i.geometry),n=t==null?void 0:t[0];n!=null&&(e.geometry=ae(n)),i.visibleOnly||delete e.options;const o=(n==null?void 0:n.spatialReference)??((d=i.geometry)==null?void 0:d.spatialReference);o&&(e.inSR=Ve(o));const u=E(s),p=U({...u.query,f:"json",...e}),m=H(p,a),{data:c}=await T(`${u.path}/mapToImage`,m);return ie(c)}async function ls(s,i,a){const e=(i=M(qr,i)).toJSON(),t=E(s),n=U({...t.query,f:"json",...e}),o=H(n,a),{data:u}=await T(`${t.path}/getImageUrl`,o);return Gr.fromJSON(u)}async function us(s,i,a){var m;const e=(i=M(dr,i)).toJSON(),t=await Pe([i.fromGeometry,i.toGeometry]);t[0]!=null&&(e.fromGeometry=ae(t[0]),t[0].spatialReference&&(e.inSR=Ve(t[0].spatialReference))),t[1]!=null&&(e.toGeometry=ae(t[1])),(m=i.objectIds)!=null&&m.length&&(e.objectIds=e.objectIds.join(","));const n=E(s),o=U({...n.query,f:"json",...e}),u=H(o,a),{data:p}=await T(`${n.path}/find`,u);return hr.fromJSON(p)}async function ps(s,i,a){var N,q;const e=E(s),t=U({...e==null?void 0:e.query,f:"json"}),n=H(t,a),o=`${e==null?void 0:e.path}/${i}/info`,u=T(`${o}`,n),p=T(`${o}/keyProperties`,n),m=await Promise.allSettled([u,p]),c=m[0].status==="fulfilled"?m[0].value.data:null,d=m[1].status==="fulfilled"?m[1].value.data:null;let h=null;(N=c.statistics)!=null&&N.length&&(h=c.statistics.map(D=>({min:D[0],max:D[1],avg:D[2],stddev:D[3]})));const f=Le.fromJSON(c.extent),w=Math.ceil(f.width/c.pixelSizeX-.1),g=Math.ceil(f.height/c.pixelSizeY-.1),y=f.spatialReference,R=new V({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:y}),I=(q=c.histograms)!=null&&q.length?c.histograms:null,S=new ki({origin:c.origin,blockWidth:c.blockWidth,blockHeight:c.blockHeight,firstPyramidLevel:c.firstPyramidLevel,maximumPyramidLevel:c.maxPyramidLevel});return new Mt({width:w,height:g,bandCount:c.bandCount,extent:f,spatialReference:y,pixelSize:R,pixelType:c.pixelType.toLowerCase(),statistics:h,histograms:I,keyProperties:d,storageInfo:S})}const cs=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),ms=si(ni,{min:0,max:255});function ds(s){if(!s)return null;const i=JSON.stringify(s).match(/"rasterFunction":"(.*?")/gi),a=i==null?void 0:i.map(e=>e.slice(18,-1));return a?a.join("/"):null}const ys=s=>{let i=class extends s{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalInfo=null,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new O({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.length<1||this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replaceAll(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(n=>typeof n=="number"))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,n){e!=null&&this.format!=="lerc"&&(t[n]=e)}writeCompressionTolerance(e,t,n){this.format==="lerc"&&e!=null&&(t[n]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?k.fromJSON(t):null}get fieldsIndex(){return this.fields?new Yt(this.fields):null}set format(e){e&&cs.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return t.serviceDataType==="esriImageServiceDataTypeVector-UV"||t.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}readMaxScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}set mosaicRule(e){let t=e;t!=null&&t.mosaicMethod&&(t=k.fromJSON({...t.toJSON(),mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation})),this._set("mosaicRule",t)}readMosaicRule(e,t){const n=e||t.mosaicRule;return n?k.fromJSON(n):this._isMosaicRuleSupported(t)?k.fromJSON(t):null}writeMosaicRule(e,t,n){let o=this.mosaicRule;const u=this.definitionExpression;o?u&&u!==o.where&&(o=o.clone(),o.where=u):u&&(o=new k({where:u})),this._isValidCustomizedMosaicRule(o)&&(t[n]=o.toJSON())}writeNoData(e,t,n){e!=null&&typeof e=="number"&&(t[n]=ms(e))}readObjectIdField(e,t){if(!e){const n=t.fields.find(o=>o.type==="esriFieldTypeOID"||o.type==="oid");e=n==null?void 0:n.name}return e}get parsedUrl(){return ei(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}get renderer(){const{activePresetRendererName:e,presetRenderers:t}=this;if(e){const n=t==null?void 0:t.find(({name:o})=>o===e);return n==null?void 0:n.renderer.clone()}return this.internalRenderer}set renderer(e){e&&(this.activePresetRendererName=null),this.internalRenderer=e}set internalRenderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("internalRenderer",e)}readRenderer(e,t,n){var p,m;const o=(m=(p=t==null?void 0:t.layerDefinition)==null?void 0:p.drawingInfo)==null?void 0:m.renderer,u=ji(o,n);return u==null?null:(u.type==="vector-field"&&t.symbolTileSize&&!o.symbolTileSize&&(u.symbolTileSize=t.symbolTileSize),Jt(u)||Pt.getLogger(this).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),u)}writeRenderer(e,t,n){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),e.type==="vector-field"&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){var m;const e=this._rasterAttributeTableFieldPrefix,t=new Ie({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),n=new Ie({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),o=new Ie({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let u=this.fields?A(this.fields):[];u.push(n),(m=this.capabilities)!=null&&m.operations.supportsQuery&&this.fields&&this.fields.length>0&&u.push(t),this.version>=10.4&&this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.some(c=>c.name.toLowerCase()==="none")&&u.push(o),this.rasterFunctionInfos!=null&&this.rasterFunctionInfos.filter(c=>c.name.toLowerCase()!=="none").forEach(c=>{u.push(new Ie({name:"Raster.ServicePixelValue."+c.name,alias:c.name,domain:null,editable:!1,length:50,type:"string"}))}),this._isVectorDataSet()&&(u.push(new Ie({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),u.push(new Ie({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:p}=this.rasterInfo??{};if(p!=null){const c=p.fields.filter(d=>d.type!=="esriFieldTypeOID"&&d.name.toLowerCase()!=="value").map(d=>{const h=A(d);return h.name=e+d.name,h});u=u.concat(c)}return u}set rasterFunction(e){let t=e;t!=null&&t.rasterFunction&&(t=F.fromJSON({...t.toJSON(),rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments})),this._set("rasterFunction",t)}readRasterFunction(e,t){const n=t.rasterFunctionInfos;return t.renderingRule||n!=null&&n.length&&n[0].name!=="None"?this._isRFTJson(t.renderingRule)?F.fromJSON({rasterFunctionDefinition:t.renderingRule}):F.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}readSpatialReference(e,t){const n=e||t.extent.spatialReference;return n?se.fromJSON(n):null}readPixelType(e){return pt.fromJSON(e)||e}writePixelType(e,t,n){this.serviceRasterInfo!=null&&this.pixelType===this.serviceRasterInfo.pixelType||(t[n]=pt.toJSON(e))}readVersion(e,t){let n=t.currentVersion;return n||(n=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),n}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let n=e;const{renderer:o,symbolizer:u,pixelFilter:p,bandIds:m}=this;if(!this._isPicture()&&o&&u&&!p){const c=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(o.toJSON()),d=this._rasterJobHandler.instance;if(d){c&&(u.bind(),await d.updateSymbolizer(u,t),this._cachedRendererJson=o.toJSON());const h=await d.symbolize({bandIds:m,...e},t);n={extent:e.extent,pixelBlock:h}}else n={extent:e.extent,pixelBlock:u.symbolize({bandIds:m,...e})}}return n}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeAngles)throw new x("imagery-layer:compute-angles","this operation is not supported on the input image service");return Br(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputePixelLocation)throw new x("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return Qr(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeHistograms)throw new x("imagery-layer:compute-histograms","this operation is not supported on the input image service");return e=A(e),this._applyMosaicAndRenderingRules(e),Wr(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeStatisticsHistograms)throw new x("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");return e=A(e),this._applyMosaicAndRenderingRules(e),kr(this.url,e,this._getRequestOptions(t))}async measureHeight(e,t){const n=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(e.operationType==="base-and-top"?n.mensuration.supportsHeightFromBaseAndTop:e.operationType==="base-and-top-shadow"?n.mensuration.supportsHeightFromBaseAndTopShadow:n.mensuration.supportsHeightFromTopAndTopShadow))throw new x("imagery-layer:measure-height","this operation is not supported on the input image service");return e=A(e),this._applyMosaicAndRenderingRules(e),Kr(this.url,e,this._getRequestOptions(t))}async measureAreaAndPerimeter(e,t){const n=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(n.mensuration.supportsAreaAndPerimeter&&(!e.is3D||n.mensuration.supports3D)))throw new x("imagery-layer:measure-area-and-perimeter","this operation is not supported on the input image service");return e=A(e),this._applyMosaicAndRenderingRules(e),Xr(this.url,e,this._getRequestOptions(t))}async measureDistanceAndAngle(e,t){const n=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(n.mensuration.supportsDistanceAndAngle&&(!e.is3D||n.mensuration.supports3D)))throw new x("imagery-layer:measure-distance-and-angle","this operation is not supported on the input image service");return e=A(e),this._applyMosaicAndRenderingRules(e),es(this.url,e,this._getRequestOptions(t))}async measurePointOrCentroid(e,t){const n=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(n.mensuration.supportsPointOrCentroid&&(!e.is3D||n.mensuration.supports3D)))throw new x("imagery-layer:measure-point-or-centroid","this operation is not supported on the input image service");return e=A(e),this._applyMosaicAndRenderingRules(e),Yr(this.url,e,this._getRequestOptions(t))}async measureLengthFromImage(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsMeasureFromImage)throw new x("imagery-layer:measure-length-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polyline")throw new x("imagery-layer:measure-length-from-image","this input geometry must be a polyline");return ts(this.url,e,this._getRequestOptions(t))}async measureAreaFromImage(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsMeasureFromImage)throw new x("imagery-layer:measure-area-from-image","this operation is not supported on the input image service");if(e.geometry.type!=="polygon")throw new x("imagery-layer:measure-area-from-image","this input geometry must be a polygon");return is(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return t!=null?t.get(e):void 0}getFieldDomain(e,t){const n=this.getField(e);return n?n.domain:null}async fetchImage(e,t,n,o={}){if(e==null||t==null||n==null)throw new x("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const d=await this._generateRasterInfo(this.rasterFunction,{signal:o.signal});d&&(this.rasterInfo=d)}const u=this.getExportImageServiceParameters(e,t,n,o.timeExtent);if(u==null){if(o.requestAsImageElement&&this._canRequestImageElement(this.format)){const R=document.createElement("canvas");return R.width=t,R.height=n,o.returnImageBitmap?{imageBitmap:await _t(R,`${a(this.parsedUrl)}/exportImage`,o.signal)}:{imageOrCanvasElement:R}}const{bandIds:d,rasterInfo:h}=this,f=((d==null?void 0:d.length)||h.bandCount)??0,w=t*n,g=h.pixelType,y=[];for(let R=0;R<f;R++)y.push(mt.createEmptyBand(g,w));return{pixelData:{pixelBlock:new mt({width:t,height:n,pixels:y,mask:new Uint8Array(w),pixelType:g}),extent:e}}}const p=!!o.requestAsImageElement&&!this.pixelFilter,m=p&&!!o.returnImageBitmap,c={imageServiceParameters:u,imageProps:{extent:e,width:t,height:n,format:this.format},requestAsImageElement:p,returnImageBitmap:m,signal:o.signal};return this._requestArrayBuffer(c)}fetchKeyProperties(e){return T(a(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.rasterFunction:null})}).then(t=>t.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new x("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):T(a(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.rasterFunction:null})}).then(t=>$t.fromJSON(t.data))}getCatalogItemRasterInfo(e,t){const n={...t,query:this._getQueryParams()};return ps(a(this.parsedUrl),e,n)}async getCatalogItemICSInfo(e,t){var xe,he,le,Tt,jt;const{data:n}=await T(a(this.parsedUrl)+"/"+e+"/info/ics",{query:this._getQueryParams(),...t}),o=n==null?void 0:n.ics;if(!o)return;let u=null;try{u=(await T(a(this.parsedUrl)+"/"+e+"/info",{query:this._getQueryParams(),...t})).data.extent}catch{}if(!(u!=null&&u.spatialReference))return{ics:o,icsToPixelTransform:null,icsExtent:null,northDirection:null};const p=this.version>=10.7?T(a(this.parsedUrl)+"/"+e+"/info/icstopixel",{query:this._getQueryParams(),...t}).then(b=>b.data).catch(()=>({})):{},m=u.spatialReference,c={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[u]}),inSR:yt(m),outSR:"0:"+e},d=T(a(this.parsedUrl)+"/project",{query:this._getQueryParams(c),...t}).then(b=>b.data).catch(()=>({})),h=5,f=(u.xmin+u.xmax)/2,w=(u.ymax-u.ymin)/(h+1),g=u.ymin+w,y=[];for(let b=0;b<h;b++)y.push({x:f,y:g+w*b});const R={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:y}),inSR:yt(m),outSR:"0:"+e},I=T(a(this.parsedUrl)+"/project",{query:this._getQueryParams(R),...t}).then(b=>b.data).catch(()=>({})),S=await Promise.all([p,d,I]);let N=S[0].ipxf;if(N==null){const b=(xe=o.geodataXform)==null?void 0:xe.xf_0;((he=b==null?void 0:b.name)==null?void 0:he.toLowerCase())==="topup"&&((le=b==null?void 0:b.coefficients)==null?void 0:le.length)===6&&(N={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:b.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const q=Le.fromJSON((jt=(Tt=S[1])==null?void 0:Tt.geometries)==null?void 0:jt[0]);q&&(q.spatialReference=new se({wkid:0,imageCoordinateSystem:o}));const D=S[2].geometries?S[2].geometries.filter(b=>(b==null?void 0:b.x)!=null&&b.y!=null&&b.x!=="NaN"&&b.y!=="NaN"):[],B=D.length;if(B<3)return{ics:o,icsToPixelTransform:N,icsExtent:q,northDirection:null};let Z=0,$=0,_=0,z=0;for(let b=0;b<B;b++)Z+=D[b].x,$+=D[b].y,_+=D[b].x*D[b].x,z+=D[b].x*D[b].y;const G=(B*z-Z*$)/(B*_-Z*Z);let ye=0;const Be=D[h-1].x>D[0].x,Qe=D[h-1].y>D[0].y;return G===1/0?ye=Qe?90:270:G===0?ye=Be?0:180:G>0?ye=Be?180*Math.atan(G)/Math.PI:180*Math.atan(G)/Math.PI+180:G<0&&(ye=Qe?180+180*Math.atan(G)/Math.PI:360+180*Math.atan(G)/Math.PI),{ics:o,icsToPixelTransform:N,icsExtent:q,northDirection:ye}}async generateRasterInfo(e,t){var p;if(e=M(F,e),this.serviceRasterInfo&&(!e||((p=e.functionName)==null?void 0:p.toLowerCase())==="none"||this._isVectorFieldResampleFunction(e)))return this.serviceRasterInfo;const n=ds(e);if(!n)throw new x("imagery-layer:generate-raster-info","the rendering rule is not supported");if(this._functionRasterInfos[n])return this._functionRasterInfos[n];const o={...t,query:this._getQueryParams()},u=Pi(a(this.parsedUrl),e,o);this._functionRasterInfos[n]=u;try{return await u}catch(m){throw this._functionRasterInfos[n]=null,m}}getExportImageServiceParameters(e,t,n,o){var R,I;e=e.clone().shiftCentralMeridian();const u=Ve(e.spatialReference,a(this.parsedUrl));this.pixelType!==this.serviceRasterInfo.pixelType&&(this.exportImageServiceParameters.pixelType=this.pixelType);const p=this.exportImageServiceParameters.toJSON(),{bandIds:m,noData:c}=p;let{renderingRule:d}=p;const h=(R=this.rasterFunction)==null?void 0:R.rasterFunctionDefinition,f=(I=this.renderer)==null?void 0:I.type,w=!f||f==="raster-stretch"||f==="raster-colormap"||f==="unique-value"||f==="class-breaks"||f==="raster-shaded-relief";if(m!=null&&m.length&&this._hasRasterFunction(this.rasterFunction)&&!h&&w){const S={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:m}};if(d.rasterFunction==="Stretch")S.rasterFunctionArguments.Raster=d.rasterFunctionArguments.Raster,d.rasterFunctionArguments.Raster=S;else if(d.rasterFunction==="Colormap"){const N=d.rasterFunctionArguments.Raster;(N==null?void 0:N.rasterFunction)==="Stretch"?(S.rasterFunctionArguments.Raster=N.rasterFunctionArguments.Raster,N.rasterFunctionArguments.Raster=S):(S.rasterFunctionArguments.Raster=N,d.rasterFunctionArguments.Raster=S)}else S.rasterFunctionArguments.Raster=d,d=S;p.bandIds=void 0}else p.bandIds=m==null?void 0:m.join(",");Array.isArray(c)&&c.length>0&&(p.noData=c.join(","));const g=this._processMultidimensionalIntersection(null,o,this.exportImageServiceParameters.mosaicRule);if(g.isOutSide)return null;p.mosaicRule=g.mosaicRule!=null?JSON.stringify(g.mosaicRule):null,o=g.timeExtent,p.renderingRule=this._getRenderingRuleString(F.fromJSON(d));const y={};if(o!=null){const{start:S,end:N}=o.toJSON();S&&N&&S===N?y.time=""+S:S==null&&N==null||(y.time=`${S??"null"},${N??"null"}`)}return{bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:u,imageSR:u,size:t+","+n,...p,...y}}async getSamples(e,t){const n=await this._fetchCapabilities(t==null?void 0:t.signal);if(!(n!=null&&n.operations.supportsGetSamples))throw new x("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=A(e);const{raster:o}=this;return o&&e.raster==null&&(e.raster=o),Zr(this.url,e,this._getRequestOptions(t))}async identify(e,t){var p;if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsIdentify)throw new x("imagery-layer:identify","identify operation is not supported on the input image service");e=A(e),this.version<10.91&&((p=e.geometry)==null?void 0:p.type)==="extent"&&(e.geometry=dt.fromExtent(e.geometry));const n=this._processMultidimensionalIntersection(e.geometry,e.timeExtent,e.mosaicRule||this.mosaicRule);if(n.isOutSide)throw new x("imagery-layer:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");e.timeExtent=n.timeExtent,e.mosaicRule=n.mosaicRule;const{raster:o,rasterFunction:u}=this;return u&&e.rasterFunction==null&&(e.rasterFunction=u),o&&e.raster==null&&(e.raster=o),Ct(this.url,e,this._getRequestOptions(t))}async imageToMap(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsImageToMap)throw new x("imagery-layer:image-to-map","imageToMap operation is not supported on the input image service");return ns(a(this.parsedUrl),e,this._getRequestOptions(t))}async imageToMapMultiray(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsImageToMapMultiray)throw new x("imagery-layer:image-to-map-multiray","imageToMapMultiray operation is not supported on the input image service");return as(a(this.parsedUrl),e,this._getRequestOptions(t))}async mapToImage(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsMapToImage)throw new x("imagery-layer:map-to-image","mapToImage operation is not supported on the input image service");return os(a(this.parsedUrl),e,this._getRequestOptions(t))}async findImages(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsFindImages)throw new x("imagery-layer:find-images","findImages operation is not supported on the input image service");return us(a(this.parsedUrl),e,this._getRequestOptions(t))}async getImageUrl(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsGetImageUrl)throw new x("imagery-layer:get-image-url","getImageUrl operation is not supported on the input image service");return ls(a(this.parsedUrl),e,this._getRequestOptions(t))}createQuery(){return new ut({outFields:["*"],returnGeometry:!0,where:this.definitionExpression||"1=1"})}async queryBoundary(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQueryBoundary)throw new x("imagery-layer:query-boundary","queryBoundary operation is not supported on the input image service");return e=e??{outSpatialReference:this.spatialReference},rs(a(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasters(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),ti(this.url,e,t)}async queryObjectIds(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),Ki(this.url,e,t)}async queryGPSInfo(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQueryGPSInfo)throw new x("imagery-layer:query-gps-info","queryGPSInfo operation is not supported on the input image service");return e=e??{where:"1=1"},ss(a(this.parsedUrl),e,this._getRequestOptions(t))}async queryRasterCount(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),Xi(this.url,e,t)}async queryVisibleRasters(e,t){var q,D,B,Z;if(!e)throw new x("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:n,returnDomainValues:o,returnTopmostRaster:u,showNoDataRecords:p}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let m=!1,c=null,d=null;const h="raster.servicepixelvalue",f=this._rasterFunctionNamesIndex;if(e.outFields!=null&&(m=e.outFields.some($=>!$.toLowerCase().includes(h)),this.version>=10.4)){const $=e.outFields.filter(z=>z.toLowerCase().includes(h)&&z.length>h.length).map(z=>{const G=z.slice(h.length+1);return[this._updateRenderingRulesFunctionName(G,f),G]});c=$.map(z=>new F({functionName:z[0]})),d=$.map(z=>z[1]);const{rasterFunction:_}=this;c.length===0?_!=null&&_.functionName?(c.push(_),d.push(_.functionName)):c=null:_!=null&&_.functionName&&!c.some(z=>z.functionName===_.functionName)&&(c.push(_),d.push(_.functionName))}const w=e.outSpatialReference==null||e.outSpatialReference.equals(this.spatialReference),{multidimensionalSubset:g}=this;let y=e.timeExtent||this.timeExtent;if(g){const{isOutside:$,intersection:_}=ct(g,{geometry:e.geometry,timeExtent:e.timeExtent,multidimensionalDefinition:(q=this.exportImageServiceParameters.mosaicRule)==null?void 0:q.multidimensionalDefinition});if($)throw new x("imagery-layer:query-visible-rasters","the request cannot be fulfilled when falling outside of the multidimensional subset");(_==null?void 0:_.timeExtent)!=null&&(y=_.timeExtent)}const R=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,y);let I=e.geometry;this.version<10.91&&(I==null?void 0:I.type)==="extent"&&(I=dt.fromExtent(I));const S=this._getQueryParams({geometry:I,timeExtent:y,mosaicRule:R,rasterFunction:this.version<10.4?this.rasterFunction:null,rasterFunctions:c,pixelSize:n,returnCatalogItems:m,returnGeometry:w,raster:this.raster,maxItemCount:u?1:null});delete S.f;const N=new zt(S);try{await this._generateRasterInfo(this.rasterFunction);const $=await Ct(this.url,N,{signal:t==null?void 0:t.signal,query:{...this.customParameters}}),_=e.outFields,z=$.value!=null&&$.value.toLowerCase().includes("nodata");if(!(m&&!w&&((D=$==null?void 0:$.catalogItems)!=null&&D.features.length)&&(p||!z)))return this._processVisibleRastersResponse($,{returnDomainValues:o,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:_});const G=this.objectIdField||"ObjectId",ye=((B=$.catalogItems)==null?void 0:B.features)??[],Be=ye.map(he=>{var le;return(le=he.attributes)==null?void 0:le[G]}),Qe=new ut({objectIds:Be,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[G]}),xe=await this.queryRasters(Qe);return(Z=xe==null?void 0:xe.features)!=null&&Z.length&&xe.features.forEach(he=>{ye.forEach(le=>{le.attributes[G]===he.attributes[G]&&he.geometry&&(le.geometry=he.geometry.clone(),e.outSpatialReference!=null&&(le.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse($,{returnDomainValues:o,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:_})}catch{throw new x("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const n=T(a(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(p=>{var m;return(m=p.data)==null?void 0:m.statistics}),o=T(a(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(p=>{var m;return(m=p.data)==null?void 0:m.histograms}),u=await Promise.all([n,o]);return u[0]&&u[0].forEach(p=>{p.avg=p.mean,p.stddev=p.standardDeviation}),{statistics:u[0]||null,histograms:u[1]||null}}async createFlowMesh(e,t){const n=this._rasterJobHandler.instance;return n?n.createFlowMesh(e,t):zi(e.meshType,e.simulationSettings,e.flowData,t.signal!=null?t.signal:new AbortController().signal)}getMultidimensionalSubsetVariables(e){const t=e??this.serviceRasterInfo.multidimensionalInfo;return Ei(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,n=this.serviceRasterInfo!=null?Promise.resolve(this.serviceRasterInfo):Ni(a(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then(p=>(this._set("serviceRasterInfo",p),this._set("multidimensionalInfo",p.multidimensionalInfo),_i(p,t),p)),o=this._hasRasterFunction(this.rasterFunction)?this._generateRasterInfo(this.rasterFunction,{signal:e}):null,u=this._getRasterFunctionInfos();return Promise.all([n,o,u]).then(p=>{p[1]?this._set("rasterInfo",p[1]):this._set("rasterInfo",p[0]),p[2]&&this._set("rasterFunctionInfos",p[2]),this.internalRenderer&&!this._isSupportedRenderer(this.internalRenderer)&&(this._set("internalRenderer",null),Pt.getLogger(this).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("internalRenderer",this._configRenderer(this.renderer)),this.addHandles([ii(()=>this.rasterFunction,c=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this._generateRasterInfo(c).then(d=>{d&&(this.rasterInfo=d)})})]);const{serviceRasterInfo:m}=this;m.multidimensionalInfo!=null&&this._updateMultidimensionalDefinition(m)})}_combineMosaicRuleWithTimeExtent(e,t){var g;const n=this.timeInfo,{multidimensionalInfo:o}=this.serviceRasterInfo;if(e==null||o==null||t==null||(n==null?void 0:n.startField)==null)return e;const{startField:u}=n,p=o.variables.some(y=>y.dimensions.some(R=>R.name===u))?u:"StdTime";if(e=e.clone(),this.sourceType==="mosaic-dataset")return e.multidimensionalDefinition=(g=e.multidimensionalDefinition)==null?void 0:g.filter(y=>y.dimensionName!==p),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const m=e.multidimensionalDefinition.filter(y=>y.dimensionName===p),c=t.start!=null?t.start.getTime():null,d=t.end!=null?t.end.getTime():null,h=c==null||d==null||c===d,f=h?[c||d]:[[c,d]],w=this.version>=10.8;if(m.length)m.forEach(y=>{y.dimensionName===p&&(w?(y.dimensionName=null,y.isSlice=!1,y.values=[]):(y.isSlice=h,y.values=f))});else if(!w){const y=e.multidimensionalDefinition.filter(R=>R.variableName!=null&&R.dimensionName==null);y.length?y.forEach(R=>{R.dimensionName=p,R.isSlice=h,R.values=f}):e.multidimensionalDefinition.push(new qi({variableName:"",dimensionName:p,isSlice:h,values:f}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return e==null?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(t=>!(!t.variableName&&!t.dimensionName)),e.multidimensionalDefinition.length===0&&(e.multidimensionalDefinition=null)),this.sourceType!=="mosaic-dataset"&&e.multidimensionalDefinition==null?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQuery)throw new x("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=e!=null?M(ut,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query={...t.query,raster:this.raster}),{query:e,requestOptions:t}}async _initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const e=new Mi;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>{}),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,rasterFunction:n}=this;return e.type==="unique-value"&&this._hasRasterFunction(n)&&(t==null?void 0:t.bandCount)===1&&["u8","s8"].includes(t.pixelType)||t!=null&&e!=null&&Oi(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var n;let t=this.sourceJSON;if(!t){const{data:o,ssl:u}=await T(a(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=o,this.sourceJSON=t,u&&(this.url=this.url.replace(/^http:/i,"https:"))}if(((n=t.capabilities)==null?void 0:n.toLowerCase().split(",").map(o=>o.trim()).indexOf("tilesonly"))>-1)throw new x("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?e.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":((t=e.fields)==null?void 0:t.length)>0}_isMosaicRuleSupported(e){var o;if(!e)return!1;const t=this._isMosaicDataset(e),n=e.currentVersion>=10.71&&e.hasMultidimensions&&!(((o=e.fields)==null?void 0:o.length)>1);return t||n}_isVectorFieldResampleFunction(e){if(e==null)return!1;const{functionName:t,functionArguments:n}=e,o=(t==null?void 0:t.toLowerCase())==="resample",u=(n==null?void 0:n.ResampleType)||(n==null?void 0:n.resampleType);return o&&(u===7||u===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){var o,u,p;const t=this._isPicture(),{rasterInfo:n}=this;if(!t&&!this.pixelFilter||this._isVectorDataSet()){const m=(u=(o=this.mosaicRule)==null?void 0:o.multidimensionalDefinition)==null?void 0:u[0].variableName,c=Ci({variableName:m,rasterFunctionName:(p=this.rasterFunction)==null?void 0:p.functionName,presetRenderers:this.presetRenderers});if(!this.bandIds&&n.bandCount>=3){const h=(c==null?void 0:c.bandIds)??$i(n);!h||n.bandCount===3&&h[0]===0&&h[1]===1&&h[2]===2||(this.bandIds=h)}e||(e=(c==null?void 0:c.renderer)??Ai(n,{bandIds:this.bandIds,variableName:this.rasterFunction?null:m}));const d=Vi(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=d,this.symbolizer.rasterInfo=n):this.symbolizer=new Wi({rendererJSON:d,rasterInfo:n}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return e==null?e:{extent:e.extent&&e.extent.clone(),pixelBlock:e.pixelBlock!=null?e.pixelBlock.clone():null}}_getQueryParams(e){(e==null?void 0:e.renderingRule)!=null&&typeof e.renderingRule!="string"&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:n}=this;return{raster:t,viewId:n,f:"json",...e,...this.customParameters}}_getRequestOptions(e){return{...e,query:{...e==null?void 0:e.query,...this.customParameters}}}_decodePixelBlock(e,t,n){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):Nt(e,t,n)}async _getRasterFunctionInfos(e){var n;const t=this.sourceJSON.rasterFunctionInfos;return this.loaded?t:t&&this.version>=10.3?t.length===1&&t[0].name.toLowerCase()==="none"?t:(n=(await T(a(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)==null?void 0:n.rasterFunctionInfos:null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:n,returnImageBitmap:o,signal:u}=e;if(n&&this._canRequestImageElement(t.format)){const g=`${a(this.parsedUrl)}/exportImage`,{data:y}=await T(g,{responseType:o?"blob":"image",query:this._getQueryParams({f:"image",...this.refreshParameters,...e.imageServiceParameters}),signal:u});return y instanceof Blob?{imageBitmap:await _t(y,g,u),params:t}:{imageOrCanvasElement:y,params:t}}const p=this._initJobHandler(),m=T(a(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams({f:"image",...e.imageServiceParameters}),signal:u}),c=(await Promise.all([m,p]))[0].data,d=t.format||"jpgpng";let h=d;if(h!=="bsq"&&h!=="bip"&&(h=Zi(c)),!h)throw new x("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(c)));const f={signal:u};return{pixelData:{pixelBlock:await(d==="gif"||d==="bmp"||d.includes("png")&&(h==="png"||h==="jpg")?Nt(c,{useCanvas:!0,...t},f):this._decodePixelBlock(c,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:d},f)),extent:t.extent},params:t}}_generateRasterInfo(e,t){return this.generateRasterInfo(e,t).catch(()=>null)}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify((t=this.defaultMosaicRule)==null?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){var n;if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;let t=Gi(e,{multidimensionalSubset:this.multidimensionalSubset});if(t!=null&&t.length>0){this.mosaicRule=this.mosaicRule||new k;const o=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.rasterFunction&&((n=this.rasterFunction.functionName)==null?void 0:n.toLowerCase())!=="none"&&t.forEach(u=>u.variableName=""),t=t.filter(({variableName:u,dimensionName:p})=>u&&u!=="*"||p),!(o!=null&&o.length)&&t.length&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){var S,N,q;t=t||{};const n=e.value,{templateRRFunctionNames:o,showNoDataRecords:u,returnDomainValues:p,templateFields:m}=t,c=e.processedValues;let d=(S=e.catalogItems)==null?void 0:S.features,h=((q=(N=e.properties)==null?void 0:N.Values)==null?void 0:q.map(D=>D.replaceAll(/ /gi,", ")))||[];const f=this.objectIdField||"ObjectId",w=typeof n=="string"&&n.toLowerCase().includes("nodata"),g=[];if(n&&!d&&!w){const D={};D[f]=0,h=[n],d=[new ri({geometry:this.fullExtent,attributes:D})]}if(!d)return[];let y,R,I;this._updateResponseFieldNames(d,m),w&&!u&&(d=[]);for(let D=0;D<d.length;D++){if(y=d[D],n!=null){if(R=h[D],I=this.rasterFunction&&c&&c.length>0&&o&&o.length>0&&o.includes(this.rasterFunction.functionName)?c[o.indexOf(this.rasterFunction.functionName)]:n,R.toLowerCase()==="nodata"&&!u)continue;const B="Raster.ItemPixelValue",Z="Raster.ServicePixelValue";y.attributes[B]=R,y.attributes[Z]=I,this._updateFeatureWithMagDirValues(y,R);const $=this.fields&&this.fields.length>0;let _=this.rasterFunction&&this.serviceRasterInfo.attributeTable!=null?$?R:n:I;this.rasterFunction||(_=$?R:n),this._updateFeatureWithRasterAttributeTableValues(y,_)}if(y.sourceLayer=y.layer=this,p&&this._updateFeatureWithDomainValues(y),o&&c&&o.length===c.length)for(let B=0;B<o.length;B++){const Z="Raster.ServicePixelValue."+o[B];y.attributes[Z]=c[B]}g.push(d[D])}return g}_processMultidimensionalIntersection(e,t,n){const{multidimensionalSubset:o}=this;if(!o)return{isOutSide:!1,timeExtent:t,mosaicRule:n=this._combineMosaicRuleWithTimeExtent(n,t)};if(o){const{isOutside:u,intersection:p}=ct(o,{geometry:e,timeExtent:t});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null};(p==null?void 0:p.timeExtent)!=null&&(t=p.timeExtent)}if(n=this._combineMosaicRuleWithTimeExtent(n,t),n==null?void 0:n.multidimensionalDefinition){const{isOutside:u}=ct(o,{multidimensionalDefinition:n.multidimensionalDefinition});if(u)return{isOutSide:!0,timeExtent:null,mosaicRule:null}}return{isOutSide:!1,timeExtent:t,mosaicRule:n}}_updateFeatureWithRasterAttributeTableValues(e,t){const n=this.rasterInfo.attributeTable||this.serviceRasterInfo.attributeTable;if(n==null)return;const{features:o,fields:u}=n,p=u.map(c=>c.name).find(c=>c.toLowerCase()==="value");if(!p)return;const m=o.filter(c=>c.attributes[p]===(t!=null?parseInt(t,10):null));m&&m[0]&&u.forEach(c=>{const d=this._rasterAttributeTableFieldPrefix+c.name;e.attributes[d]=m[0].attributes[c.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const n=t.split(/,\s*/).map(c=>parseFloat(c)),o=n.map(c=>[c]),u=n.map(c=>({minValue:c,maxValue:c,noDataValue:null})),p=new mt({height:1,width:1,pixelType:"f32",pixels:o,statistics:u});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:p,extent:new Le(0,0,0,0,this.spatialReference)});const m=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[p.pixels[0][0],p.pixels[1][0]]:Ui([p.pixels[0][0],p.pixels[1][0]]);e.attributes["Raster.Magnitude"]=m[0],e.attributes["Raster.Direction"]=m[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(n=>n.domain&&n.domain.type==="coded-value");t!=null&&t.forEach(n=>{const o=e.attributes[n.name];if(o!=null){const u=n.domain.codedValues.find(p=>p.code===o);u&&(e.attributes[n.name]=u.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const n=this.fieldsIndex;n!=null&&e.forEach(o=>{var u;if(o!=null&&o.attributes)for(const p of t){const m=(u=n.get(p))==null?void 0:u.name;m&&m!==p&&(o.attributes[p]=o.attributes[m],delete o.attributes[m])}})}_getRenderingRuleString(e){if(e){let t=e.toJSON();return t=t.rasterFunctionDefinition??t,(t.thumbnail||t.thumbnailEx)&&(t.thumbnail=t.thumbnailEx=null),JSON.stringify(t)}return null}_hasRasterFunction(e){return(e==null?void 0:e.functionName)!=null&&e.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if(e==="Raw")return e.replace("Raw","None");const n=e.toLowerCase().replaceAll(/ /gi,"_");return t.has(n)?t.get(n):e}_isRFTJson(e){return(e==null?void 0:e.name)&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_applyMosaicAndRenderingRules(e){const{raster:t,mosaicRule:n,rasterFunction:o}=this;o&&"rasterFunction"in e&&e.rasterFunction==null&&(e.rasterFunction=o),n&&e.mosaicRule==null&&(e.mosaicRule=n),t&&e.raster==null&&(e.raster=t)}_readCapabilities(e){var R;const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(I=>I.trim()):["image","catalog"],{currentVersion:n,advancedQueryCapabilities:o,maxRecordCount:u}=e,p=t.includes("image"),m=e.serviceDataType==="esriImageServiceDataTypeElevation",c=!(!e.spatialReference&&!((R=e.extent)!=null&&R.spatialReference)),d=t.includes("edit"),h=t.includes("mensuration")&&c,f=e.mensurationCapabilities==null?[]:e.mensurationCapabilities.toLowerCase().split(",").map(I=>I.trim()),w=h&&f.includes("basic"),g=this._isMosaicDataset(e)&&t.includes("catalog"),y=t.includes("download");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:p,supportsExportImage:p,supportsIdentify:p,supportsImageToMap:n>=11.2&&g,supportsImageToMapMultiray:n>=11.2&&g,supportsMapToImage:n>=11.2&&g,supportsFindImages:n>=11.2&&g,supportsGetImageUrl:n>=11.3&&y,supportsMeasure:h,supportsMeasureFromImage:n>=11.2,supportsDownload:y,supportsQuery:g&&e.fields&&e.fields.length>0,supportsGetSamples:n>=10.2&&p,supportsProject:n>=10.3&&p,supportsComputeStatisticsHistograms:n>=10.4&&p,supportsQueryBoundary:n>=10.6&&p,supportsCalculateVolume:n>=10.7&&m,supportsComputePixelLocation:n>=10.7&&g,supportsComputeAngles:n>=10.91,supportsQueryGPSInfo:n>=11.2&&g,supportsAdd:d,supportsDelete:d,supportsEditing:d,supportsUpdate:d,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryBins:!1,supportsQueryTopFeatures:!1,supportsAsyncConvert3D:!1},query:{maxRecordCount:u,maxRecordCountFactor:void 0,supportsStatistics:!!(o!=null&&o.supportsStatistics),supportsOrderBy:!!(o!=null&&o.supportsOrderBy),supportsDistinct:!!(o!=null&&o.supportsDistinct),supportsPagination:!!(o!=null&&o.supportsPagination),supportsStandardizedQueriesOnly:!!(o!=null&&o.useStandardizedQueries),supportsPercentileStatistics:!!(o!=null&&o.supportsPercentileStatistics),supportsCentroid:!!(o!=null&&o.supportsReturningGeometryCentroid),supportsDistance:!!(o!=null&&o.supportsQueryWithDistance),supportsExtent:!!(o!=null&&o.supportsReturningQueryExtent),supportsGeometryProperties:!!(o!=null&&o.supportsReturningGeometryProperties),supportsHavingClause:!!(o!=null&&o.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByAnonymous:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!(o!=null&&o.supportsDefaultSR),supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0},mensuration:{supportsDistanceAndAngle:w,supportsAreaAndPerimeter:w,supportsPointOrCentroid:w,supportsHeightFromBaseAndTop:h&&f.includes("base-top height"),supportsHeightFromBaseAndTopShadow:h&&f.includes("base-top shadow height"),supportsHeightFromTopAndTopShadow:h&&f.includes("top-top shadow height"),supports3D:h&&f.includes("3d")}}}};function a(e){return(e==null?void 0:e.path)??""}return r([l({clonable:!1})],i.prototype,"_functionRasterInfos",void 0),r([l({clonable:!1})],i.prototype,"_rasterJobHandler",void 0),r([l({clonable:!1})],i.prototype,"_cachedRendererJson",void 0),r([l({readOnly:!0})],i.prototype,"_serviceSupportsMosaicRule",void 0),r([J("_serviceSupportsMosaicRule",["currentVersion","fields"])],i.prototype,"readServiceSupportsMosaicRule",null),r([l({readOnly:!0})],i.prototype,"_rasterAttributeTableFieldPrefix",void 0),r([l({readOnly:!0})],i.prototype,"_rasterFunctionNamesIndex",null),r([l()],i.prototype,"adjustAspectRatio",void 0),r([l({type:[He],json:{write:!0}})],i.prototype,"bandIds",void 0),r([J("bandIds")],i.prototype,"readBandIds",null),r([l({readOnly:!0,json:{read:!1}})],i.prototype,"capabilities",void 0),r([J("service","capabilities",["capabilities","currentVersion","serviceDataType"])],i.prototype,"readCapabilities",null),r([l({type:Number})],i.prototype,"compressionQuality",void 0),r([j("compressionQuality")],i.prototype,"writeCompressionQuality",null),r([l({type:Number})],i.prototype,"compressionTolerance",void 0),r([j("compressionTolerance")],i.prototype,"writeCompressionTolerance",null),r([l({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),r([l({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],i.prototype,"defaultMosaicRule",void 0),r([J("defaultMosaicRule",["defaultMosaicMethod"])],i.prototype,"readDefaultMosaicRule",null),r([l({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),r([l({readOnly:!0,constructOnly:!0})],i.prototype,"exportImageServiceParameters",void 0),r([l()],i.prototype,"rasterInfo",void 0),r([l({readOnly:!0,type:[Ie]})],i.prototype,"fields",void 0),r([l({readOnly:!0})],i.prototype,"fieldsIndex",null),r([l({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff","bip","bsq"],json:{write:!0}})],i.prototype,"format",null),r([J("service","format",["serviceDataType"])],i.prototype,"readFormat",null),r([l({type:Le})],i.prototype,"fullExtent",void 0),r([l({readOnly:!0})],i.prototype,"hasMultidimensions",void 0),r([l({json:{read:{source:"maxImageHeight"}}})],i.prototype,"imageMaxHeight",void 0),r([l({json:{read:{source:"maxImageWidth"}}})],i.prototype,"imageMaxWidth",void 0),r([l({type:String,json:{type:ve.jsonValues,read:ve.read,write:ve.write}})],i.prototype,"interpolation",void 0),r([l()],i.prototype,"minScale",void 0),r([J("service","minScale")],i.prototype,"readMinScale",null),r([l()],i.prototype,"maxScale",void 0),r([J("service","maxScale")],i.prototype,"readMaxScale",null),r([l({type:k})],i.prototype,"mosaicRule",null),r([J("mosaicRule",["mosaicRule","defaultMosaicMethod"])],i.prototype,"readMosaicRule",null),r([j("mosaicRule")],i.prototype,"writeMosaicRule",null),r([l()],i.prototype,"multidimensionalInfo",void 0),r([l({type:Fi,json:{write:!0}})],i.prototype,"multidimensionalSubset",void 0),r([l({json:{type:He}})],i.prototype,"noData",void 0),r([j("noData")],i.prototype,"writeNoData",null),r([l({type:String,json:{type:ze.jsonValues,read:ze.read,write:ze.write}})],i.prototype,"noDataInterpretation",void 0),r([l({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],i.prototype,"objectIdField",void 0),r([J("objectIdField")],i.prototype,"readObjectIdField",null),r([l({readOnly:!0})],i.prototype,"geometryType",void 0),r([l({})],i.prototype,"typeIdField",void 0),r([l({})],i.prototype,"types",void 0),r([l({readOnly:!0})],i.prototype,"parsedUrl",null),r([l({type:Function})],i.prototype,"pixelFilter",void 0),r([l()],i.prototype,"raster",void 0),r([l({readOnly:!0})],i.prototype,"sourceType",void 0),r([J("sourceType",["serviceSourceType","fields"])],i.prototype,"readSourceType",null),r([l()],i.prototype,"viewId",void 0),r([l()],i.prototype,"renderer",null),r([l({types:Di,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:Ti,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],i.prototype,"internalRenderer",null),r([J("internalRenderer")],i.prototype,"readRenderer",null),r([j("internalRenderer")],i.prototype,"writeRenderer",null),r([l({clonable:!1})],i.prototype,"symbolizer",void 0),r([l(Kt)],i.prototype,"opacity",void 0),r([l({readOnly:!0})],i.prototype,"rasterFields",null),r([l({constructOnly:!0})],i.prototype,"rasterFunctionInfos",void 0),r([l({type:F,json:{name:"renderingRule"}})],i.prototype,"rasterFunction",null),r([J("rasterFunction",["renderingRule","rasterFunctionInfos"])],i.prototype,"readRasterFunction",null),r([l({readOnly:!0})],i.prototype,"serviceDataType",void 0),r([l({readOnly:!0,type:se})],i.prototype,"spatialReference",void 0),r([J("spatialReference",["spatialReference","extent"])],i.prototype,"readSpatialReference",null),r([l({json:{type:pt.jsonValues}})],i.prototype,"pixelType",void 0),r([J("pixelType")],i.prototype,"readPixelType",null),r([j("pixelType")],i.prototype,"writePixelType",null),r([l({constructOnly:!0,type:Mt})],i.prototype,"serviceRasterInfo",void 0),r([l()],i.prototype,"sourceJSON",void 0),r([l(Xt)],i.prototype,"url",void 0),r([l({readOnly:!0})],i.prototype,"version",void 0),r([J("version",["currentVersion","fields","timeInfo"])],i.prototype,"readVersion",null),i=r([v("esri.layers.mixins.ArcGISImageService")],i),i};let Q=class extends ai(oi(li(ui(pi(Ji(ys(ci(mi(di(yi(Se(Si)))))))))))){constructor(...s){super(...s),this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery",this._debouncedSaveOperations=hi(async(i,a,e)=>{const{save:t,saveAs:n}=await xi(()=>import("./imageryUtils-5e5784e1.js"),["assets/imageryUtils-5e5784e1.js","assets/utils-6e609684.js","assets/index-09dc31eb.js","assets/index-d4471cb7.css","assets/originUtils-cfe4feaf.js","assets/multiOriginJSONSupportUtils-c978f4c3.js","assets/jsonContext-1b802675.js","assets/saveAPIKeyUtils-3df6e7ec.js","assets/saveUtils-b083d8b6.js"]);switch(i){case ke.SAVE:return t(this,a);case ke.SAVE_AS:return n(this,e,a)}})}normalizeCtorArgs(s,i){return typeof s=="string"?{url:s,...i}:s}load(s){const i=s!=null?s.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},s).catch(gi).then(()=>this._fetchService(i))),Promise.resolve(this)}get legendEnabled(){return!this._isPreviewLayer&&(this._get("legendEnabled")??!0)}set legendEnabled(s){this._set("legendEnabled",s)}get listMode(){return this._isPreviewLayer?"hide":this._get("listMode")}set listMode(s){this._set("listMode",s)}writeOperationalLayerType(s,i,a){var t;const e=((t=this.renderer)==null?void 0:t.type)==="vector-field";i[a]=e?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}get _isPreviewLayer(){var s;return!(!this.raster||!((s=this.url)!=null&&s.toLowerCase().includes("/rasterrendering/imageserver")))}createPopupTemplate(s){var p;const i=this.rasterFields,a=this.title,e=new Set;let t=!1,n=!1;this.capabilities&&(t=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,n=this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir");const o=new Set;t&&o.add("raster.itempixelvalue");for(const m of i){const c=m.name.toLowerCase();o.has(c)||c.includes("raster.servicepixelvalue.")||e.add(m.name)}n&&e.add("raster.magnitude").add("raster.direction");const u=fi({fields:i,title:a},{...s,visibleFieldNames:e});return u!=null&&u.fieldInfos&&((p=this.rasterInfo)!=null&&p.pixelType.startsWith("f"))&&u.fieldInfos.forEach(({format:m,fieldName:c})=>{m&&c&&/^raster\.(item|service)pixelvalue/i.test(c)&&(m.places=2)}),u}queryFeatures(s,i){return this.queryRasters(s,i).then(a=>{if(a!=null&&a.features)for(const e of a.features)e.layer=e.sourceLayer=this;return a})}queryFeatureCount(s,i){return this.queryRasterCount(s,i)}redraw(){this.emit("redraw")}async save(s){return this._debouncedSaveOperations(ke.SAVE,s)}async saveAs(s,i){return this._debouncedSaveOperations(ke.SAVE_AS,i,s)}serviceSupportsSpatialReference(s){return wi(this,s)}write(s,i){if(!this._isPreviewLayer)return super.write(s,i);if(i!=null&&i.messages){const a=`${i.origin}/${i.layerContainerType||"operational-layers"}`;i.messages.push(new x("layer:unsupported",`Imagery preview layer (${this.title}, ${this.id}) of type '${this.declaredClass}' are not supported in the context of '${a}'`,{layer:this}))}return null}};r([l(Ri)],Q.prototype,"legendEnabled",null),r([l({type:["show","hide"]})],Q.prototype,"listMode",null),r([l({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Q.prototype,"isReference",void 0),r([l({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Q.prototype,"operationalLayerType",void 0),r([j("web-map","operationalLayerType")],Q.prototype,"writeOperationalLayerType",null),r([l(vi)],Q.prototype,"popupEnabled",void 0),r([l({type:bi,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Q.prototype,"popupTemplate",void 0),r([l({readOnly:!0})],Q.prototype,"defaultPopupTemplate",null),r([l({readOnly:!0,json:{read:!1}})],Q.prototype,"type",void 0),r([l({readOnly:!0})],Q.prototype,"_isPreviewLayer",null),Q=r([v("esri.layers.ImageryLayer")],Q);const Xs=Q;export{Xs as default};

import{bx as W,by as j,bz as A,bA as B,bB as C,bC as D,bD as E,bE as G,a7 as F,bF as L}from"./index-5bdaa4d1.js";import{r as k}from"./vec3f32-ad1dc57f.js";import{n as q,h as H}from"./WGLContainer-ce0f5abc.js";import{E as J}from"./Container-63c8a627.js";class V extends q{constructor(){super(...arguments),this._viewStateId=-1,this._dvsMat3=W()}get dvsMat3(){return this._dvsMat3}beforeRender(e){this._updateMatrices(e),this._updateOverlays(e,this.children);for(const s of this.children)s.beforeRender(e)}prepareRenderPasses(e){const s=e.registerRenderPass({name:"overlay",brushes:[H.overlay],target:()=>this.children,drawPhase:J.MAP});return[...super.prepareRenderPasses(e),s]}_updateMatrices(e){const{state:s}=e,{id:a,size:d,pixelRatio:r,resolution:h,rotation:l,viewpoint:u,displayMat3:b}=s;if(this._viewStateId===a)return;const p=Math.PI/180*l,i=r*d[0],n=r*d[1];this._localOrigin=u.targetGeometry.clone();const{x:c,y:_}=this._localOrigin,M=j(c,s.spatialReference);this._localOrigin.x=M,this._localOrigin.y=_;const v=h*i,m=h*n,t=A(this._dvsMat3);B(t,t,b),C(t,t,D(i/2,n/2)),E(t,t,k(i/v,-n/m,1)),G(t,t,-p),this._viewStateId=a}_updateOverlays(e,s){const{state:a}=e,{rotation:d,spatialReference:r,worldScreenWidth:h,size:l,viewpoint:u}=a,b=this._localOrigin;let p,i=0;const n=F(r);if(n&&r.isWrappable){const c=l[0],_=l[1],M=180/Math.PI*d,v=Math.abs(Math.cos(M)),m=Math.abs(Math.sin(M)),t=Math.round(c*v+_*m),[x,R]=n.valid,o=L(r),{x:O,y:I}=u.targetGeometry,S=[O,I],g=[0,0];a.toScreen(g,S);const f=[0,0];let y;y=t>h?.5*h:.5*t;const P=Math.floor((O+.5*o)/o),$=x+P*o,z=R+P*o,w=[g[0]+y,0];a.toMap(f,w),f[0]>z&&(i=o),w[0]=g[0]-y,a.toMap(f,w),f[0]<$&&(i=-o),p={worldWidth:o,xBounds:[x,R]}}for(const c of s)c.updateDrawCoords(b,i,r,p)}}export{V as f};

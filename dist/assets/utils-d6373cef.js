import{ct as j,am as z,aF as G,cu as A,cv as O,cw as E,cx as V,cy as B,cz as D,bC as L,cA as P,cB as R}from"./index-09dc31eb.js";import{m as T,B as U}from"./utils-1b68b2ca.js";let m=null;const Y=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function Z(t,e,o){return t.x<0?t.x+=e:t.x>o&&(t.x-=e),t}function k(t,e,o,r){const a=j(o)?z(o):null,c=a?Math.round((a.valid[1]-a.valid[0])/e.scale[0]):null;return t.map(i=>{const s=new G(i.geometry);return A(e,s,s),i.geometry=a?Z(s,c??0,r[0]):s,i})}function q(t,e=18,o,r,a){const c=new Float64Array(r*a);e=Math.round(P(e));let i=Number.POSITIVE_INFINITY,s=Number.NEGATIVE_INFINITY;const g=R(o);for(const{geometry:h,attributes:N}of t){const{x:$,y:u}=h,w=Math.max(0,$-e),M=Math.max(0,u-e),F=Math.min(a,u+e),y=Math.min(r,$+e),x=+g(N);for(let f=M;f<F;f++)for(let d=w;d<y;d++){const b=f*r+d,I=O(d-$,f-u,e)*x,l=c[b]+=I;i=Math.min(i,l),s=Math.max(s,l)}}return{min:i,max:s}}function _(t){const e=Y.exec(t);if(!e)return null;const{hh:o,mm:r,ss:a,ms:c}=e.groups;return Number(o)*E.hours+Number(r)*E.minutes+Number(a)*E.seconds+Number(c||0)}async function H(t,e,o=!0){if(!e)return[];const{field:r,field2:a,field3:c,fieldDelimiter:i,fieldInfos:s,timeZone:g}=t,h=r&&(s==null?void 0:s.find(l=>l.name.toLowerCase()===r.toLowerCase())),N=!!h&&V(h),$=!!h&&B(h),u=t.valueExpression,w=t.normalizationType,M=t.normalizationField,F=t.normalizationTotal,y=[],x=t.viewInfoParams;let f=null,d=null;if(u){if(!m){const{arcadeUtils:l}=await D();m=l}m.hasGeometryOperations(u)&&await m.enableGeometryOperations(),f=m.createFunction(u),d=x?m.getViewInfo({viewingMode:x.viewingMode,scale:x.scale,spatialReference:new L(x.spatialReference)}):null}const b=t.fieldInfos,I=!(e[0]&&"declaredClass"in e[0]&&e[0].declaredClass==="esri.Graphic")&&b?{fields:b}:null;return e.forEach(l=>{const p=l.attributes;let n;if(u){const v=I?{...l,layer:I}:l,C=m.createExecContext(v,d,g);n=m.executeFunction(f,C)}else p&&(n=p[r],a?(n=`${T(n)}${i}${T(p[a])}`,c&&(n=`${n}${i}${T(p[c])}`)):typeof n=="string"&&o&&($?n=n?new Date(n).getTime():null:N&&(n=n?_(n):null)));if(w&&typeof n=="number"&&isFinite(n)){const v=p&&parseFloat(p[M]);n=U(n,w,v,F)}y.push(n)}),y}export{_ as I,H as b,q as w,k as x};

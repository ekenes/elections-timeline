import{aT as p,aU as d,S as u,aV as y,$ as c,r as t,q as o,aW as a,aX as m,C as r,aY as h,aZ as w,a_ as v,a$ as f,w as b}from"./index-c2b82012.js";import{d as n}from"./queryUtils-4b8111ed.js";import{y as g,c as S,d as j,m as $,a as R}from"./FixedIntervalBinParameters-9c7f7298.js";import"./json-48e3ea08.js";const T=new p({asc:"ascending",desc:"descending"}),B={base:g,key:"type",typeMap:{"auto-interval":S,date:j,"fixed-boundaries":$,"fixed-interval":R}};let e=class extends d.ClonableMixin(u){constructor(i){super(i),this.binParameters=null,this.binOrder="ascending",this.cacheHint=void 0,this.datumTransformation=null,this.defaultSpatialReference=null,this.distance=void 0,this.geometry=null,this.lowerBoundaryAlias=null,this.outSpatialReference=null,this.outStatistics=null,this.returnDistinctValues=null,this.spatialRelationship="intersects",this.upperBoundaryAlias=null,this.units=null,this.where="1=1"}set outTimeZone(i){this._set("outTimeZone",i),i&&!y(i)&&c.getLogger(this).warn("#outTimeZone",`the parsed value '${i}' may not be a valid IANA time zone`)}};t([o({types:B,json:{name:"bin",write:!0}})],e.prototype,"binParameters",void 0),t([a(T)],e.prototype,"binOrder",void 0),t([o({type:Boolean,json:{write:!0}})],e.prototype,"cacheHint",void 0),t([o({json:{write:!0}})],e.prototype,"datumTransformation",void 0),t([o({type:r,json:{name:"defaultSR",write:!0}})],e.prototype,"defaultSpatialReference",void 0),t([o({type:Number,json:{write:{overridePolicy:i=>({enabled:i>0})}}})],e.prototype,"distance",void 0),t([o({types:h,json:{read:w,write:!0}})],e.prototype,"geometry",void 0),t([o({type:String,json:{write:!0}})],e.prototype,"lowerBoundaryAlias",void 0),t([o({type:r,json:{name:"outSR",write:!0}})],e.prototype,"outSpatialReference",void 0),t([o({type:[v],json:{write:{enabled:!0,overridePolicy(){return{enabled:this.outStatistics!=null&&this.outStatistics.length>0}}}}})],e.prototype,"outStatistics",void 0),t([o({value:null,json:{name:"outTimeReference",read:{reader:i=>i.ianaTimeZone},write:{writer:(i,s,l)=>{i&&(s[l]={ianaTimeZone:i})}}}})],e.prototype,"outTimeZone",null),t([o({type:Boolean,json:{write:!0}})],e.prototype,"returnDistinctValues",void 0),t([a(f,{name:"spatialRel"})],e.prototype,"spatialRelationship",void 0),t([o({type:String,json:{write:!0}})],e.prototype,"upperBoundaryAlias",void 0),t([o({type:String,json:{read:n.read,write:{writer:n.write,overridePolicy(i){return{enabled:i!=null&&this.distance!=null&&this.distance>0}}}}})],e.prototype,"units",void 0),t([o({type:String,json:{write:!0}})],e.prototype,"where",void 0),e=t([b("esri.rest.support.AttributeBinsQuery")],e);const V=e;e.from=m(e);export{V as default};

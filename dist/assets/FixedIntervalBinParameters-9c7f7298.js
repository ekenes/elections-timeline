import{aU as g,S as x,r,aX as c,q as i,w as u,aT as D,aW as m,lC as A,$ as M,fl as v}from"./index-c2b82012.js";let a=class extends g.ClonableMixin(x){constructor(e){super(e),this.alias=null,this.expression=null,this.field=null,this.responseType=null}};r([i({type:String,json:{write:!0}})],a.prototype,"alias",void 0),r([i({type:String,json:{write:!0}})],a.prototype,"expression",void 0),r([i({type:String,json:{write:!0}})],a.prototype,"field",void 0),r([i({type:String,json:{write:!0}})],a.prototype,"responseType",void 0),a=r([u("esri.rest.support.BinParametersAttributes")],a);const B=a;a.from=c(a);const O=new D({naturalLog:"natural-log",squareRoot:"square-root"});let s=class extends g.ClonableMixin(x){constructor(e){super(e),this.expression=null,this.field=null,this.firstDayOfWeek=null,this.hideUpperBound=null,this.splitByAttributes=null,this.stackByAttributes=null,this.transformation=null}};r([i({type:String,json:{write:!0}})],s.prototype,"expression",void 0),r([i({type:String,json:{name:"onField",write:!0}})],s.prototype,"field",void 0),r([i({type:String,json:{write:!0}})],s.prototype,"firstDayOfWeek",void 0),r([i({type:String,json:{write:!0}})],s.prototype,"hideUpperBound",void 0),r([i({type:B,json:{write:{target:{splitBy:{type:String},splitByField:{type:String},splitByAlias:{type:String}},writer:(t,e)=>{t.field!=null&&(e.splitByField=t.field),t.expression!=null&&(e.splitBy=t.expression),t.alias!=null&&(e.splitByAlias=t.alias)}},read:{source:["splitBy","splitByField","splitByAlias"],reader:(t,e)=>new B({field:e.splitByField,expression:e.splitBy,alias:e.splitByAlias})}}})],s.prototype,"splitByAttributes",void 0),r([i({type:B,json:{write:{target:{stackBy:{type:String},stackByField:{type:String},stackByAlias:{type:String},jsonStyle:{type:String}},writer:(t,e)=>{t.field!=null&&(e.stackByField=t.field),t.expression!=null&&(e.stackBy=t.expression),t.alias!=null&&(e.stackByAlias=t.alias),t.responseType!=null&&(e.jsonStyle=t.responseType)},overridePolicy(){var t,e;return{enabled:((t=this.stackByAttributes)==null?void 0:t.field)!=null||((e=this.stackByAttributes)==null?void 0:e.expression)!=null}}},read:{source:["stackBy","stackByField","stackByAlias","jsonStyle"],reader:(t,e)=>new B({field:e.stackByField,expression:e.stackBy,alias:e.stackByAlias,responseType:e.jsonStyle})}}})],s.prototype,"stackByAttributes",void 0),r([m(O)],s.prototype,"transformation",void 0),s=r([u("esri.rest.support.BinParametersBase")],s);const w=s,P=A()({naturalLog:"natural-log",squareRoot:"square-root",percentOfTotal:"percent-of-total",log:"log",field:"field"}),j="percent-of-total",b="field",F=t=>{let e=class extends t{constructor(){super(...arguments),this.normalizationField=null,this.normalizationMaxValue=null,this.normalizationMinValue=null,this.normalizationTotal=null}get normalizationType(){let n=this._get("normalizationType");const f=!!this.normalizationField,h=this.normalizationTotal!=null;return f||h?(n=f&&b||h&&j||null,f&&h&&M.getLogger(this).warn("warning: both normalizationField and normalizationTotal are set!")):n!==b&&n!==j||(n=null),n}set normalizationType(n){this._set("normalizationType",n)}};return r([i({type:String,json:{name:"parameters.normalizationField",write:!0}})],e.prototype,"normalizationField",void 0),r([i({type:Number,json:{name:"parameters.normalizationMaxValue",write:!0}})],e.prototype,"normalizationMaxValue",void 0),r([i({type:Number,json:{name:"parameters.normalizationMinValue",write:!0}})],e.prototype,"normalizationMinValue",void 0),r([i({type:Number,json:{name:"parameters.normalizationTotal",write:!0}})],e.prototype,"normalizationTotal",void 0),r([m(P,{name:"parameters.normalizationType"})],e.prototype,"normalizationType",null),e=r([u("esri.rest.support.NormalizationBinParametersMixin")],e),e};function z(t,e,n){v(n,t instanceof Date?t.getTime():t,e)}let l=class extends F(w){constructor(e){super(e),this.numBins=null,this.end=null,this.start=null,this.type="auto-interval"}};r([i({type:Number,json:{name:"parameters.numberOfBins",write:!0}})],l.prototype,"numBins",void 0),r([i({json:{name:"parameters.end",write:{writer:z}}})],l.prototype,"end",void 0),r([i({json:{name:"parameters.start",write:{writer:z}}})],l.prototype,"start",void 0),r([m({autoIntervalBin:"auto-interval"},{readOnly:!0})],l.prototype,"type",void 0),l=r([u("esri.rest.support.AutoIntervalBinParameters")],l);const W=l;l.from=c(l);const q=A()({year:"years",quarter:"quarters",month:"months",week:"weeks",day:"days",hour:"hours",minute:"minutes",second:"seconds"});let y=class extends g.ClonableMixin(x){constructor(e){super(e),this.value=null,this.unit=null}};r([i({type:Number,json:{name:"number",write:!0}})],y.prototype,"value",void 0),r([m(q)],y.prototype,"unit",void 0),y=r([u("esri.rest.support.DateBinTimeInterval")],y);const T=y;y.from=c(y);function S(t,e,n){v(n,typeof t=="string"?t:t==null?void 0:t.getTime(),e)}function k(t,e){const n=t.parameters[e];return n?typeof n=="string"?n:new Date(n):null}let o=class extends w{constructor(e){super(e),this.end=null,this.interval=null,this.offset=null,this.start=null,this.type="date"}};r([i({cast:t=>t?typeof t=="string"?t:new Date(t):null,json:{name:"parameters.end",read:{reader:(t,e)=>k(e,"end")},write:{writer:S}}})],o.prototype,"end",void 0),r([i({type:T,json:{name:"parameters",write:!0}})],o.prototype,"interval",void 0),r([i({type:T,json:{name:"parameters.offset",write:!0}})],o.prototype,"offset",void 0),r([i({cast:t=>t?typeof t=="string"?t:new Date(t):null,json:{name:"parameters.start",read:{reader:(t,e)=>k(e,"start")},write:{writer:S}}})],o.prototype,"start",void 0),r([m({dateBin:"date"},{readOnly:!0})],o.prototype,"type",void 0),o=r([u("esri.rest.support.DateBinParameters")],o);const X=o;o.from=c(o);function N(t){return t[0]instanceof Date}function V(t,e,n){v(n,t&&N(t)?t.map(f=>f.getTime()):t,e)}let d=class extends w{constructor(e){super(e),this.boundaries=[],this.type="fixed-boundaries"}};r([i({json:{name:"parameters.boundaries",write:{writer:V}}})],d.prototype,"boundaries",void 0),r([m({fixedBoundariesBin:"fixed-boundaries"},{readOnly:!0})],d.prototype,"type",void 0),d=r([u("esri.rest.support.FixedBoundariesBinParameters")],d);const G=d;d.from=c(d);function $(t,e,n){v(n,t instanceof Date?t.getTime():t,e)}let p=class extends F(w){constructor(t){super(t),this.end=null,this.interval=null,this.start=null,this.type="fixed-interval"}};r([i({json:{name:"parameters.end",write:{writer:$}}})],p.prototype,"end",void 0),r([i({type:Number,json:{name:"parameters.interval",write:!0}})],p.prototype,"interval",void 0),r([i({json:{name:"parameters.start",write:{writer:$}}})],p.prototype,"start",void 0),r([m({fixedIntervalBin:"fixed-interval"},{readOnly:!0})],p.prototype,"type",void 0),p=r([u("esri.rest.support.FixedIntervalBinParameters")],p);const H=p;p.from=c(p);export{H as a,W as c,X as d,G as m,w as y};

import{s as Jt,$ as kt,r as w,kJ as oe,bI as ae}from"./index-02eff6e6.js";import{a as Y}from"./BindType-d21d71dd.js";import{s as ce}from"./Util-dd4663f8.js";import{r as ue}from"./Program-99848a7b.js";import{b as de}from"./LabelMetric-d84c9df1.js";var zt;(function(n){n[n.AnimatedMarker=0]="AnimatedMarker",n[n.Blend=1]="Blend",n[n.ComplexFill=2]="ComplexFill",n[n.ComplexOutlineFill=3]="ComplexOutlineFill",n[n.DotDensity=4]="DotDensity",n[n.Fill=5]="Fill",n[n.GradientFill=6]="GradientFill",n[n.GradientStroke=7]="GradientStroke",n[n.Grid=8]="Grid",n[n.Heatmap=9]="Heatmap",n[n.Label=10]="Label",n[n.Line=11]="Line",n[n.Magnifier=12]="Magnifier",n[n.Marker=13]="Marker",n[n.OutlineFill=14]="OutlineFill",n[n.Overlay=15]="Overlay",n[n.PatternFill=16]="PatternFill",n[n.PatternOutlineFill=17]="PatternOutlineFill",n[n.PieChart=18]="PieChart",n[n.Test=19]="Test",n[n.Text=20]="Text",n[n.TexturedLine=21]="TexturedLine",n[n.Bitmap=22]="Bitmap"})(zt||(zt={}));const he=()=>kt.getLogger("esri.views.3d.webgl-engine.core.shaderModules.shaderBuilder");let Qt=class{constructor(){this._includedModules=new Map}include(t,e){this._includedModules.has(t)?this._includedModules.get(t):(this._includedModules.set(t,e),t(this.builder,e))}},le=class extends Qt{constructor(){super(...arguments),this.vertex=new Gt,this.fragment=new Gt,this.attributes=new ye,this.varyings=new me,this.extensions=new lt,this.constants=new Yt}get fragmentUniforms(){return this.fragment.uniforms.entries}get builder(){return this}generate(t,e=!0){const r=this.extensions.generateSource(t),s=this.attributes.generateSource(t),i=this.varyings.generateSource(t),o=t==="vertex"?this.vertex:this.fragment,d=o.uniforms.generateSource(),u=o.code.generateSource(),c=t==="vertex"?be:ge(),h=this.constants.generateSource().concat(o.constants.generateSource());return`${e?"#version 300 es":""}
${r.join(`
`)}
${c}
${h.join(`
`)}
${d.join(`
`)}
${s.join(`
`)}
${i.join(`
`)}
${u.join(`
`)}`}generateBindPass(t){const e=new Map;this.vertex.uniforms.entries.forEach(i=>{const o=i.bind[Y.Pass];o&&e.set(i.name,o)}),this.fragment.uniforms.entries.forEach(i=>{const o=i.bind[Y.Pass];o&&e.set(i.name,o)});const r=Array.from(e.values()),s=r.length;return(i,o)=>{for(let d=0;d<s;++d)r[d](t,i,o)}}generateBindDraw(t){const e=new Map;this.vertex.uniforms.entries.forEach(i=>{const o=i.bind[Y.Draw];o&&e.set(i.name,o)}),this.fragment.uniforms.entries.forEach(i=>{const o=i.bind[Y.Draw];o&&e.set(i.name,o)});const r=Array.from(e.values()),s=r.length;return(i,o,d)=>{for(let u=0;u<s;++u)r[u](t,d,i,o)}}},pe=class{constructor(){this._entries=new Map}add(...t){for(const e of t)this._add(e)}get(t){return this._entries.get(t)}_add(t){if(t!=null){if(this._entries.has(t.name)&&!this._entries.get(t.name).equals(t))throw new Jt(`Duplicate uniform name ${t.name} for different uniform type`);this._entries.set(t.name,t)}else he().error(`Trying to add null Uniform from ${new Error().stack}.`)}generateSource(){return Array.from(this._entries.values()).map(t=>t.arraySize!=null?`uniform ${t.type} ${t.name}[${t.arraySize}];`:`uniform ${t.type} ${t.name};`)}get entries(){return Array.from(this._entries.values())}},fe=class{constructor(){this._entries=new Array}add(t){this._entries.push(t)}generateSource(){return this._entries}},Gt=class extends Qt{constructor(){super(...arguments),this.uniforms=new pe,this.code=new fe,this.constants=new Yt}get builder(){return this}},ye=class{constructor(){this._entries=new Array}add(t,e){this._entries.push([t,e])}generateSource(t){return t==="fragment"?[]:this._entries.map(e=>`in ${e[1]} ${e[0]};`)}},me=class{constructor(){this._entries=new Map}add(t,e){this._entries.has(t)&&ce(this._entries.get(t)===e),this._entries.set(t,e)}generateSource(t){const e=new Array;return this._entries.forEach((r,s)=>e.push(t==="vertex"?`out ${r} ${s};`:`in ${r} ${s};`)),e}},lt=class pt{constructor(){this._entries=new Set}add(t){this._entries.add(t)}generateSource(t){const e=t==="vertex"?pt.ALLOWLIST_VERTEX:pt.ALLOWLIST_FRAGMENT;return Array.from(this._entries).filter(r=>e.includes(r)).map(r=>`#extension ${r} : enable`)}};lt.ALLOWLIST_FRAGMENT=["GL_EXT_shader_texture_lod","GL_OES_standard_derivatives"],lt.ALLOWLIST_VERTEX=[];let Yt=class y{constructor(){this._entries=new Set}add(t,e,r){let s="ERROR_CONSTRUCTOR_STRING";switch(e){case"float":s=y._numberToFloatStr(r);break;case"int":s=y._numberToIntStr(r);break;case"bool":s=r.toString();break;case"vec2":s=`vec2(${y._numberToFloatStr(r[0])},                            ${y._numberToFloatStr(r[1])})`;break;case"vec3":s=`vec3(${y._numberToFloatStr(r[0])},                            ${y._numberToFloatStr(r[1])},                            ${y._numberToFloatStr(r[2])})`;break;case"vec4":s=`vec4(${y._numberToFloatStr(r[0])},                            ${y._numberToFloatStr(r[1])},                            ${y._numberToFloatStr(r[2])},                            ${y._numberToFloatStr(r[3])})`;break;case"ivec2":s=`ivec2(${y._numberToIntStr(r[0])},                             ${y._numberToIntStr(r[1])})`;break;case"ivec3":s=`ivec3(${y._numberToIntStr(r[0])},                             ${y._numberToIntStr(r[1])},                             ${y._numberToIntStr(r[2])})`;break;case"ivec4":s=`ivec4(${y._numberToIntStr(r[0])},                             ${y._numberToIntStr(r[1])},                             ${y._numberToIntStr(r[2])},                             ${y._numberToIntStr(r[3])})`;break;case"mat2":case"mat3":case"mat4":s=`${e}(${Array.prototype.map.call(r,i=>y._numberToFloatStr(i)).join(", ")})`}return this._entries.add(`const ${e} ${t} = ${s};`),this}static _numberToIntStr(t){return t.toFixed(0)}static _numberToFloatStr(t){return Number.isInteger(t)?t.toFixed(1):t.toString()}generateSource(){return Array.from(this._entries)}};function ge(){return`#ifdef GL_FRAGMENT_PRECISION_HIGH
  precision highp float;
  precision highp sampler2D;
#else
  precision mediump float;
  precision mediump sampler2D;
#endif
`}const be=`precision highp float;
precision highp sampler2D;`;function we(n){return n.split(" ").map((t,e)=>e>0?t.charAt(0).toUpperCase()+t.slice(1):t).join("")}function $e(n,t){const e=[];for(e.push(t);e.length;){const r=e.pop();if(typeof r=="object"&&!n.has(r.uid)){n.add(r.uid);for(const s of r.children)e.push(s)}}}let M=class ft{constructor(){this.uid=ft.NodeCount++,this._debugName=null,this._isMutable=!1,this.isImplicit=!1}get isMutable(){return this._isMutable}setMutable(){return this._isMutable=!0,this}setDebugName(t){return t=we(t),this._debugName=t,this.isImplicit&&this.children[0]instanceof ft&&this.children[0].setDebugName(t),this}get debugInfo(){return{name:this._debugName??""}}cloneInto(t){t._debugName=this._debugName,t._isMutable=this._isMutable,t.isImplicit=this.isImplicit,t.uid=this.uid}};function a(n){return typeof n=="object"?n.clone():n}M.NodeCount=0;let m=class extends M{constructor(){super(...arguments),this.shaderType="primitive-node"}},ve=class Zt extends M{constructor(t){super(),this.child=t,this.shaderType="scope-node"}get children(){return[this.child]}clone(){const t=new Zt(a(this.child));return this.cloneInto(t),t}};class Ct extends M{constructor(t,e,r){super(),this.property=t,this.target=e,this.returnType=r,this.shaderType="property-access-node"}get children(){const t=[this.target];return typeof this.property!="string"&&t.push(this.property),t}clone(){const t=new Ct(this.property,a(this.target),this.returnType);return this.cloneInto(t),t}}class Et extends M{constructor(t,e,r,s){super(),this.x=t,this.y=e,this.target=r,this.returnType=s,this.shaderType="property-access-2d-node"}get children(){return[this.target,this.x,this.y]}clone(){const t=new Et(this.x,this.y,a(this.target),this.returnType);return this.cloneInto(t),t}}class Pt extends M{constructor(t,e,r){super(),this.condition=t,this.ifTrue=e,this.ifFalse=r,this.shaderType="condition-node"}get children(){return[this.condition,this.ifTrue,this.ifFalse]}clone(){const t=a(this.ifTrue),e=this.ifFalse?a(this.ifFalse):null,r=new Pt(this.condition,t,e);return this.cloneInto(r),r}}let _e=class Wt extends M{constructor(t,e,r,s){super(),this.captureList=t,this.returnType=e,this.generator=s,this.shaderType="block-node",r&&(this.subgraph=new ve(r))}get children(){return Object.keys(this.captureList).map(t=>this.captureList[t]).concat(this.subgraph??[])}clone(){const t={};for(const r in this.captureList)t[r]=a(this.captureList[r]);const e=new Wt(t,this.returnType,this.subgraph?a(this.subgraph.child):this.subgraph,this.generator);return this.cloneInto(e),e}},C=class te extends M{constructor(t,e,r,s,i,o=!1){super(),this.token=t,this._children=e,this.isInfix=r,this.isPropertyAccess=s,this.returnType=i,this.isTernary=o,this.shaderType="function-node"}get children(){return this._children}clone(){const t=new te(this.token,this._children.map(a),this.isInfix,this.isPropertyAccess,this.returnType,this.isTernary);return this.cloneInto(t),t}};var z,yt,mt,gt,bt,wt,$t,vt,_t,xt,It,Tt,St,Nt;function xe(n){switch(n.type){case"bool":case"bvec2":case"bvec3":case"bvec4":return x;case"float":case"vec2":case"vec3":case"vec4":return l;case"int":case"ivec2":case"ivec3":case"ivec4":return f;case"uint":case"uvec2":case"uvec3":case"uvec4":return R;default:throw new Error("Unable to handle type")}}function Ie(n){const t=[["float","vec2","vec3","vec4"],["int","ivec2","ivec3","ivec4"],["uint","uvec2","uvec3","uvec4"],["bool","bvec2","bvec3","bvec4"]];for(const e of t)if(e.includes(n))return e.map(r=>Ne[r]);throw new Error("Unable to find type family")}function ee(n){return new Proxy(n,{get(t,e){if(e==="constructor")return new Proxy(t.constructor,{construct:(r,s,i)=>ee(new r(...s))});if(e in t)return t[e];if(typeof e=="string"){const r=Ie(n.type);return _(n,e,r[e.length-1])}}})}function T(n){return new Proxy(n,{construct:(t,e,r)=>ee(new t(...e))})}function Te(n){return new Proxy(n,{get(t,e){if(e in t)return t[e];if(typeof e=="string"){const r=parseInt(e,10);if(!isNaN(r))return _(n,`[${r}]`,n.elementType.constructor)}}})}function Se(n){return new Proxy(n,{construct:(t,e,r)=>Te(new t(...e))})}let Ft=class extends Error{},Z=z=class extends m{constructor(n,t){super(),this.elementType=n,this.size=t,this.children=[],this.type="array"}clone(){const n=new z(this.elementType,this.size);return super.cloneInto(n),n}get(n,t){const e=new f(n),r=t!=null?new f(t):null;return r!=null?ht(this,e,r,xe(this.elementType.constructor)):_(this,e,this.elementType.constructor)}last(){return this.get(this.size-1)}first(){return this.get(0)}findIndex(n,t,e){return ke(this,n,t,e)}glslFindIndex(n,t,e){return Ce(this,n,t,e)}static ofType(n,t){const e={construct:(r,s)=>new z(new n,t)};return new Proxy(z,e)}};Z.type="array",Z=z=w([Se],Z);class dt extends m{constructor(t,e,r,s=!1){super(),this.elementType=t,this.xSize=e,this.ySize=r,this.isRowMajor=s,this.children=[],this.type="array-2d"}clone(){const t=new dt(this.elementType,this.xSize,this.ySize,this.isRowMajor);return super.cloneInto(t),t}get size(){return this.xSize*this.ySize}get(t,e){return this.isRowMajor?this._getRowMajor(t,e):this._getColumnMajor(t,e)}_getColumnMajor(t,e){const r=new f(t);return _(this,new f(e).add(r.multiply(this.xSize)),this.elementType.constructor)}_getRowMajor(t,e){const r=new f(t),s=new f(e);return _(this,r.add(s.multiply(this.ySize)),this.elementType.constructor)}static ofType(t,e,r,s=!1){return new Proxy(Z,{construct:(i,o)=>new dt(new t,e,r,s)})}}dt.type="array-2d";class Ut extends m{constructor(){super(...arguments),this.type="sampler2D",this.children=[]}clone(){const t=new Ut;return t.children=this.children.map(a),super.cloneInto(t),t}}Ut.type="sampler2D";let l=class U extends m{constructor(t){super(),this.type="float",this.children=[t]}clone(){const t=new U(a(this.children[0]));return super.cloneInto(t),t}multiply(t){return N(this,typeof t=="number"?g(t,U):t)}divide(t){return q(this,typeof t=="number"?g(t,U):t)}add(t){return A(this,typeof t=="number"?g(t,U):t)}subtract(t){return X(this,typeof t=="number"?g(t,U):t)}};l.type="float";let K=yt=class extends m{constructor(n,t){super(),this.type="vec2",this.children=[n,t].filter(e=>e!=null)}clone(){const n=new yt(a(this.children[0]),a(this.children[1]));return super.cloneInto(n),n}get 0(){return _(this,"[0]",l)}get 1(){return _(this,"[1]",l)}get 2(){throw new Ft}get 3(){throw new Ft}multiply(n){return N(this,typeof n=="number"?g(n,l):n)}divide(n){return q(this,typeof n=="number"?g(n,l):n)}add(n){return A(this,typeof n=="number"?g(n,l):n)}subtract(n){return X(this,typeof n=="number"?g(n,l):n)}};K.type="vec2",K=yt=w([T],K);let G=mt=class extends m{constructor(n,t,e){super(),this.type="vec3",this.children=[n,t,e].filter(r=>r!=null)}get 0(){return _(this,"[0]",l)}get 1(){return _(this,"[1]",l)}get 2(){return _(this,"[2]",l)}get 3(){throw new Ft}clone(){const n=new mt(a(this.children[0]),a(this.children[1]),a(this.children[2]));return super.cloneInto(n),n}multiply(n){return N(this,typeof n=="number"?g(n,l):n)}divide(n){return q(this,typeof n=="number"?g(n,l):n)}add(n){return A(this,typeof n=="number"?g(n,l):n)}subtract(n){return X(this,typeof n=="number"?g(n,l):n)}};G.type="vec3",G=mt=w([T],G);let E=gt=class extends m{constructor(n,t,e,r){super(),this.type="vec4",this.children=[n,t,e,r].filter(s=>s!=null)}clone(){const n=new gt(a(this.children[0]),a(this.children[1]),a(this.children[2]),a(this.children[3]));return super.cloneInto(n),n}get 0(){return _(this,"[0]",l)}get 1(){return _(this,"[1]",l)}get 2(){return _(this,"[2]",l)}get 3(){return _(this,"[3]",l)}multiply(n){return N(this,typeof n=="number"?g(n,l):n)}divide(n){return q(this,typeof n=="number"?g(n,l):n)}add(n){return A(this,typeof n=="number"?g(n,l):n)}subtract(n){return X(this,typeof n=="number"?g(n,l):n)}};E.type="vec4",E=gt=w([T],E);let R=bt=class extends m{constructor(n){super(),this.type="uint",this.children=[n]}clone(){const n=new bt(a(this.children[0]));return super.cloneInto(n),n}};R.type="uint",R=bt=w([T],R);let W=wt=class extends m{constructor(n,t){super(),this.type="uvec2",this.children=[n,t].filter(e=>e!=null)}clone(){const n=new wt(a(this.children[0]),a(this.children[1]));return super.cloneInto(n),n}};W.type="uvec2",W=wt=w([T],W);let tt=$t=class extends m{constructor(n,t,e){super(),this.type="uvec3",this.children=[n,t,e].filter(r=>r!=null)}clone(){const n=new $t(a(this.children[0]),a(this.children[1]),a(this.children[2]));return super.cloneInto(n),n}};tt.type="uvec3",tt=$t=w([T],tt);let et=vt=class extends m{constructor(n,t,e,r){super(),this.type="uvec4",this.children=[n,t,e,r].filter(s=>s!=null)}clone(){const n=new vt(a(this.children[0]),a(this.children[1]),a(this.children[2]),a(this.children[3]));return super.cloneInto(n),n}};et.type="uvec4",et=vt=w([T],et);class x extends m{constructor(t){super(),this.type="bool",this.children=[t]}and(t){return Ke(this,t)}or(t){return Pe(this,t)}clone(){const t=new x(a(this.children[0]));return super.cloneInto(t),t}}x.type="bool";let nt=_t=class extends m{constructor(n,t){super(),this.type="bvec2",this.children=[n,t].filter(e=>e!=null)}all(){return At(this)}any(){return Lt(this)}clone(){const n=new _t(a(this.children[0]),a(this.children[1]));return super.cloneInto(n),n}};nt.type="bvec2",nt=_t=w([T],nt);let rt=xt=class extends m{constructor(n,t,e){super(),this.type="bvec3",this.children=[n,t,e].filter(r=>r!=null)}all(){return At(this)}any(){return Lt(this)}clone(){const n=new xt(a(this.children[0]),a(this.children[1]),a(this.children[2]));return super.cloneInto(n),n}};function g(n,t){return typeof n=="number"?new t(n):n}rt.type="bvec3",rt=xt=w([T],rt);let st=It=class extends m{constructor(n,t,e,r){super(),this.type="bvec4",this.children=[n,t,e,r].filter(s=>s!=null)}all(){return At(this)}any(){return Lt(this)}clone(){const n=new It(a(this.children[0]),a(this.children[1]),a(this.children[2]),a(this.children[3]));return super.cloneInto(n),n}};st.type="bvec4",st=It=w([T],st);class f extends m{constructor(t){super(),this.type="int",this.children=[t]}multiply(t){return N(this,g(t,f))}add(t){return A(this,g(t,f))}subtract(t){return X(this,g(t,f))}divide(t){return q(this,g(t,f))}clone(){const t=new f(a(this.children[0]));return super.cloneInto(t),t}}f.type="int";let it=Tt=class extends m{constructor(n,t){super(),this.type="ivec2",this.children=[n,t].filter(e=>e!=null)}clone(){const n=new Tt(a(this.children[0]),a(this.children[1]));return super.cloneInto(n),n}};it.type="ivec2",it=Tt=w([T],it);let ot=St=class extends m{constructor(n,t,e){super(),this.type="ivec3",this.children=[n,t,e].filter(r=>r!=null)}clone(){const n=new St(a(this.children[0]),a(this.children[1]),a(this.children[2]));return super.cloneInto(n),n}};ot.type="ivec3",ot=St=w([T],ot);let at=Nt=class extends m{constructor(n,t,e,r){super(),this.type="ivec4",this.children=[n,t,e,r].filter(s=>s!=null)}clone(){const n=new Nt(a(this.children[0]),a(this.children[1]),a(this.children[2]),a(this.children[3]));return super.cloneInto(n),n}};at.type="ivec4",at=Nt=w([T],at);class Kt extends m{constructor(t,e,r,s){super(),this.type="mat2",this.children=[t,e,r,s]}clone(){const t=new Kt(a(this.children[0]),a(this.children[1]),a(this.children[2]),a(this.children[3]));return super.cloneInto(t),t}get(t,e){return ht(this,new f(t),new f(e),l)}multiply(t){return N(this,t)}}Kt.type="mat2";class O extends m{static identity(){return new O(1,0,0,0,1,0,0,0,1)}static fromRotation(t){const e=Le(t),r=Ae(t);return new O(r,e,0,Me(e),r,0,0,0,1)}constructor(t,e,r,s,i,o,d,u,c){super(),this.type="mat3",this.children=[t,e,r,s,i,o,d,u,c]}add(t){return A(this,t)}multiply(t){return N(this,t)}get(t,e){return ht(this,new f(t),new f(e),l)}clone(){const t=new O(a(this.children[0]),a(this.children[1]),a(this.children[2]),a(this.children[3]),a(this.children[4]),a(this.children[5]),a(this.children[6]),a(this.children[7]),a(this.children[8]));return super.cloneInto(t),t}}O.type="mat3";class H extends m{static identity(){return new H(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)}constructor(t,e,r,s,i,o,d,u,c,h,p,$,k,L,j,Q){super(),this.type="mat4",this.children=[t,e,r,s,i,o,d,u,c,h,p,$,k,L,j,Q]}static fromColumns(t,e,r,s){return new H(t.x,t.y,t.z,t.w,e.x,e.y,e.z,e.w,r.x,r.y,r.z,r.w,s.x,s.y,s.z,s.w)}multiply(t){return N(this,t)}get(t,e){return ht(this,new f(t),new f(e),l)}clone(){const t=new H(a(this.children[0]),a(this.children[1]),a(this.children[2]),a(this.children[3]),a(this.children[4]),a(this.children[5]),a(this.children[6]),a(this.children[7]),a(this.children[8]),a(this.children[9]),a(this.children[10]),a(this.children[11]),a(this.children[12]),a(this.children[13]),a(this.children[14]),a(this.children[15]));return super.cloneInto(t),t}}H.type="mat4";const Ne={float:l,vec2:K,vec3:G,vec4:E,int:f,ivec2:it,ivec3:ot,ivec4:at,uint:R,uvec2:W,uvec3:tt,uvec4:et,bool:x,bvec2:nt,bvec3:rt,bvec4:st},tn=(...n)=>new f(...n),Fe=(...n)=>new l(...n),en=(...n)=>new K(...n),nn=(...n)=>new G(...n),rn=(...n)=>new E(...n),sn=(...n)=>new O(...n);function _(n,t,e){const r=new e(new Ct(t,n,e));return r.isImplicit=!0,r}function ht(n,t,e,r){const s=new r(new Et(t,e,n,r));return s.isImplicit=!0,s}function I(n,t,e,r=null){if(r){const i=new r,o=new r(new C(n,[t,e],!0,!1,i));return o.isImplicit=!0,o}if(t.type==="float"||t.type==="int"){const i=new e.constructor(new C(n,[t,e],!0,!1,e.constructor));return i.isImplicit=!0,i}if((t.type==="mat2"||t.type==="mat3"||t.type==="mat4")&&e.type!=="float"){const i=new e.constructor(new C(n,[t,e],!0,!1,e.constructor));return i.isImplicit=!0,i}const s=new t.constructor(new C(n,[t,e],!0,!1,t.constructor));return s.isImplicit=!0,s}function v(n,t,e=t.constructor){const r=new e(new C(n,[t],!1,!1,e));return r.isImplicit=!0,r}function S(n,t,e,r=t.constructor){const s=new r(new C(n,[t,e],!1,!1,r));return s.isImplicit=!0,s}function Ot(n,t,e,r,s=t.constructor){const i=new s(new C(n,[t,e,r],!1,!1,s));return i.isImplicit=!0,i}function Me(n){return N(n,Fe(-1))}function ne(n,t,e,r){return new t(new _e(n,t,e,r))}function ke(n,t,e=0,r=n.size){const s=new f(e).setMutable().setDebugName("FindIndexIterator"),i=t(n.get(s)).setDebugName("FindIndexPredicate");return ne({iter:s},f,i,({out:d,iter:u,subgraph:c})=>`
${d} = -1;

for (; ${u} < ${r}; ${u}++) {

${c.body}

  if (${c.varName}) {
    ${d} = ${u};
    break;
  }

}
`).setDebugName("FindIndexBlock")}function Ce(n,t,e=0,r=n.size){return ne({array:n},f,null,({out:i,array:o})=>`
${i} = -1;
for (int i = ${e}; i < ${r}; i++) {
  bool condition;
  ${t({array:o,i:"i",out:"condition"})}
  if (condition) {
    ${i} = i;
    break;
  }
}
`).setDebugName("GlslFindIndexBlock")}function Ee(n,t,e){const r=typeof t=="function"?t():t,s=typeof e=="function"?e():e,i=new r.constructor(new Pt(n,r,s));return i.isImplicit=!0,i}function on(...n){const t=n.map(([d,u])=>typeof u=="function"?[d,u()]:[d,u]),e=t[0][1].constructor,r=t.findIndex(d=>d[0]===!0);if(r===-1)throw new Error("A cond must have a fallthrough case with `true`/; ");const s=t.slice(0,r),i=t[r][1],o=new e(s.reduceRight((d,u)=>Ee(u[0],u[1],d),i));return o.isImplicit=!0,o}function N(n,t){return I("*",n,t)}function q(n,t){return I("/",n,t)}function A(n,t){return I("+",n,t)}function X(n,t){return I("-",n,t)}function an(n,t){return I("%",n,t)}function cn(n,t){return I(">>",n,t)}function un(n,t){return I("&",n,t)}function dn(n,t){return I("==",n,t,x)}function hn(n,t){return I("<",n,t,x)}function ln(n,t){return I("<=",n,t,x)}function pn(n,t){return I(">",n,t,x)}function fn(n,t){return I(">=",n,t,x)}function Pe(...n){return n.length<=1?n[0]:n.slice(1).reduce((t,e)=>Ue(t,e),n[0])}function Ue(n,t){return I("||",n,t,x)}function Ke(...n){return n.length<=1?n[0]:n.slice(1).reduce((t,e)=>Oe(t,e),n[0])}function Oe(n,t){return I("&&",n,t,x)}function yn(n){return v("abs",n)}function At(n){return v("all",n,x)}function Lt(n){return v("any",n,x)}function mn(n,t){return t==null?v("atan",n):S("atan",n,t,n.constructor)}function gn(n){return v("ceil",n)}function bn(n,t,e){return Ot("clamp",n,t,e,n.constructor)}function Ae(n){return v("cos",n)}function wn(n,t){return S("distance",n,t,l)}function $n(n,t){return S("dot",n,t,l)}function vn(n){return v("floor",n)}function _n(n){return v("fract",n)}function xn(n){return v("length",n,l)}function In(n,t){return S("max",n,t)}function Tn(n,t){return S("min",n,t)}function Sn(n,t,e){return Ot("mix",n,t,e)}function Nn(n,t){return S("mod",n,t)}function Fn(n){return v("normalize",n)}function Mn(n){return n.type==="bool"?v("!",n):v("not",n)}function kn(n,t){return S("pow",n,t)}function Cn(n){return v("round",n)}function Le(n){return v("sin",n)}function En(n,t,e){return Ot("smoothstep",n,t,e)}function Pn(n){return v("sqrt",n)}function Un(n,t){return S("step",n,t,t.constructor)}function Kn(n,t){return S("texture",n,t,E)}const B=5;function b(n,t,e){const r=t.split(`
`);for(const s of r)if(s.trim().length){{let i="";e!=null&&(i+=`/*id:${e??"000"}*/   `),n.body+=i.padEnd(14)}n.body+=" ".repeat(n.indent)+s+`
`}}class Rt{write(t){for(const e of t.rootOutputNodes())t.shouldPruneOutputNode(e)||(e.variableName=this._write(t,e.node));return t}_createVarName(t,e){let r="";return typeof e!="boolean"&&typeof e!="number"&&e.debugInfo.name&&(r=`${e.debugInfo.name}_`),`${r}v${t.varCount++}`}_write(t,e,r=!1){if(typeof e=="number"||typeof e=="boolean")return e.toString();let s=t.getEmit(e);if(s)return s;switch(e.shaderType){case"scope-node":s=this._writeScopeNode(t,e);break;case"primitive-node":s=this._writePrimitiveNode(t,e,r);break;case"function-node":s=this._writeFunctionNode(t,e);break;case"property-access-node":s=this._writePropertyAccessNode(t,e);break;case"property-access-2d-node":s=this._writePropertyAccess2DNode(t,e);break;case"text-node":s=e.text;break;case"block-node":s=this._writeBlockNode(t,e);break;case"condition-node":s=this._writeConditionNode(t,e)}return t.setEmit(e,s),s}_writeScopeNode(t,e){const r=new e.child.constructor;r.setDebugName(e.debugInfo.name);const s=this._write(t,r,!0);return b(t,`{ /*ScopeStart: ${e.uid} ${e.debugInfo.name}*/`),t.indent+=2,b(t,`${s} = ${this._write(t,e.child)};`),t.indent-=2,b(t,`} /*ScopeEnd: ${e.uid} ${e.debugInfo.name}*/`),s}_writeConditionNode(t,e){const r=new e.ifTrue.constructor,s=this._write(t,r,!0);b(t,`if (${this._write(t,e.condition)}) {`),t.indent+=2;const i=t.createSubgraphContext(),o=this._write(i,e.ifTrue);if(t.body+=i.body,o&&b(t,`${s} = ${o};`),t.indent-=2,b(t,"}"),e.ifFalse){b(t,"else {"),t.indent+=2;const d=t.createSubgraphContext(),u=this._write(d,e.ifFalse);t.body+=d.body,u&&b(t,`${s} = ${u};`),t.indent-=2,b(t,"}")}return s}_writeBlockNode(t,e){const{captureList:r,generator:s,returnType:i}=e,o={};for(const h in r){if(!r[h])continue;const p=this._write(t,r[h]);o[h]=p}const d=new i,u=this._write(t,d,!0);if(o.out=u,e.subgraph){const h=t.createSubgraphContext(),p=this._write(h,e.subgraph.child),$=h.body;o.subgraph={varName:p,body:$}}const c=s(o);return b(t,`{
`),t.indent+=2,b(t,c),t.indent-=2,b(t,`}
`),u}_writePropertyAccessNode(t,e){const r=this._write(t,e.target);return typeof e.property=="string"&&e.property.includes("[")?`${r}${e.property}`:typeof e.property!="string"?`${r}[${this._write(t,e.property)}]`:`${r}.${e.property}`}_writePropertyAccess2DNode(t,e){return`${this._write(t,e.target)}[${this._write(t,e.x)}][${this._write(t,e.y)}]`}_writeFunctionNode(t,e){const r=e.returnType.type;if(e.isInfix){const[o,d]=e.children.map(c=>this._write(t,c)),u=this._createVarName(t,e);return b(t,`${r.padEnd(B)} ${u} = ${o} ${e.token} ${d};`,e.uid),u}const s=e.children.map(o=>this._write(t,o)).join(", "),i=this._createVarName(t,e);return b(t,`${r.padEnd(B)} ${i} = ${e.token}(${s});`,e.uid),i}_writePrimitiveNode(t,e,r=!1){var c;const s=t.getInput(e);if(s)return s.isUsed=!0,s.variableName;const i=e.children.length===1&&((c=e.children[0])==null?void 0:c.type)===e.type;if(!e.isMutable&&(e.isImplicit||i))return this._write(t,e.children[0]);const o=this._createVarName(t,e);if(r)return b(t,`${e.type.padEnd(B)} ${o};`,e.uid),o;const d=!e.debugInfo.name&&!e.isMutable;if(d&&e.type==="float"&&typeof e.children[0]=="number")return Number.isInteger(e.children[0])?e.children[0].toFixed(1):e.children[0].toString();if(d&&e.type==="int"&&typeof e.children[0]=="number"&&Number.isInteger(e.children[0]))return e.children[0].toString();const u=e.children.map(h=>this._write(t,h)).join(", ");return e.type==="array"?(b(t,`${e.type.padEnd(B)} ${o} = [${u}];`,e.uid),o):d?`${e.type}(${u})`:(b(t,`${e.type.padEnd(B)} ${o} = ${e.type}(${u});`,e.uid),o)}}class F{constructor(t,e,r){this.variableName=t,this.variableInputType=e,this.node=r,this.type="shader-input",this.isUsed=!1}clone(){return new F(this.variableName,this.variableInputType,a(this.node))}}let P=class re{constructor(t,e,r){this.outVariableName=t,this.outVariableType=e,this.node=r,this.type="shader-output"}clone(){const t=new re(this.outVariableName,this.outVariableType,a(this.node));return t.variableName=this.variableName,t}},Ht=class ct{static createVertex(t,e,r,s,i,o){const d=[];for(const c in t){const h=t[c],p=r.get(c);p?d.push(new F(p,"builtin",h)):d.push(new F("a_"+c,"in",h))}for(const c of s){const h=c.uniformHydrated;d.push(new F(c.uniformName,"uniform",h))}const u=[];for(const c in e){const h=e[c];c==="glPosition"?u.push(new P("gl_Position","builtin",h)):c==="glPointSize"?u.push(new P("gl_PointSize","builtin",h)):u.push(new P("v_"+c,"out",h))}return new ct(d,u,i,o)}static createFragment(t,e,r,s,i,o){const d=[],u=Array.from(i.rootOutputNodes());for(const h in t){const p=t[h],$=r.get(h);if($){d.push(new F($,"builtin",p));continue}const k=u.find(L=>L.node===p);k&&d.push(new F(k.outVariableName,"in",p))}for(const h of s){const p=h.uniformHydrated;d.push(new F(h.uniformName,"uniform",p))}const c=[];for(const h in e){const p=e[h],$=r.get(h);h==="discard"?c.push(new P(null,"discard",p)):$?c.push(new P($,"builtin",p)):c.push(new P(h,"out",p))}return new ct(d,c,o)}constructor(t,e,r,s){this.type="shader-graph-context",this.indent=0,this.body="",this.varCount=0,this._inputShaderTypesByNodeUid=new Map,this._nodeEmitMap=new Map;for(const i of t)this._inputShaderTypesByNodeUid.set(i.node.uid,i);this._outputShaderTypes=e,this._transformFeedbackBindings=r,this._transformFeedbackNames=new Set(r.map(i=>"v_"+i.propertyKey)),this._usedInFragmentShader=s}shouldPruneOutputNode(t){return!!this._usedInFragmentShader&&t.outVariableType!=="builtin"&&!this._transformFeedbackNames.has(t.outVariableName)&&!this._usedInFragmentShader.has(t.node.uid)}setEmit(t,e){this._nodeEmitMap.set(t.uid,e)}getEmit(t){return this._nodeEmitMap.get(t.uid)}inputs(){return this._inputShaderTypesByNodeUid.values()}getInput(t){return this._inputShaderTypesByNodeUid.get(t.uid)}*rootOutputNodes(){for(const t of this._outputShaderTypes)yield t}*nodes(){const t=[];for(const e of this._outputShaderTypes.values())t.push(e.node);for(;t.length;){const e=t.pop();typeof e!="number"&&typeof e!="boolean"&&t.push(...e.children.filter(Boolean)),yield e}}*nodesOfTypeOrFunction(){for(const t of this.nodes())typeof t!="number"&&typeof t!="boolean"&&(yield t)}createSubgraphContext(){const t=this.clone();return t.body="",t.indent=this.indent+2,t._nodeEmitMap=new Map(this._nodeEmitMap),t}clone(){const t=new ct([],this._outputShaderTypes,this._transformFeedbackBindings,this._usedInFragmentShader);return t._inputShaderTypesByNodeUid=this._inputShaderTypesByNodeUid,t.indent=this.indent,t.body=this.body,t.varCount=this.varCount,t._nodeEmitMap=this._nodeEmitMap,t}insertVertexShader(t){t.vertex.code.add(""),this._insertInputs(t,"vertex"),t.vertex.code.add(""),t.vertex.code.add("// OUTPUTS: "),t.vertex.code.add("// --------------------------------------------------------- ");for(const e of this.rootOutputNodes()){const r=e.outVariableType==="builtin";this.shouldPruneOutputNode(e)||(r?t.vertex.code.add(`// ${e.outVariableType.padEnd(7)} ${e.node.type.padEnd(9)} ${e.outVariableName};`):t.vertex.code.add(`${e.outVariableType.padEnd(10)} ${e.node.type.padEnd(9)} ${e.outVariableName};`))}t.vertex.code.add(""),t.vertex.code.add("void main() {"),t.vertex.code.add("  "+this.body.split(`
`).join(`
  `));for(const e of this.rootOutputNodes())this.shouldPruneOutputNode(e)||t.vertex.code.add(`  ${e.outVariableName} = ${e.variableName};`);t.vertex.code.add("}")}insertFragmentShader(t){this._insertInputs(t,"fragment"),t.fragment.code.add(""),t.fragment.code.add("// OUTPUTS: "),t.fragment.code.add("// --------------------------------------------------------- ");for(const e of this.rootOutputNodes())e.outVariableType==="builtin"?t.fragment.code.add(`// ${e.outVariableType.padEnd(7)} ${e.node.type.padEnd(9)} ${e.outVariableName};`):t.fragment.code.add(`${e.outVariableType.padEnd(10)} ${e.node.type.padEnd(9)} ${e.outVariableName};`);t.fragment.code.add(""),t.fragment.code.add("void main() {"),t.fragment.code.add("  "+this.body.split(`
`).join(`
  `));for(const e of this.rootOutputNodes())e.outVariableType==="discard"?(t.fragment.code.add("  // TODO: Should ensure codegen for discard appears first in fragment shader"),t.fragment.code.add(`  if (${e.variableName}) {`),t.fragment.code.add("    discard;"),t.fragment.code.add("  }"),t.fragment.code.add("  ")):t.fragment.code.add(`  ${e.outVariableName} = ${e.variableName};`);t.fragment.code.add("}")}_insertInputs(t,e){t[e].code.add("// INPUTS: "),t[e].code.add("// --------------------------------------------------------- ");for(const r of this.inputs())r.isUsed&&r.variableInputType!=="builtin"&&(r.node.type==="array"?t[e].code.add(`${r.variableInputType.padEnd(10)} ${r.node.elementType.type.padEnd(9)} ${r.variableName}[${r.node.size}];`):r.node.type==="array-2d"?t[e].code.add(`${r.variableInputType.padEnd(10)} ${r.node.elementType.type.padEnd(9)} ${r.variableName}[${r.node.size}]; // Emulated 2D Array. Not supported by ES3.0`):t[e].code.add(`${r.variableInputType.padEnd(10)} ${r.node.type.padEnd(9)} ${r.variableName};`))}};const je=()=>kt.getLogger("esri.views.2d.engine.webgl.shaderGraph.typed.TypedShaderProgram");function V(n,t,e){const r=t.length;if(r!==e){const s=new Jt("Invalid Uniform",`Invalid length, expected ${e} but got ${r}`,{uniformName:n,values:t});je().errorOnce(s)}}class qt{constructor(t,e,r,s,i,o){this._program=null,this._vao=null,this._temporaryTextures=[],this.vertexShader=t,this.fragmentShader=e,this._locations=r,this._locationInfo=s,this._uniformBindings=i,this._transformFeedbackBindings=o}destroy(){this._program&&this._program.dispose(),this.cleanupTemporaryTextures()}get locations(){return this._locations}get locationInfo(){return this._locationInfo}setUniforms(t){this._uniforms=t}cleanupTemporaryTextures(){for(const t of this._temporaryTextures)t.dispose();this._temporaryTextures=[]}bind(t){const e=this._uniforms;if(!this._program){const s=new Map;for(const[o,d]of this._locations)s.set(o,d);const i=[];for(const o of this._transformFeedbackBindings??[]){const{index:d,propertyKey:u}=o;i[d]=`v_${u}`}this._program=new ue(t,this.vertexShader,this.fragmentShader,s,new Map,i)}const r=this._program;t.useProgram(r);for(const s of this._uniformBindings){const{shaderModulePath:i,uniformName:o,uniformType:d,uniformArrayLength:u}=s,c=oe(i,e);if(c==null){if(d==="sampler2D")continue;throw new Error(`Failed to find uniform value for ${i}`)}switch(d==="array"||d==="array-2d"?s.uniformArrayElementType:d){case"sampler2D":{const{unit:h,texture:p}=c;if(r.setUniform1i(o,h),"type"in p)t.bindTexture(p,h);else{const $=de(t,p.descriptor,p.data);t.bindTexture($,h)}break}case"int":if(!u){r.setUniform1i(o,c);break}V(s.uniformName,c,u),r.setUniform1iv(o,c);break;case"float":if(!u){r.setUniform1f(o,c);break}V(s.uniformName,c,u),r.setUniform1fv(o,c);break;case"vec2":if(!u){r.setUniform2f(o,c[0],c[1]);break}V(s.uniformName,c,u),r.setUniform2fv(o,c.flat());break;case"vec3":if(!u){r.setUniform3f(o,c[0],c[1],c[2]);break}V(s.uniformName,c,u),r.setUniform3fv(o,c.flat());break;case"vec4":if(!u){r.setUniform4f(o,c[0],c[1],c[2],c[3]);break}V(s.uniformName,c,u),r.setUniform4fv(o,c.flat());break;case"mat3":r.setUniformMatrix3fv(o,c);break;case"mat4":r.setUniformMatrix4fv(o,c);break;default:throw new Error(`Unable to set uniform for type ${d}`)}}}}function D(n){return new n}function J(n,t,e){const r=n.constructor[t]??[];n.constructor.hasOwnProperty(t)||Object.defineProperty(n.constructor,t,{value:r.slice()}),n.constructor[t].push(e)}function On(n,t){return(e,r)=>{J(e,"locations",{typeCtor:t,propertyKey:r,parameterIndex:null,index:n})}}const An=n=>(t,e,r)=>{J(t,"inputs",{inputCtor:n,propertyKey:e,parameterIndex:r})},Ln=n=>(t,e)=>{J(t,"uniforms",{typeCtor:n,propertyKey:e})},jn=n=>(t,e)=>{J(t,"options",{typeCtor:n,propertyKey:e})},Bn=(n,t)=>{J(n,"defines",{propertyKey:t})},Mt=(n,t)=>(e,r)=>{e.constructor.builtins.push({builtin:n,propertyKey:r,typeCtor:t})};class Xt{}Xt.builtins=[],w([Mt("gl_VertexID",f)],Xt.prototype,"glVertexID",void 0);class Vn{}class ut{}ut.builtins=[],w([Mt("gl_FragCoord",E)],ut.prototype,"glFragCoord",void 0),w([Mt("gl_PointCoord",K)],ut.prototype,"glPointCoord",void 0);let Dn=class{};class Gn{constructor(){this.type="uniform-group"}get _uniforms(){return this.constructor.uniforms??[]}}let Rn=class{constructor(){this.logShader=!1,this.computeAttributes={}}get vertexInput(){const t=this._shaderModuleClass.inputs.findLast(e=>e.propertyKey==="vertex"&&e.parameterIndex===0);if(!t)throw new Error("Unable to find vertex input parameter");return t}get computeInput(){return this._shaderModuleClass.inputs.findLast(t=>t.propertyKey==="vertex"&&t.parameterIndex===1)}get fragmentInput(){const t=this._shaderModuleClass.inputs.findLast(e=>e.propertyKey==="fragment");if(!t)throw new Error("Unable to find fragment input parameter");return t}get transformFeedbackBindings(){return this.fragmentInput.inputCtor.transformFeedbackBindings??[]}get locations(){var t;return[...this.vertexInput.inputCtor.locations,...((t=this.computeInput)==null?void 0:t.inputCtor.locations)??[]]}get locationsMap(){const t=new Map,e=new Set;for(const r of this.locations)e.has(r.index)?kt.getLogger("esri.views.2d.engine.webgl.shaderGraph.GraphShaderModule").warnOnce("mapview-rendering",`Unable to assigned attribute ${r.propertyKey} to ${r.index}. Index already in use`,{locationsMap:t}):(t.set(r.propertyKey,r.index),e.add(r.index));return t}get locationInfo(){if(!this._locationInfo){const t=this.locationsMap,e=Array.from(t.entries()).map(([i,o])=>`${i}.${o}`).join("."),r=ae(e),s=this.computeAttributes;this._locationInfo={hash:r,locations:t,computeAttributeMap:s}}return this._locationInfo}get renamedLocationsMap(){const t=new Map;for(const e of this.locations)t.set("a_"+e.propertyKey,e.index);return t}get optionPropertyKeys(){if(!this._optionPropertyKeys){const t=new Set;for(const e of this._options)t.add(e.propertyKey);this._optionPropertyKeys=t}return this._optionPropertyKeys}get _shaderModuleClass(){return this.constructor}get _defines(){return this._shaderModuleClass.defines??[]}get _options(){return this._shaderModuleClass.options??[]}get _uniforms(){return this._shaderModuleClass.uniforms??[]}getProgram(t,e,r,s){try{const{vertex:i,fragment:o,uniformBindings:d}=this._generateShaders(t,e,r,s);return new qt(i,o,this.renamedLocationsMap,this.locationInfo,d,this.transformFeedbackBindings)}catch{return new qt("","",this.renamedLocationsMap,this.locationInfo,[],this.transformFeedbackBindings)}}getDebugUniformClassInfo(t){const e=this._options.find(s=>s.propertyKey===t);if(e)return{type:"option",className:e.typeCtor};const r=this._uniforms.find(s=>s.propertyKey===t);if(!r)throw new Error(`Unable to find uniform class type for property: ${t}`);return{type:"required",className:r.typeCtor}}getShaderKey(t,e,r,s){const i=Object.keys(t).map(c=>`${c}.${t[c]}`).join("."),o=Object.keys(r).map(c=>`${c}.${r[c]}`).join("."),d=Object.keys(s).map(c=>`${c}.${s[c]}`).join("."),u=Object.keys(e).filter(c=>this.optionPropertyKeys.has(c)&&e[c]).join(".");return`${this.constructor.name}.${i}.${o}.${d}.${u}`}_generateShaders(t,e,r,s){const i=[];this._setDefines(r),this._setOptionalUniforms(i,e),this._setRequiredUniforms(i);const o=this._hydrateVertexInput(s),d=this._injectPackPrecisionFactor(o,t),u=this._hydrateComputeInput(),c=u&&this._injectComputePackPrecisionFactor(u,t),h=this.vertex(d,c),p=this._hydrateFragmentInput(h),$=this.fragment(p),k=new Set;for(const se in $){const ie=$[se];$e(k,ie)}const L=this._getVertexInputBuiltins(),j=Ht.createVertex({...o,...u},h,L,i,this.transformFeedbackBindings,k);new Rt().write(j);const Q=this._getFragmentInputBuiltins($);Q.set("glPointCoord","gl_PointCoord");const jt=Ht.createFragment(p,$,Q,i,j,this.transformFeedbackBindings);new Rt().write(jt);const Bt=this._createShaderBuilder(j,jt),Vt=Bt.generate("vertex",!0),Dt=Bt.generate("fragment",!0);return this.logShader&&(console.log(Vt),console.log(Dt)),{vertex:Vt,fragment:Dt,uniformBindings:i}}_setDefines(t){for(const e in t)this[e]=t[e]}_setOptionalUniforms(t,e){for(const r of this._options)e[r.propertyKey]?this[r.propertyKey]=this._hydrateUniformGroup(t,r):this[r.propertyKey]=null}_setRequiredUniforms(t){for(const e of this._uniforms)this[e.propertyKey]=this._hydrateUniformGroup(t,e)}_hydrateUniformGroup(t,e){const r=new e.typeCtor;for(const s of r._uniforms??[]){const i=D(s.typeCtor),o=`u_${e.propertyKey}_${s.propertyKey}`,d=i.type,u=[e.propertyKey,s.propertyKey].join(".");if("type"in s.typeCtor&&s.typeCtor.type==="array"){const c=i;t.push({shaderModulePath:u,uniformName:o,uniformType:d,uniformArrayLength:c.size,uniformArrayElementType:c.elementType.type,uniformHydrated:i})}else if("type"in s.typeCtor&&s.typeCtor.type==="array-2d"){const c=i;t.push({shaderModulePath:u,uniformName:o,uniformType:d,uniformArrayLength:c.size,uniformArrayElementType:c.elementType.type,uniformHydrated:i})}else t.push({shaderModulePath:u,uniformName:o,uniformType:d,uniformHydrated:i});r[s.propertyKey]=i}return r}_hydrateVertexInput(t){const e=this.vertexInput.inputCtor,r=e.locations.reduce((s,i)=>t[i.propertyKey]===!1?s:{...s,[i.propertyKey]:D(i.typeCtor)},{});for(const{propertyKey:s,typeCtor:i}of e.builtins){const o=D(i);r[s]=o}return r}_hydrateComputeInput(){return this.computeInput==null?null:this.computeInput.inputCtor.locations.reduce((t,e)=>({...t,[e.propertyKey]:D(e.typeCtor)}),{})}_injectPackPrecisionFactor(t,e){const r={};for(const s in t){const i=t[s],o=e[s];if(o){if(i.type!=="float"&&i.type!=="vec2"&&i.type!=="vec3"&&i.type!=="vec4")throw new Error(`InternalError: packPrecisionFactor requires GenType, but found ${i.type}`);r[s]=i.divide(new l(o))}else r[s]=i}return r}_injectComputePackPrecisionFactor(t,e){const r={},s=new Map;for(const i in this.computeAttributes)for(const o of this.computeAttributes[i]??[])s.set(o,i);for(const i in t){const o=t[i],d=s.get(i);if(!d)continue;const u=e[d];if(u){if(o.type!=="float"&&o.type!=="vec2"&&o.type!=="vec3"&&o.type!=="vec4")throw new Error(`InternalError: packPrecisionFactor requires GenType, but found ${o.type}`);r[i]=o.divide(new l(u))}else r[i]=o}return r}_hydrateFragmentInput(t){const e={};for(const r in t)e[r]=t[r];for(const{propertyKey:r,typeCtor:s}of ut.builtins){const i=D(s);e[r]=i}return e}_getVertexInputBuiltins(){const t=this.vertexInput.inputCtor,e=new Map;for(const{builtin:r,propertyKey:s}of t.builtins)e.set(s,r);return e}_getFragmentInputBuiltins(t){const e=t.constructor,r=new Map;for(const s of e.builtins??[])r.set(s.propertyKey,s.builtin);return r}_createShaderBuilder(t,e){const r=new le;return this._insertDebugInfo(r),t.insertVertexShader(r),e.insertFragmentShader(r),r}_insertDebugInfo(t){t.vertex.code.add("// DEFINES: "),t.vertex.code.add("// --------------------------------------------------------- ");for(const e of this._defines)this[e.propertyKey]?t.vertex.code.add(`//   ${e.propertyKey}: true`):t.vertex.code.add(`//   ${e.propertyKey}: false`);t.vertex.code.add(""),t.vertex.code.add("// OPTIONS: "),t.vertex.code.add("// --------------------------------------------------------- ");for(const e of this._options)this[e.propertyKey]?t.vertex.code.add(`//   ${e.propertyKey}: true`):t.vertex.code.add(`//   ${e.propertyKey}: false`)}};export{cn as $,En as A,H as B,K as C,N as D,_n as E,jn as F,Vn as G,Kt as H,ne as I,Pe as J,Bn as K,kn as L,xn as M,x as N,wn as O,Gn as P,Me as Q,Z as R,an as S,on as T,Ut as U,vn as V,f as W,G as X,E as Y,Cn as Z,l as _,Kn as a,un as a0,qt as a1,Fe as a2,Nn as a3,nn as a4,rn as a5,en as a6,tn as a7,gn as a8,Ke as a9,Mn as aa,Fn as ab,fn as ac,sn as ad,Xt as b,Sn as c,dn as d,zt as e,bn as f,Ln as g,On as h,yn as i,Rn as j,Tn as k,ln as l,An as m,pn as n,hn as o,$n as p,In as q,O as r,Un as s,mn as t,Pn as u,ut as v,Dn as w,Ae as x,Le as y,Ee as z};

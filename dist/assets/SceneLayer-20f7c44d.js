import{q as s,t as a,v as I,aM as U,cL as Z,V as j,aQ as F,b0 as B,dt as $,gE as Y,bq as h,J as X,dW as ee,bG as te,W as C,av as re,fI as se,dc as ie,cO as ae,cP as oe,bk as ne,cQ as le,dd as pe,aH as de,ak as ye,fK as ue,e_ as A,h8 as x,n as u,cF as ce,aN as he,aG as fe,s as p,h9 as ge,D as me,f0 as ve,bt as we,_ as be,fh as T,aY as S,dx as Ie,j as Le,fk as Fe,ha as Se,hb as _e,gM as Ee,f1 as je,f2 as Oe,f3 as $e,f4 as P,cS as Ae,hc as xe,f8 as Te,f6 as Pe,z as Re,f9 as De,fc as qe,bn as Ne}from"./index-10102046.js";import{E as Ue,L as R}from"./SceneService-9cb6bde2.js";import{l as Ce,a as Ge}from"./associatedFeatureServiceUtils-89c2d67c.js";import{i as Qe,s as ke}from"./I3SUtil-4e0eb5a0.js";import{s as G,l as Ve,u as Je,m as He}from"./I3SLayerDefinitions-e9e82b80.js";import{j as Ke}from"./persistable-5e59bf6a.js";import{x as D,b as Me,E as We}from"./elevationInfoUtils-c2569e00.js";import{n as ze,p as Ze}from"./popupUtils-47831f6c.js";import"./originUtils-1469eeaf.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./resourceUtils-2545fe59.js";import"./mat3f64-221ce671.js";import"./mat4f64-1413b4a7.js";import"./quat-a1c1817e.js";import"./quatf64-3363c48e.js";import"./spatialReferenceEllipsoidUtils-27912cea.js";import"./I3SBinaryReader-b6044d39.js";import"./VertexAttribute-be58f9a2.js";import"./orientedBoundingBox-c73f99d8.js";import"./plane-6c3da9bf.js";import"./sphere-cb6d12c4.js";import"./ByteSizeUnit-d4757d40.js";import"./resourceExtension-b49d1bed.js";let y=class extends U{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};s([a({type:String,json:{read:!0,write:!0}})],y.prototype,"name",void 0),s([a({type:String,json:{read:!0,write:!0}})],y.prototype,"field",void 0),s([a({type:[Number],json:{read:!0,write:!0}})],y.prototype,"currentRangeExtent",void 0),s([a({type:[Number],json:{read:!0,write:!0}})],y.prototype,"fullRangeExtent",void 0),s([a({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],y.prototype,"type",void 0),y=s([I("esri.layers.support.RangeInfo")],y);var w;let _=w=class extends Z(j.ofType(F)){constructor(e){super(e)}clone(){return new w(this.items.map(e=>e.clone()))}write(e,t){return this.toJSON(t)}toJSON(e){var r;const t=(r=e==null?void 0:e.layer)==null?void 0:r.spatialReference;return t?this.toArray().map(o=>{if(!t.equals(o.spatialReference)){if(!B(o.spatialReference,t))return e&&e.messages&&e.messages.push(new $("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const l=new F;Y(o,l,t),o=l}const n=o.toJSON(e);return delete n.spatialReference,n}).filter(o=>o!=null):(e!=null&&e.messages&&e.messages.push(new $("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map(o=>o.toJSON(e)))}static fromJSON(e,t){const r=new w;return e.forEach(o=>r.add(F.fromJSON(o,t))),r}};_=w=s([I("esri.layers.support.PolygonCollection")],_);const b=_;var E;let f=E=class extends U{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new b,this._geometriesSource=null}initialize(){this.addHandles(X(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,ee))}readGeometries(e,t,r){Array.isArray(e)?this.geometries=b.fromJSON(e,r):this._geometriesSource={url:te(e,r),context:r}}async loadGeometries(e,t){if(this._geometriesSource==null)return;const{url:r,context:o}=this._geometriesSource,n=await C(r,{responseType:"json",signal:t==null?void 0:t.signal}),l=e.toJSON(),d=n.data.map(c=>({...c,spatialReference:l}));this.geometries=b.fromJSON(d,o),this._geometriesSource=null}clone(){const e=new E({geometries:re(this.geometries),spatialRelationship:this.spatialRelationship});return e._geometriesSource=this._geometriesSource,e}};s([a({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],f.prototype,"spatialRelationship",void 0),s([a({type:b,nonNullable:!0,json:{write:!0}}),Ke({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries",contentAddressed:!0})],f.prototype,"geometries",void 0),s([h(["web-scene","portal-item"],"geometries")],f.prototype,"readGeometries",null),f=E=s([I("esri.layers.support.SceneFilter")],f);const Be=f,Ye=["3DObject","Point"],q=qe();let i=class extends se(Ue(ie(ae(oe(ne(le(pe(de(Ne))))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new j,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0,this.serviceItemId=void 0}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}destroy(){this._set("renderer",null)}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){var o,n,l;const r=(n=(o=this.getFeatureType(t==null?void 0:t.feature))==null?void 0:o.domains)==null?void 0:n[e];return r&&r.type!=="inherited"?r:((l=this.getField(e))==null?void 0:l.domain)??null}getFeatureType(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null}get types(){var e;return((e=this.associatedLayer)==null?void 0:e.types)??[]}get typeIdField(){var e;return((e=this.associatedLayer)==null?void 0:e.typeIdField)??null}get templates(){var e;return((e=this.associatedLayer)==null?void 0:e.templates)??null}get formTemplate(){var e;return((e=this.associatedLayer)==null?void 0:e.formTemplate)??null}get fieldsIndex(){return new ye(this.fields)}readNodePages(e,t,r){return t.layerType==="Point"&&(e=t.pointNodePages),e==null||typeof e!="object"?null:G.fromJSON(e,r)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get effectiveCapabilities(){var e;return this._capabilitiesFromAssociatedFeatureLayer((e=this.associatedLayer)==null?void 0:e.effectiveCapabilities)}get effectiveEditingEnabled(){return this.associatedLayer!=null&&ue(this.associatedLayer)}get geometryType(){return Xe[this.profile]||"mesh"}set renderer(e){A(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){var e;return this._capabilitiesFromAssociatedFeatureLayer((e=this.associatedLayer)==null?void 0:e.capabilities)}_capabilitiesFromAssociatedFeatureLayer(e){var O;e=e??ke;const{query:t,queryRelated:r,editing:{supportsGlobalId:o,supportsRollbackOnFailure:n,supportsUploadWithItemId:l,supportsGeometryUpdate:d,supportsReturnServiceEditsInSourceSpatialReference:c},data:{supportsZ:g,supportsM:m,isVersioned:Q,supportsAttachment:k},operations:{supportsEditing:V,supportsAdd:J,supportsUpdate:H,supportsDelete:K,supportsQuery:M,supportsQueryAttachments:W,supportsAsyncConvert3D:z}}=e,v=e.operations.supportsChangeTracking,L=!!((O=this.associatedLayer)!=null&&O.infoFor3D)&&x();return{query:t,queryRelated:r,editing:{supportsGlobalId:o,supportsReturnServiceEditsInSourceSpatialReference:c,supportsRollbackOnFailure:n,supportsGeometryUpdate:L&&d,supportsUploadWithItemId:l},data:{supportsAttachment:k,supportsZ:g,supportsM:m,isVersioned:Q},operations:{supportsQuery:M,supportsQueryAttachments:W,supportsEditing:V&&v,supportsAdd:L&&J&&v,supportsDelete:L&&K&&v,supportsUpdate:H&&v,supportsAsyncConvert3D:z}}}get editingEnabled(){var e;return this._isOverridden("editingEnabled")?this._get("editingEnabled"):((e=this.associatedLayer)==null?void 0:e.editingEnabled)??!1}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){var e;return((e=this.associatedLayer)==null?void 0:e.infoFor3D)??null}get relationships(){var e;return(e=this.associatedLayer)==null?void 0:e.relationships}get defaultPopupTemplate(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeOID"&&(e=r.name),!!e)),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some(r=>(r.type==="esriFieldTypeGlobalID"&&(e=r.name),!!e)),e||void 0}get displayField(){var e;return((e=this.associatedLayer)==null?void 0:e.displayField)??null}readProfile(e,t){const r=t.store.profile;return r!=null&&N[r]?N[r]:(u.getLogger(this).error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")}load(e){return this.addResolvingPromise(this._load(e)),Promise.resolve(this)}async _load(e){const t=e!=null?e.signal:null;await this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(ce),await this._fetchService(t),await Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]),await this._validateElevationInfo(),await this._applyAssociatedLayerOverrides(),await this._populateFieldUsageInfo(),await he(this,{origin:"service"},t),await A(this.renderer,this.fieldsIndex),await this.finishLoadEditablePortalLayer(e)}async beforeSave(){this.filter!=null&&(this.filter=this.filter.clone(),await this.load())}async _loadFilterGeometries(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){u.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}}createQuery(){const e=new fe;return this.geometryType!=="mesh"&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryExtent(e||this.createQuery(),t))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatureCount(e||this.createQuery(),t))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryFeatures(e||this.createQuery(),t)).then(r=>{if(r!=null&&r.features)for(const o of r.features)o.layer=this,o.sourceLayer=this;return r})}async queryRelatedFeatures(e,t){if(await this.load(),!this.associatedLayer)throw new p("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeatures(e,t)}async queryRelatedFeaturesCount(e,t){if(await this.load(),!this.associatedLayer)throw new p("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});return this.associatedLayer.queryRelatedFeaturesCount(e,t)}async queryCachedAttributes(e,t){const r=ge(this.fieldsIndex,await ze(this,Ze(this)));return Qe(this.parsedUrl.path,this.attributeStorageInfo??[],e,t,r)}async queryCachedFeature(e,t){const r=await this.queryCachedAttributes(e,[t]);if(!r||r.length===0)throw new p("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const o=new me;return o.attributes=r[0],o.layer=this,o.sourceLayer=this,o}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryObjectIds(e||this.createQuery(),t))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then(r=>r.queryAttachments(e,t))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(u.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return ve(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return e!=null&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),!this.associatedLayer)throw new p("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new p("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some(t=>t.name===e)}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new p("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new p("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const o of this.statisticsInfo)if(o.name===r.name){const n=we(this.parsedUrl.path,o.href);return C(n,{query:{f:"json",token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then(l=>l.data)}throw new p("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(R.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(R.SAVE,e)}async applyEdits(e,t){const{applyEdits:r}=await be(()=>import("./editingSupport-3f336b9b.js"),["assets/editingSupport-3f336b9b.js","assets/index-10102046.js","assets/index-0e712e80.css"]);if(await this.load(),!this.associatedLayer)throw new p(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),r(this,this.associatedLayer.source,e,t)}async uploadAssets(e,t){if(await this.load(),this.associatedLayer==null)throw new p(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&!Ye.includes(e.layerType))throw new p("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new p("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new p("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(r,o){let n=!1,l=!1;if(r==null)n=!0,l=!0;else{const d=o&&o.isGeographic;switch(r){case"east-north-up":case"earth-centered":n=!0,l=d;break;case"vertex-reference-frame":n=!0,l=!d;break;default:n=!1}}if(!n)throw new p("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!l)throw new p("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new p("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){var e,t;if(this._fieldUsageInfo={},this.fields)for(const r of this.fields){const o=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some(d=>d.name===r.name)),n=!!((t=(e=this.associatedLayer)==null?void 0:e.fields)!=null&&t.some(d=>d&&r.name===d.name)),l={supportsLabelingInfo:o,supportsRenderer:o,supportsPopupTemplate:o||n,supportsLayerQuery:n};this._fieldUsageInfo[r.name]=l}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides(),this._applyAssociatedLayerExtentOverride(),this._applyAssociatedLayerPrivileges()}_applyAssociatedLayerFieldsOverrides(){var t;if(!((t=this.associatedLayer)!=null&&t.fields))return;let e=null;for(const r of this.associatedLayer.fields){const o=this.getField(r.name);o?(!o.domain&&r.domain&&(o.domain=r.domain.clone()),o.editable=r.editable,o.nullable=r.nullable,o.length=r.length):(e||(e=this.fields?this.fields.slice():[]),e.push(r.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],t=T(this);for(let r=0;r<e.length;r++){const o=e[r],n=this.originIdOf(o),l=this.associatedLayer.originIdOf(o);n<l&&(l===S.SERVICE||l===S.PORTAL_ITEM)&&t.setAtOrigin(o,this.associatedLayer[o],l)}}_applyAssociatedLayerExtentOverride(){var o,n,l,d,c,g,m;const e=(n=(o=this.associatedLayer)==null?void 0:o.editingInfo)==null?void 0:n.lastEditDate,t=(l=this.associatedLayer)==null?void 0:l.serverGens,r=(d=this.associatedLayer)==null?void 0:d.getAtOrigin("fullExtent","service");!x()||((c=this.associatedLayer)==null?void 0:c.infoFor3D)==null||!r||!Ie((g=this.associatedLayer)==null?void 0:g.url)||!e||((m=this.serviceUpdateTimeStamp)==null?void 0:m.lastUpdate)===e.getTime()||!this.serviceUpdateTimeStamp&&(t==null?void 0:t.minServerGen)===(t==null?void 0:t.serverGen)||T(this).setAtOrigin("fullExtent",r.clone(),S.SERVICE)}_applyAssociatedLayerPrivileges(){const e=this.associatedLayer;e&&(this._set("userHasEditingPrivileges",e.userHasEditingPrivileges),this._set("userHasFullEditingPrivileges",e.userHasFullEditingPrivileges),this._set("userHasUpdateItemPrivileges",e.userHasUpdateItemPrivileges))}async _setAssociatedFeatureLayer(e){if(["mesh-pyramids","points"].includes(this.profile))try{const{serverUrl:t,layerId:r,portalItem:o}=await Ce(`${this.url}/layers/${this.layerId}`,{sceneLayerItem:this.portalItem,apiKey:this.apiKey,signal:e}),n=await Ge.FeatureLayer();this.associatedLayer=new n({url:t,layerId:r,portalItem:o}),await this.associatedLayer.load()}catch(t){Le(t)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await Fe(()=>this.popupEnabled&&this.popupTemplate!=null);const e=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?u.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):u.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;this.profile==="mesh-pyramids"&&D(u.getLogger(this),Me("Mesh scene layers","relative-to-scene",e)),D(u.getLogger(this),We("Scene layers",e))}};s([a({types:{key:"type",base:Se,typeMap:{selection:_e}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],i.prototype,"featureReduction",void 0),s([a({type:[y],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],i.prototype,"rangeInfos",void 0),s([a({json:{read:!1}})],i.prototype,"associatedLayer",void 0),s([a({type:["show","hide"]})],i.prototype,"listMode",void 0),s([a({type:["ArcGISSceneServiceLayer"]})],i.prototype,"operationalLayerType",void 0),s([a({json:{read:!1},readOnly:!0})],i.prototype,"type",void 0),s([a({...q.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],i.prototype,"fields",void 0),s([a()],i.prototype,"types",null),s([a()],i.prototype,"typeIdField",null),s([a()],i.prototype,"templates",null),s([a()],i.prototype,"formTemplate",null),s([a({readOnly:!0})],i.prototype,"fieldsIndex",null),s([a({type:Ee,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],i.prototype,"floorInfo",void 0),s([a(q.outFields)],i.prototype,"outFields",void 0),s([a({type:G,readOnly:!0,json:{read:!1}})],i.prototype,"nodePages",void 0),s([h("service","nodePages",["nodePages","pointNodePages"])],i.prototype,"readNodePages",null),s([a({type:[Ve],readOnly:!0})],i.prototype,"materialDefinitions",void 0),s([a({type:[Je],readOnly:!0})],i.prototype,"textureSetDefinitions",void 0),s([a({type:[He],readOnly:!0})],i.prototype,"geometryDefinitions",void 0),s([a({readOnly:!0})],i.prototype,"serviceUpdateTimeStamp",void 0),s([a({readOnly:!0})],i.prototype,"attributeStorageInfo",void 0),s([a({readOnly:!0})],i.prototype,"statisticsInfo",void 0),s([a({type:j.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],i.prototype,"excludeObjectIds",void 0),s([a({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),s([a({type:Be,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],i.prototype,"filter",void 0),s([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),s([a(je)],i.prototype,"elevationInfo",null),s([a({readOnly:!0,json:{read:!1}})],i.prototype,"effectiveCapabilities",null),s([a({readOnly:!0})],i.prototype,"effectiveEditingEnabled",null),s([a({type:String})],i.prototype,"geometryType",null),s([a(Oe)],i.prototype,"labelsVisible",void 0),s([a({type:[$e],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:P},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:P},write:!0}})],i.prototype,"labelingInfo",void 0),s([a(Ae)],i.prototype,"legendEnabled",void 0),s([a({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){var o,n;if(typeof e=="number"&&e>=0&&e<=1)return e;const r=(n=(o=t.layerDefinition)==null?void 0:o.drawingInfo)==null?void 0:n.transparency;return r!==void 0?xe(r):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],i.prototype,"opacity",void 0),s([a({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],i.prototype,"priority",void 0),s([a({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],i.prototype,"semantic",void 0),s([a({types:Te,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],i.prototype,"renderer",null),s([a({json:{read:!1}})],i.prototype,"cachedDrawingInfo",void 0),s([h("service","cachedDrawingInfo")],i.prototype,"readCachedDrawingInfo",null),s([a({readOnly:!0,json:{read:!1}})],i.prototype,"capabilities",null),s([a({type:Boolean,json:{read:!1}})],i.prototype,"editingEnabled",null),s([a({readOnly:!0,json:{write:!1,read:!1}})],i.prototype,"infoFor3D",null),s([a({readOnly:!0,json:{write:!1,read:!1}})],i.prototype,"relationships",null),s([a(Pe)],i.prototype,"popupEnabled",void 0),s([a({type:Re,json:{name:"popupInfo",write:!0}})],i.prototype,"popupTemplate",void 0),s([a({readOnly:!0,json:{read:!1}})],i.prototype,"defaultPopupTemplate",null),s([a({type:String,json:{read:!1}})],i.prototype,"objectIdField",void 0),s([h("service","objectIdField",["objectIdField","fields"])],i.prototype,"readObjectIdField",null),s([a({type:String,json:{read:!1}})],i.prototype,"globalIdField",void 0),s([h("service","globalIdField",["globalIdField","fields"])],i.prototype,"readGlobalIdField",null),s([a({readOnly:!0,type:String,json:{read:!1}})],i.prototype,"displayField",null),s([a({type:String,json:{read:!1}})],i.prototype,"profile",void 0),s([h("service","profile",["store.profile"])],i.prototype,"readProfile",null),s([a({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],i.prototype,"normalReferenceFrame",void 0),s([a(De)],i.prototype,"screenSizePerspectiveEnabled",void 0),s([a({json:{read:!1,origins:{service:{read:!0}}}})],i.prototype,"serviceItemId",void 0),i=s([I("esri.layers.SceneLayer")],i);const N={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},Xe={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"},Ft=i;export{Ft as default};

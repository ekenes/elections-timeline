import{I as f,b7 as y,f8 as S,Y as c,ae as l,eP as o,dK as R,G as m,hE as g,T as p,bK as d}from"./index-76dad814.js";function J(n){const t=n.geometry,a=n.toJSON(),e=a;let i,r,s;return t!=null&&(r=t.spatialReference,s=o(r),e.geometryType=R(t),e.geometry=JSON.stringify(t),e.inSR=s),a.outSR?(e.outSR=o(a.outSR),i=n.outSpatialReference):t&&(e.outSR=e.inSR,i=r),e.bin&&(e.bin=JSON.stringify(e.bin)),e.quantizationParameters&&(e.quantizationParameters=JSON.stringify(e.quantizationParameters)),e.outStatistics&&(e.outStatistics=JSON.stringify(e.outStatistics)),e.outTimeReference&&(e.outTimeReference=JSON.stringify(e.outTimeReference)),n.defaultSpatialReference&&m(r,i)&&(e.defaultSR=e.inSR,delete e.inSR,delete e.outSR),e}async function N(n,t,a){return O(n,t,a)}async function O(n,t,a={}){const e=typeof n=="string"?f(n):n,i=t.geometry?[t.geometry]:[],r=await y(i,null,{signal:a.signal}),s=r==null?void 0:r[0];s!=null&&((t=t.clone()).geometry=s);const u=S({...e.query,f:"json",...J(t)});return c(l(e.path,"queryBins"),{...a,query:{...u,...a.query}})}async function b(n,t,a){const{data:e}=await N(p(n),g.from(t),a);return d.fromJSON(e)}export{b as executeBinsQuery};

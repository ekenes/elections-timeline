import{ck as _,cl as w,cm as y,cn as I,co as T,bU as V,am as H,c2 as n,cp as g,c1 as v,$ as C,r as c,q as f,w as q}from"./index-02eff6e6.js";import"./floatRGBA-7569b6cb.js";import"./UpdateTracking2D-9382ce27.js";import"./GeometryUtils-2ffbfd16.js";import"./OverrideHelper-6c639819.js";import"./Container-d78f5667.js";import"./WGLContainer-11b1375d.js";import"./Program-99848a7b.js";import"./LabelMetric-d84c9df1.js";import"./StyleDefinition-c67e7208.js";import"./enums-fb086c25.js";import"./GridShader-23149381.js";import"./GraphShaderModule-f9d77490.js";import"./FeatureCommandQueue-c39cbc74.js";import"./PieChartMeshWriter-e8a91d04.js";import"./renderState-95c3e7c2.js";import"./interfaces-d79e913c.js";import"./testSVGPremultipliedAlpha-03ca3c37.js";import{E as U}from"./GraphicsView2D-8809fff6.js";import"./earcut-5a6c70eb.js";import"./vec3f32-ad1dc57f.js";import{r as b,o,n as d}from"./imageUtils-ff5fa50e.js";import{j as Q,y as $}from"./LayerView-d36db7e7.js";import{h as S}from"./HighlightGraphicContainer-53b9c2e0.js";import{i as L}from"./RefreshableLayerView-25d4df13.js";import{_ as P,R as k}from"./MapServiceLayerViewHelper-425e6346.js";import{r as E}from"./drapedUtils-bb0c8406.js";import"./BidiEngine-664145a5.js";import"./rasterizingUtils-286ec3de.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-75dcba1a.js";import"./ProgramTemplate-a13faaa7.js";import"./VertexElementDescriptor-2925c6af.js";import"./BufferObject-3b583792.js";import"./VertexArrayObject-98edc4cc.js";import"./config-1337d16e.js";import"./featureConversionUtils-aa6583e8.js";import"./CircularArray-50add9d1.js";import"./AttributeStore-2c7fbf9b.js";import"./queryUtils-60c4a6a9.js";import"./json-48e3ea08.js";import"./timeSupport-4d47519e.js";import"./BindType-d21d71dd.js";import"./Util-dd4663f8.js";import"./Technique-ab058c0a.js";import"./TurboLine-e5d21c05.js";import"./utils-fc5bca97.js";import"./basicInterfaces-cbf2757f.js";import"./normalizeUtilsSync-734347b1.js";import"./dehydratedFeatures-f5766108.js";import"./BitmapTechnique-d8d8de81.js";import"./TileContainer-3b668984.js";import"./AGraphicContainer-6366aa45.js";import"./TechniqueInstance-ced5da48.js";import"./scaleUtils-193f4a52.js";import"./floorFilterUtils-080a7cd2.js";import"./sublayerUtils-799a6afa.js";import"./popupUtils-d22362f2.js";const F=[0,0];let l=class extends L(b(Q($))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new _,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(t){var e;this._fetchQueue.pause(),this._fetchQueue.state=t.state,this._tileStrategy.update(t),this._fetchQueue.resume(),(e=this._highlightView)==null||e.processUpdate(t)}attach(){const t="tileServers"in this.layer?this.layer.tileServers:null,e=this.tilemapCache;if(this._tileInfoView=new w(this.layer.tileInfo,this.layer.fullExtent,e==null?void 0:e.effectiveMinLOD,e==null?void 0:e.effectiveMaxLOD),this._fetchQueue=new y({tileInfoView:this._tileInfoView,concurrency:t&&10*t.length||10,process:(i,h)=>this.fetchTile(i,h),scheduler:this.scheduler,priority:I.MAPVIEW_FETCH_QUEUE}),this._tileStrategy=new T({cachePolicy:"keep",resampling:this.resampling,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),P(this,this.layer)){const i=this._highlightView=new U({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new S(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new k({createFetchPopupFeaturesQueryGeometry:(h,s)=>E(h,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(h,s)=>{i.graphicUpdateHandler({graphic:h,property:s})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){var t,e;super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),(t=this._popupHighlightHelper)==null||t.destroy(),(e=this._highlightView)==null||e.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeaturesAtLocation(t,e){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,e):[]}highlight(t){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(t):V()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){var e;return H((e=this.layer.tileInfo)==null?void 0:e.spatialReference,t)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(t=>this._updatingHandles.addPromise(this._enqueueTileFetch(t)))}}acquireTile(t){const e=this._bitmapView.createTile(t),i=e.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(F,e.key),i.resolution=this._tileInfoView.getTileResolution(e.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(e)),this._bitmapView.addChild(e),this.requestUpdate(),e}releaseTile(t){this._fetchQueue.abort(t.key.id),this._bitmapView.removeChild(t),t.once("detach",()=>t.destroy()),this.requestUpdate()}async fetchTile(t,e={}){return this.tilemapCache?this._fetchTileWithTilemapCache(t,e):this._fetchTileWithoutTilemapCache(t,e)}async _fetchTileWithoutTilemapCache(t,e={}){const{signal:i,resamplingLevel:h=0}=e;try{return await this._fetchImage(t,i)}catch(s){if(n(s))throw s;if(!this.resampling)return o(this._tileInfoView.tileInfo.size);if(h<3){const r=this._tileInfoView.getTileParentId(t.id);if(r){const a=new g(r),p=await this._fetchTileWithoutTilemapCache(a,{...e,resamplingLevel:h+1});return d(this._tileInfoView,p,a,t)}}return o(this._tileInfoView.tileInfo.size)}}async _fetchTileWithTilemapCache(t,e={}){const i=this.tilemapCache,{signal:h,resamplingLevel:s=0}=e,r=new g(0,0,0,0);let a,p=null;try{if(p=await i.fetchAvailabilityUpsample(t.level,t.row,t.col,r,{signal:h}),!this.resampling&&r.level!==t.level)return await v(e),o(this._tileInfoView.tileInfo.size);a=await this._fetchImage(r,h)}catch(m){if(n(m))throw m;if(this.resampling&&p==="unknown"&&s<3){const u=this._tileInfoView.getTileParentId(t.id);if(u){r.set(u);try{a=await this._fetchTileWithTilemapCache(r,{...e,resamplingLevel:s+1})}catch{}}}}return a?this.resampling?d(this._tileInfoView,a,r,t):a:o(this._tileInfoView.tileInfo.size)}async _enqueueTileFetch(t){if(!this._fetchQueue.has(t.key.id)){try{const e=await this._fetchQueue.push(t.key);t.bitmap.source=e,t.bitmap.width=this._tileInfoView.tileInfo.size[0],t.bitmap.height=this._tileInfoView.tileInfo.size[1],t.once("attach",()=>this.requestUpdate())}catch(e){n(e)||C.getLogger(this).error(e)}this.requestUpdate()}}async _fetchImage(t,e){return this.layer.fetchImageBitmapTile(t.level,t.row,t.col,{signal:e})}};c([f()],l.prototype,"resampling",null),c([f()],l.prototype,"tilemapCache",null),l=c([q("esri.views.2d.layers.TileLayerView2D")],l);const Rt=l;export{Rt as default};

import{iK as m,bJ as u,U as d,kD as C,kE as g}from"./index-02eff6e6.js";import"./mat4f64-9a8384aa.js";import"./projectVectorToVector-e55b88e0.js";import"./sphere-098e4920.js";import{I as h}from"./I3SBinaryReader-aa5e0c58.js";import"./floatRGBA-7569b6cb.js";import"./NormalAttribute.glsl-335d8cbf.js";import"./interfaces-d79e913c.js";import"./BindType-d21d71dd.js";import"./VertexAttribute-c957ed9e.js";import{I as A}from"./orientedBoundingBox-e085098f.js";var e;(function(n){n[n.TRANSPARENT=0]="TRANSPARENT",n[n.OPAQUE=1]="OPAQUE"})(e||(e={}));var S;(function(n){n[n.Uniform=0]="Uniform",n[n.Varying=1]="Varying",n[n.COUNT=2]="COUNT"})(S||(S={}));var E,I;(function(n){n[n.Solid=0]="Solid",n[n.Sketch=1]="Sketch",n[n.Mixed=2]="Mixed",n[n.COUNT=3]="COUNT"})(E||(E={})),function(n){n[n.REGULAR=0]="REGULAR",n[n.SILHOUETTE=1]="SILHOUETTE"}(I||(I={}));function D(n){return{...P,...n,type:E.Solid}}const P={color:m(0,0,0,.2),size:1,extensionLength:0,opacity:1,objectTransparency:e.OPAQUE,hasSlicePlane:!1};m(0,0,0,.2),e.OPAQUE;u();var p;async function H(n,a,t,N,U,R,y,s){const c=[];for(const r of a)if(r&&U.includes(r.name)){const o=`${n}/nodes/${t}/attributes/${r.key}/0`;c.push({url:o,storageInfo:r})}const f=await Promise.allSettled(c.map(r=>d(r.url,{responseType:"array-buffer",query:{...y,token:R},signal:s==null?void 0:s.signal}).then(o=>h(r.storageInfo,o.data)))),T=[];for(const r of N){const o={};for(let i=0;i<f.length;i++){const l=f[i];if(l.status==="fulfilled"){const O=l.value;o[c[i].storageInfo.name]=k(O,r)}}T.push(o)}return T}(function(n){n[n.OUTSIDE=0]="OUTSIDE",n[n.INTERSECTS_CENTER_OUTSIDE=1]="INTERSECTS_CENTER_OUTSIDE",n[n.INTERSECTS_CENTER_INSIDE=2]="INTERSECTS_CENTER_INSIDE",n[n.INSIDE=3]="INSIDE"})(p||(p={}));const x=-32768,_=-(2**31);function k(n,a){if(!n)return null;const t=n[a];return C(n)?t===x?null:t:g(n)?t===_?null:t:t!=t?null:t}D({color:[0,0,0,0],opacity:0});u();u();new A;new Array(72);export{H as V};

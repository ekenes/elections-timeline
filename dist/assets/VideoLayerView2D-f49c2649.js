import{O as h,D as r,C as o,v as m,P as n,n as a,q as p,t as l}from"./index-1f15e2a2.js";import{h as c}from"./GraphicsLayer-66bf3499.js";import{f as y,d as g}from"./LayerView-15a4e0f5.js";import{i as d}from"./GraphicContainer-b22b7e37.js";import{r as f}from"./GraphicsView2D-38462064.js";import"./Container-d2f2c176.js";import"./definitions-40f22228.js";import"./enums-b14466b3.js";import"./Texture-25531b97.js";import"./color-1b578471.js";import"./enums-5e76797f.js";import"./VertexElementDescriptor-2925c6af.js";import"./BaseGraphicContainer-17d115f7.js";import"./FeatureContainer-5303cd07.js";import"./AttributeStoreView-289c53be.js";import"./TiledDisplayObject-abc2e51a.js";import"./WGLContainer-5ccaed96.js";import"./FramebufferObject-8caf3a55.js";import"./ProgramTemplate-4b117714.js";import"./GeometryUtils-54bea2e3.js";import"./StyleDefinition-4732b9f0.js";import"./config-1337d16e.js";import"./earcut-a789ad67.js";import"./featureConversionUtils-cea8e812.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./visualVariablesUtils-cbc3edaa.js";import"./ExpandedCIM-40290d29.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./utils-c0ff2e7b.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-19d45950.js";import"./floatRGBA-9f83b377.js";import"./util-a3e76737.js";import"./TileContainer-6edbbb19.js";import"./vec3f32-2da9db36.js";import"./normalizeUtils-bfddb35c.js";import"./normalizeUtilsCommon-ef5c4fb2.js";import"./utils-22dd68a0.js";import"./normalizeUtilsSync-6e98b71c.js";import"./projectionSupport-66fcb1d9.js";import"./json-48e3ea08.js";import"./Matcher-0219683a.js";import"./tileUtils-c2f19f52.js";import"./TurboLine-e526a416.js";import"./ComputedAttributeStorage-70c6e514.js";import"./arcadeTimeUtils-524551a1.js";import"./executionError-c92d3b85.js";const t=new h([255,127,0]);let s=class extends y(g){constructor(){super(...arguments),this._graphicsLayer=new c,this._frameOutlineGraphic=new r({symbol:{type:"simple-fill",outline:{type:"simple-line",color:t}}}),this._sensorTrailGraphic=new r({symbol:{type:"simple-line",color:t}}),this._lineOfSightGraphic=new r({symbol:{type:"simple-line",color:t}}),this._sensorLocationGraphic=new r({symbol:{type:"simple-marker",color:t}}),this._frameCenterGraphic=new r({symbol:{type:"simple-marker",color:t}}),this.layer=null}destroy(){this._graphicsLayer=o(this._graphicsLayer)}initialize(){this._graphicsLayer.graphics.addMany([this._frameOutlineGraphic,this._sensorTrailGraphic,this._lineOfSightGraphic,this._sensorLocationGraphic,this._frameCenterGraphic])}attach(){this.graphicsView=new f({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this._graphicsLayer.graphics,container:new d(this.view.featuresTilingScheme)}),this.container.addChild(this.graphicsView.container),this.addAttachHandles(this._graphicsLayer.on("graphic-update",this.graphicsView.graphicUpdateHandler)),this.addAttachHandles([m(()=>[this.layer.telemetry,this.layer.telemetryDisplay],()=>this._updateGraphicGeometries(),n)])}detach(){this.container.removeAllChildren(),this.graphicsView=o(this.graphicsView)}supportsSpatialReference(i){return!0}moveStart(){}moveEnd(){}viewChange(){this.graphicsView.viewChange()}update(i){this.graphicsView.processUpdate(i)}isUpdating(){return!this.graphicsView||this.graphicsView.updating}_updateGraphicGeometries(){const{telemetry:i,telemetryDisplay:e}=this.layer;i&&e&&(e.frameOutline&&i.frameOutline&&(this._frameOutlineGraphic.geometry=this.layer.telemetry.frameOutline),e.sensorTrail&&i.sensorTrail&&(this._sensorTrailGraphic.geometry=this.layer.telemetry.sensorTrail),e.lineOfSight&&i.lineOfSight&&(this._lineOfSightGraphic.geometry=this.layer.telemetry.lineOfSight),e.sensorLocation&&i.sensorLocation&&(this._sensorLocationGraphic.geometry=this.layer.telemetry.sensorLocation),e.frameCenter&&i.frameCenter&&(this._frameCenterGraphic.geometry=this.layer.telemetry.frameCenter))}};a([p()],s.prototype,"graphicsView",void 0),a([p()],s.prototype,"layer",void 0),s=a([l("esri.views.2d.layers.VideoLayerView2D")],s);const ci=s;export{ci as default};

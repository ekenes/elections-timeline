import{cB as o,cC as g,ai as m,ah as l,F as c,bU as p,r as a,q as n,w as d}from"./index-c2b82012.js";import{j as u,y as w}from"./LayerView-ace10d7b.js";import{t as y}from"./GraphicContainer-d81570de.js";import{E as V}from"./GraphicsView2D-4cb35ce4.js";import{e as f}from"./HighlightCounter-1545a2fb.js";import"./Container-85c30097.js";import"./AGraphicContainer-14ec59fd.js";import"./TechniqueInstance-8f8ce2b5.js";import"./UpdateTracking2D-a65165ee.js";import"./BidiEngine-664145a5.js";import"./GeometryUtils-5f5af29a.js";import"./rasterizingUtils-6d8cb0df.js";import"./floatRGBA-2ce8f0e0.js";import"./Rect-ea14f53a.js";import"./LabelMetric-35fbf92a.js";import"./Program-ff225c8c.js";import"./BufferObject-23420596.js";import"./VertexElementDescriptor-2925c6af.js";import"./GraphShaderModule-a76de040.js";import"./BindType-d21d71dd.js";import"./Util-c10fdb8c.js";import"./TileContainer-a92d9022.js";import"./WGLContainer-2b88a075.js";import"./ProgramTemplate-d4683e34.js";import"./VertexArrayObject-90da6de3.js";import"./vec3f32-ad1dc57f.js";import"./StyleDefinition-78148d76.js";import"./config-1337d16e.js";import"./earcut-5a6c70eb.js";import"./featureConversionUtils-65314b0a.js";import"./FeatureCommandQueue-dc3f33e4.js";import"./Technique-fcb14129.js";import"./OverrideHelper-36bacf81.js";import"./quantizationUtils-4fcc7d14.js";import"./AttributeStore-33c4fe48.js";import"./queryUtils-4b8111ed.js";import"./json-48e3ea08.js";import"./timeSupport-bd090459.js";import"./normalizeUtilsSync-42b7bca4.js";import"./dehydratedFeatures-5f6a9a8f.js";let s=class extends u(w){constructor(){super(...arguments),this._highlightCounter=new f}attach(){this.graphicsView=new V({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new y(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),o(()=>{var i;return(i=this.layer)==null?void 0:i.visible},()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()})]),this._updateHighlights()}detach(){this.container.removeAllChildren(),this.graphicsView=g(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t="default"){let r;typeof i=="number"?r=[i]:i instanceof m?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):l.isCollection(i)&&i.length>0&&(r=i.map(h=>h&&h.uid).toArray());const e=r==null?void 0:r.filter(c);return e!=null&&e.length?(this._addHighlight(e,t),p(()=>this._removeHighlight(e,t))):p()}_addHighlight(i,t){this._highlightCounter.addGroup(i,t),this._updateHighlights()}_removeHighlight(i,t){this._highlightCounter.deleteGroup(i,t),this._updateHighlights()}_updateHighlights(){var t;const i=[];for(const r of this._highlightCounter.ids()){const e=this._highlightCounter.getHighlightGroups(r),h=this._getHighlightBits(e);i.push({objectId:r,highlightFlags:h})}(t=this.graphicsView)==null||t.setHighlight(i)}};a([n()],s.prototype,"graphicsView",void 0),s=a([d("esri.views.2d.layers.GraphicsLayerView2D")],s);const pi=s;export{pi as default};

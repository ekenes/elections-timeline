import{f as l}from"./utils-21f560fb.js";import{a1 as y}from"./index-ee4f50bd.js";import{t as p}from"./query-b0550d69.js";import{d as j}from"./FeatureSet-0efa5877.js";import f from"./RelationshipQuery-b1d55e74.js";import"./normalizeUtils-7a70564e.js";import"./normalizeUtilsCommon-527157a0.js";import"./pbfQueryUtils-1672999e.js";import"./pbf-c01caecc.js";import"./OptimizedGeometry-33b2eb0d.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./queryZScale-57cbab0b.js";import"./Field-e1e55903.js";import"./fieldType-45f5bea8.js";import"./Query-639ad700.js";function R(r,t){const e=r.toJSON();return e.objectIds&&(e.objectIds=e.objectIds.join(",")),e.orderByFields&&(e.orderByFields=e.orderByFields.join(",")),e.outFields&&!(t!=null&&t.returnCountOnly)?e.outFields.includes("*")?e.outFields="*":e.outFields=e.outFields.join(","):delete e.outFields,e.outSpatialReference&&(e.outSR=e.outSR.wkid||JSON.stringify(e.outSR.toJSON()),delete e.outSpatialReference),e.dynamicDataSource&&(e.layer=JSON.stringify({source:e.dynamicDataSource}),delete e.dynamicDataSource),e}async function S(r,t,e){const n=await m(r,t,e),o=n.data,i=o.geometryType,a=o.spatialReference,s={};for(const c of o.relatedRecordGroups){const d={fields:void 0,objectIdFieldName:void 0,geometryType:i,spatialReference:a,hasZ:!!o.hasZ,hasM:!!o.hasM,features:c.relatedRecords};if(c.objectId!=null)s[c.objectId]=d;else for(const u of Object.keys(c))u!=="relatedRecords"&&(s[c[u]]=d)}return{...n,data:s}}async function F(r,t,e){const n=await m(r,t,e,{returnCountOnly:!0}),o=n.data,i={};for(const a of o.relatedRecordGroups)a.objectId!=null&&(i[a.objectId]=a.count);return{...n,data:i}}async function m(r,t,e={},n){const o=p({...r.query,f:"json",...n,...R(t,n)});return y(r.path+"/queryRelatedRecords",{...e,query:{...e.query,...o}})}async function v(r,t,e){t=f.from(t);const n=l(r);return S(n,t,e).then(o=>{const i=o.data,a={};return Object.keys(i).forEach(s=>a[s]=j.fromJSON(i[s])),a})}async function G(r,t,e){t=f.from(t);const n=l(r);return F(n,t,{...e}).then(o=>o.data)}export{v as executeRelationshipQuery,G as executeRelationshipQueryForCount};

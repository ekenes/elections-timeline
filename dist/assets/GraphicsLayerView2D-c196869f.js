import{cB as o,cC as g,ai as m,ah as l,F as c,bU as p,r as a,q as n,w as d}from"./index-02eff6e6.js";import{j as u,y as w}from"./LayerView-d36db7e7.js";import{t as y}from"./GraphicContainer-06aaa813.js";import{E as V}from"./GraphicsView2D-8809fff6.js";import{e as f}from"./HighlightCounter-1545a2fb.js";import"./Container-d78f5667.js";import"./AGraphicContainer-6366aa45.js";import"./TechniqueInstance-ced5da48.js";import"./UpdateTracking2D-9382ce27.js";import"./BidiEngine-664145a5.js";import"./GeometryUtils-2ffbfd16.js";import"./rasterizingUtils-286ec3de.js";import"./floatRGBA-7569b6cb.js";import"./Rect-ea14f53a.js";import"./LabelMetric-d84c9df1.js";import"./Program-99848a7b.js";import"./BufferObject-3b583792.js";import"./VertexElementDescriptor-2925c6af.js";import"./GraphShaderModule-f9d77490.js";import"./BindType-d21d71dd.js";import"./Util-dd4663f8.js";import"./TileContainer-3b668984.js";import"./WGLContainer-11b1375d.js";import"./ProgramTemplate-a13faaa7.js";import"./VertexArrayObject-98edc4cc.js";import"./vec3f32-ad1dc57f.js";import"./StyleDefinition-c67e7208.js";import"./config-1337d16e.js";import"./earcut-5a6c70eb.js";import"./featureConversionUtils-aa6583e8.js";import"./FeatureCommandQueue-c39cbc74.js";import"./Technique-ab058c0a.js";import"./OverrideHelper-6c639819.js";import"./quantizationUtils-75dcba1a.js";import"./AttributeStore-2c7fbf9b.js";import"./queryUtils-60c4a6a9.js";import"./json-48e3ea08.js";import"./timeSupport-4d47519e.js";import"./normalizeUtilsSync-734347b1.js";import"./dehydratedFeatures-f5766108.js";let s=class extends u(w){constructor(){super(...arguments),this._highlightCounter=new f}attach(){this.graphicsView=new V({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new y(this.view.featuresTilingScheme),layerId:this.layer.id}),this.container.addChild(this.graphicsView.container),this.addAttachHandles([this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),o(()=>{var i;return(i=this.layer)==null?void 0:i.visible},()=>{this.graphicsView.update({state:this.view.state}),this.graphicsView.pushUpdate()})]),this._updateHighlights()}detach(){this.container.removeAllChildren(),this.graphicsView=g(this.graphicsView)}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(t=>({type:"graphic",graphic:t,mapPoint:i,layer:this.layer})):null}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i,t="default"){let r;typeof i=="number"?r=[i]:i instanceof m?r=[i.uid]:Array.isArray(i)&&i.length>0?r=typeof i[0]=="number"?i:i.map(h=>h&&h.uid):l.isCollection(i)&&i.length>0&&(r=i.map(h=>h&&h.uid).toArray());const e=r==null?void 0:r.filter(c);return e!=null&&e.length?(this._addHighlight(e,t),p(()=>this._removeHighlight(e,t))):p()}_addHighlight(i,t){this._highlightCounter.addGroup(i,t),this._updateHighlights()}_removeHighlight(i,t){this._highlightCounter.deleteGroup(i,t),this._updateHighlights()}_updateHighlights(){var t;const i=[];for(const r of this._highlightCounter.ids()){const e=this._highlightCounter.getHighlightGroups(r),h=this._getHighlightBits(e);i.push({objectId:r,highlightFlags:h})}(t=this.graphicsView)==null||t.setHighlight(i)}};a([n()],s.prototype,"graphicsView",void 0),s=a([d("esri.views.2d.layers.GraphicsLayerView2D")],s);const pi=s;export{pi as default};

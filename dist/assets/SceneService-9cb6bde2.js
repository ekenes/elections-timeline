import{W as v,s as h,d8 as q,h1 as V,cD as k,ed as M,gT as O,n as F,q as p,t as d,cR as C,b6 as b,bq as f,aT as _,g_ as z,cT as J,dj as D,v as B,ec as Z,fL as G,p as H,h2 as W,h3 as Q,h4 as X,as as T,aq as Y,ar as A}from"./index-10102046.js";import{i as N}from"./originUtils-1469eeaf.js";import{getSiblingOfSameTypeI as ee,contentToBlob as K}from"./resourceUtils-2545fe59.js";async function te(o,s,e,t,a,r){let i=null;if(e!=null){const u=`${o}/nodepages/`,y=u+Math.floor(e.rootIndex/e.nodesPerPage);try{return{type:"page",rootPage:(await v(y,{query:{f:"json",token:t},responseType:"json",signal:r})).data,rootIndex:e.rootIndex,pageSize:e.nodesPerPage,lodMetric:e.lodSelectionMetricType,urlPrefix:u}}catch(c){a!=null&&a.warn("#fetchIndexInfo()","Failed to load root node page. Falling back to node documents.",y,c),i=c}}if(!s)return null;const l=`${o}/nodes/`,n=l+(s&&s.split("/").pop());try{return{type:"node",rootNode:(await v(n,{query:{f:"json",token:t},responseType:"json",signal:r})).data,urlPrefix:l}}catch(u){throw new h("sceneservice:root-node-missing","Root node missing.",{pageError:i,nodeError:u,url:n})}}let re=null;function ae(){return re}async function oe(o,s,e=null){const t=await $(o,s,e);await P(t,s,e)}async function se(o,s,e,t,a=null){const r=await $(e,t,a);await o.update({data:s}),await P(r,t,a)}async function $(o,s,e=null){if(!s||!s.resources)return;const t=s.portalItem===o.portalItem?new Set(o.paths):new Set;o.paths.length=0,o.portalItem=s.portalItem;const a=new Set(s.resources.toKeep.map(n=>n.resource.path)),r=new Set,i=[];a.forEach(n=>{t.delete(n),o.paths.push(n)});for(const n of s.resources.toUpdate)if(t.delete(n.resource.path),a.has(n.resource.path)||r.has(n.resource.path)){const{resource:u,content:y,finish:c,error:x}=n,w=ee(u,q());o.paths.push(w.path),i.push(E({resource:w,content:y,compress:n.compress,finish:c,error:x},e))}else o.paths.push(n.resource.path),i.push(ie(n,e)),r.add(n.resource.path);for(const n of s.resources.toAdd)o.paths.push(n.resource.path),t.has(n.resource.path)?t.delete(n.resource.path):i.push(E(n,e));if(i.length===0)return t;const l=await V(i);if(k(e),l.length>0)throw new h("save:resources","Failed to save one or more resources",{errors:l});return t}async function P(o,s,e=null){if(!o||!s.portalItem)return;const t=[];for(const a of o){const r=s.portalItem.resourceFromPath(a);t.push(r.portalItem.removeResource(r,e))}await M(t)}async function E(o,s){var a,r;const e={...s??{},compress:o.compress},t=await O(o.resource.portalItem.addResource(o.resource,await K(o.content),e));if(t.ok!==!0)throw(a=o.error)==null||a.call(o,t.error),t.error;(r=o.finish)==null||r.call(o,o.resource)}async function ie(o,s){var t,a;const e=await O(o.resource.update(await K(o.content),s));if(e.ok!==!0)throw(t=o.error)==null||t.call(o,e.error),e.error;(a=o.finish)==null||a.call(o,o.resource)}const U="esri.layers.mixins.SceneService",m=F.getLogger(U),ce=o=>{let s=class extends o{constructor(){super(...arguments),this.spatialReference=null,this.fullExtent=null,this.heightModelInfo=null,this.minScale=0,this.maxScale=0,this.version={major:Number.NaN,minor:Number.NaN,versionString:""},this.copyright=null,this.sublayerTitleMode="item-title",this.title=null,this.layerId=null,this.indexInfo=null,this._debouncedSaveOperations=Z(async(e,t,a)=>{switch(e){case I.SAVE:return this._save(t);case I.SAVE_AS:return this._saveAs(a,t)}})}readSpatialReference(e,t){return this._readSpatialReference(t)}_readSpatialReference(e){if(e.spatialReference!=null)return b.fromJSON(e.spatialReference);{const t=e.store,a=t.indexCRS||t.geographicCRS,r=a&&parseInt(a.substring(a.lastIndexOf("/")+1,a.length),10);return r!=null?new b(r):null}}readFullExtent(e,t,a){if(e!=null&&typeof e=="object"){const l=e.spatialReference==null?{...e,spatialReference:this._readSpatialReference(t)}:e;return _.fromJSON(l,a)}const r=t.store,i=this._readSpatialReference(t);return i==null||r==null||r.extent==null||!Array.isArray(r.extent)||r.extent.some(l=>l<R)?null:new _({xmin:r.extent[0],ymin:r.extent[1],xmax:r.extent[2],ymax:r.extent[3],spatialReference:i})}parseVersionString(e){const t={major:Number.NaN,minor:Number.NaN,versionString:e},a=e.split(".");return a.length>=2&&(t.major=parseInt(a[0],10),t.minor=parseInt(a[1],10)),t}readVersion(e,t){const a=t.store,r=a.version!=null?a.version.toString():"";return this.parseVersionString(r)}readTitlePortalItem(e){return this.sublayerTitleMode!=="item-title"?void 0:e}readTitleService(e,t){const a=this.portalItem&&this.portalItem.title;if(this.sublayerTitleMode==="item-title")return G(this.url,t.name);let r=t.name;if(!r&&this.url){const i=H(this.url);i!=null&&(r=i.title)}return this.sublayerTitleMode==="item-title-and-service-name"&&a&&(r=a+" - "+r),W(r)}set url(e){const t=Q({layer:this,url:e,nonStandardUrlAllowed:!1,logger:m});this._set("url",t.url),t.layerId!=null&&this._set("layerId",t.layerId)}writeUrl(e,t,a,r){X(this,e,"layers",t,r)}get parsedUrl(){const e=this._get("url"),t=T(e);return this.layerId!=null&&(t.path=`${t.path}/layers/${this.layerId}`),t}async _fetchIndexAndUpdateExtent(e,t){this.indexInfo=te(this.parsedUrl.path,this.rootNode,e,this.apiKey,m,t),this.fullExtent==null||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)}_updateExtent(e){var t,a,r;if((e==null?void 0:e.type)==="page"){const i=e.rootIndex%e.pageSize,l=(a=(t=e.rootPage)==null?void 0:t.nodes)==null?void 0:a[i];if(l==null||l.obb==null||l.obb.center==null||l.obb.halfSize==null)throw new h("sceneservice:invalid-node-page","Invalid node page.");if(l.obb.center[0]<R||this.fullExtent==null||this.fullExtent.hasZ)return;const n=l.obb.halfSize,u=l.obb.center[2],y=Math.sqrt(n[0]*n[0]+n[1]*n[1]+n[2]*n[2]);this.fullExtent.zmin=u-y,this.fullExtent.zmax=u+y}else if((e==null?void 0:e.type)==="node"){const i=(r=e.rootNode)==null?void 0:r.mbs;if(!Array.isArray(i)||i.length!==4||i[0]<R)return;const l=i[2],n=i[3],{fullExtent:u}=this;u&&(u.zmin=l-n,u.zmax=l+n)}}async _fetchService(e){if(this.url==null)throw new h("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(this.layerId==null&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);t!=null&&(this.layerId=t)}return this._fetchServiceLayer(e)}async _fetchFirstLayerId(e){const t=await v(this.url,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});if(t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0)return t.data.layers[0].id}async _fetchServiceLayer(e){var i;const t=await v(((i=this.parsedUrl)==null?void 0:i.path)??"",{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let a=!1;if(t.data.layerType&&t.data.layerType==="Voxel"&&(a=!0),a)return this._fetchVoxelServiceLayer();const r=t.data;this.read(r,this._getServiceContext()),this.validateLayer(r)}async _fetchVoxelServiceLayer(e){var a;const t=(await v(((a=this.parsedUrl)==null?void 0:a.path)+"/layer",{query:{f:"json",token:this.apiKey},responseType:"json",signal:e})).data;this.read(t,this._getServiceContext()),this.validateLayer(t)}_getServiceContext(){var e;return{origin:"service",portalItem:this.portalItem,portal:(e=this.portalItem)==null?void 0:e.portal,url:this.parsedUrl}}async _ensureLoadBeforeSave(){await this.load(),"beforeSave"in this&&typeof this.beforeSave=="function"&&await this.beforeSave()}validateLayer(e){}_updateTypeKeywords(e,t,a){e.typeKeywords||(e.typeKeywords=[]);const r=t.getTypeKeywords();for(const i of r)e.typeKeywords.push(i);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter((i,l,n)=>n.indexOf(i)===l),a===g.newItem&&(e.typeKeywords=e.typeKeywords.filter(i=>i!=="Hosted Service")))}async _saveAs(e,t){var u;const a={...j,...t};let r=Y.from(e);r||(m.error("_saveAs(): requires a portal item parameter"),await Promise.reject(new h("sceneservice:portal-item-required","_saveAs() requires a portal item to save to"))),r.id&&(r=r.clone(),r.id=null);const i=r.portal||A.getDefault();await this._ensureLoadBeforeSave(),r.type=S,r.portal=i;const l={origin:"portal-item",url:null,messages:[],portal:i,portalItem:r,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},n={layers:[this.write({},l)]};return await Promise.all(l.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(n,l,a),r.url=this.url,r.title||(r.title=this.title),this._updateTypeKeywords(r,a,g.newItem),await i.signIn(),await((u=i.user)==null?void 0:u.addItem({item:r,folder:a&&a.folder,data:n})),await oe(this.resourceReferences,l,null),this.portalItem=r,N(l),l.portalItem=r,r}async _save(e){const t={...j,...e};if(!this.portalItem)throw m.error("_save(): requires the .portalItem property to be set"),new h("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService");if(this.portalItem.type!==S)throw m.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+", expected "+S),new h("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${S}"`);await this._ensureLoadBeforeSave();const a={origin:"portal-item",url:this.portalItem.itemUrl&&T(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||A.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},r={layers:[this.write({},a)]};return await Promise.all(a.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(r,a,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,g.existingItem),await se(this.portalItem,r,this.resourceReferences,a,null),N(a),this.portalItem}async _validateAgainstJSONSchema(e,t,a){var u,y;let r=((u=t.messages)==null?void 0:u.filter(c=>c.type==="error").map(c=>new h(c.name,c.message,c.details)))??[];(y=a==null?void 0:a.validationOptions)!=null&&y.ignoreUnsupported&&(r=r.filter(c=>c.name!=="layer:unsupported"&&c.name!=="symbol:unsupported"&&c.name!=="symbol-layer:unsupported"&&c.name!=="property:unsupported"&&c.name!=="url:unsupported"&&c.name!=="scenemodification:unsupported"));const i=a==null?void 0:a.validationOptions,l=i==null?void 0:i.enabled,n=ae();if(l&&n){const c=(await n()).validate(e,a.portalItemLayerType);if(c.length>0){const x=`Layer item did not validate:
${c.join(`
`)}`;if(m.error(`_validateAgainstJSONSchema(): ${x}`),i.failPolicy==="throw"){const w=c.map(L=>new h("sceneservice:schema-validation",L)).concat(r);throw new h("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:w})}}}if(r.length>0)throw new h("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:r})}};return p([d(C)],s.prototype,"id",void 0),p([d({type:b})],s.prototype,"spatialReference",void 0),p([f("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],s.prototype,"readSpatialReference",null),p([d({type:_})],s.prototype,"fullExtent",void 0),p([f("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],s.prototype,"readFullExtent",null),p([d({readOnly:!0,type:z})],s.prototype,"heightModelInfo",void 0),p([d({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],s.prototype,"minScale",void 0),p([d({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],s.prototype,"maxScale",void 0),p([d({readOnly:!0})],s.prototype,"version",void 0),p([f("version",["store.version"])],s.prototype,"readVersion",null),p([d({type:String,json:{read:{source:"copyrightText"}}})],s.prototype,"copyright",void 0),p([d({type:String,json:{read:!1}})],s.prototype,"sublayerTitleMode",void 0),p([d({type:String})],s.prototype,"title",void 0),p([f("portal-item","title")],s.prototype,"readTitlePortalItem",null),p([f("service","title",["name"])],s.prototype,"readTitleService",null),p([d({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],s.prototype,"layerId",void 0),p([d(J)],s.prototype,"url",null),p([D("url")],s.prototype,"writeUrl",null),p([d()],s.prototype,"parsedUrl",null),p([d({readOnly:!0})],s.prototype,"store",void 0),p([d({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],s.prototype,"rootNode",void 0),s=p([B(U)],s),s},R=-1e38;var g;(function(o){o[o.existingItem=0]="existingItem",o[o.newItem=1]="newItem"})(g||(g={}));const S="Scene Service",j={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};var I;(function(o){o[o.SAVE=0]="SAVE",o[o.SAVE_AS=1]="SAVE_AS"})(I||(I={}));export{ce as E,I as L,te as r};
